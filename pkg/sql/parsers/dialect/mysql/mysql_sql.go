// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const SELECT = 57352
const STREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const SECOND = 57671
const ASCII = 57672
const COALESCE = 57673
const COLLATION = 57674
const HOUR = 57675
const MICROSECOND = 57676
const MINUTE = 57677
const MONTH = 57678
const QUARTER = 57679
const REPEAT = 57680
const REVERSE = 57681
const ROW_COUNT = 57682
const WEEK = 57683
const REVOKE = 57684
const FUNCTION = 57685
const PRIVILEGES = 57686
const TABLESPACE = 57687
const EXECUTE = 57688
const SUPER = 57689
const GRANT = 57690
const OPTION = 57691
const REFERENCES = 57692
const REPLICATION = 57693
const SLAVE = 57694
const CLIENT = 57695
const USAGE = 57696
const RELOAD = 57697
const FILE = 57698
const TEMPORARY = 57699
const ROUTINE = 57700
const EVENT = 57701
const SHUTDOWN = 57702
const NULLX = 57703
const AUTO_INCREMENT = 57704
const APPROXNUM = 57705
const SIGNED = 57706
const UNSIGNED = 57707
const ZEROFILL = 57708
const ENGINES = 57709
const LOW_CARDINALITY = 57710
const AUTOEXTEND_SIZE = 57711
const ADMIN_NAME = 57712
const RANDOM = 57713
const SUSPEND = 57714
const ATTRIBUTE = 57715
const HISTORY = 57716
const REUSE = 57717
const CURRENT = 57718
const OPTIONAL = 57719
const FAILED_LOGIN_ATTEMPTS = 57720
const PASSWORD_LOCK_TIME = 57721
const UNBOUNDED = 57722
const SECONDARY = 57723
const RESTRICTED = 57724
const USER = 57725
const IDENTIFIED = 57726
const CIPHER = 57727
const ISSUER = 57728
const X509 = 57729
const SUBJECT = 57730
const SAN = 57731
const REQUIRE = 57732
const SSL = 57733
const NONE = 57734
const PASSWORD = 57735
const SHARED = 57736
const EXCLUSIVE = 57737
const MAX_QUERIES_PER_HOUR = 57738
const MAX_UPDATES_PER_HOUR = 57739
const MAX_CONNECTIONS_PER_HOUR = 57740
const MAX_USER_CONNECTIONS = 57741
const FORMAT = 57742
const VERBOSE = 57743
const CONNECTION = 57744
const TRIGGERS = 57745
const PROFILES = 57746
const LOAD = 57747
const INFILE = 57748
const TERMINATED = 57749
const OPTIONALLY = 57750
const ENCLOSED = 57751
const ESCAPED = 57752
const STARTING = 57753
const LINES = 57754
const ROWS = 57755
const IMPORT = 57756
const DISCARD = 57757
const MODUMP = 57758
const OVER = 57759
const PRECEDING = 57760
const FOLLOWING = 57761
const GROUPS = 57762
const DATABASES = 57763
const TABLES = 57764
const SEQUENCES = 57765
const EXTENDED = 57766
const FULL = 57767
const PROCESSLIST = 57768
const FIELDS = 57769
const COLUMNS = 57770
const OPEN = 57771
const ERRORS = 57772
const WARNINGS = 57773
const INDEXES = 57774
const SCHEMAS = 57775
const NODE = 57776
const LOCKS = 57777
const ROLES = 57778
const TABLE_NUMBER = 57779
const COLUMN_NUMBER = 57780
const TABLE_VALUES = 57781
const TABLE_SIZE = 57782
const NAMES = 57783
const GLOBAL = 57784
const PERSIST = 57785
const SESSION = 57786
const ISOLATION = 57787
const LEVEL = 57788
const READ = 57789
const WRITE = 57790
const ONLY = 57791
const REPEATABLE = 57792
const COMMITTED = 57793
const UNCOMMITTED = 57794
const SERIALIZABLE = 57795
const LOCAL = 57796
const EVENTS = 57797
const PLUGINS = 57798
const CURRENT_TIMESTAMP = 57799
const DATABASE = 57800
const CURRENT_TIME = 57801
const LOCALTIME = 57802
const LOCALTIMESTAMP = 57803
const UTC_DATE = 57804
const UTC_TIME = 57805
const UTC_TIMESTAMP = 57806
const REPLACE = 57807
const CONVERT = 57808
const SEPARATOR = 57809
const TIMESTAMPDIFF = 57810
const CURRENT_DATE = 57811
const CURRENT_USER = 57812
const CURRENT_ROLE = 57813
const SECOND_MICROSECOND = 57814
const MINUTE_MICROSECOND = 57815
const MINUTE_SECOND = 57816
const HOUR_MICROSECOND = 57817
const HOUR_SECOND = 57818
const HOUR_MINUTE = 57819
const DAY_MICROSECOND = 57820
const DAY_SECOND = 57821
const DAY_MINUTE = 57822
const DAY_HOUR = 57823
const YEAR_MONTH = 57824
const SQL_TSI_HOUR = 57825
const SQL_TSI_DAY = 57826
const SQL_TSI_WEEK = 57827
const SQL_TSI_MONTH = 57828
const SQL_TSI_QUARTER = 57829
const SQL_TSI_YEAR = 57830
const SQL_TSI_SECOND = 57831
const SQL_TSI_MINUTE = 57832
const RECURSIVE = 57833
const CONFIG = 57834
const DRAINER = 57835
const MATCH = 57836
const AGAINST = 57837
const BOOLEAN = 57838
const LANGUAGE = 57839
const WITH = 57840
const QUERY = 57841
const EXPANSION = 57842
const WITHOUT = 57843
const VALIDATION = 57844
const ADDDATE = 57845
const BIT_AND = 57846
const BIT_OR = 57847
const BIT_XOR = 57848
const CAST = 57849
const COUNT = 57850
const APPROX_COUNT_DISTINCT = 57851
const APPROX_PERCENTILE = 57852
const CURDATE = 57853
const CURTIME = 57854
const DATE_ADD = 57855
const DATE_SUB = 57856
const EXTRACT = 57857
const GROUP_CONCAT = 57858
const MAX = 57859
const MID = 57860
const MIN = 57861
const NOW = 57862
const POSITION = 57863
const SESSION_USER = 57864
const STD = 57865
const STDDEV = 57866
const MEDIAN = 57867
const STDDEV_POP = 57868
const STDDEV_SAMP = 57869
const SUBDATE = 57870
const SUBSTR = 57871
const SUBSTRING = 57872
const SUM = 57873
const SYSDATE = 57874
const SYSTEM_USER = 57875
const TRANSLATE = 57876
const TRIM = 57877
const VARIANCE = 57878
const VAR_POP = 57879
const VAR_SAMP = 57880
const AVG = 57881
const RANK = 57882
const ROW_NUMBER = 57883
const DENSE_RANK = 57884
const NEXTVAL = 57885
const SETVAL = 57886
const CURRVAL = 57887
const LASTVAL = 57888
const ARROW = 57889
const ROW = 57890
const OUTFILE = 57891
const HEADER = 57892
const MAX_FILE_SIZE = 57893
const FORCE_QUOTE = 57894
const PARALLEL = 57895
const UNUSED = 57896
const BINDINGS = 57897
const DO = 57898
const DECLARE = 57899
const LOOP = 57900
const WHILE = 57901
const LEAVE = 57902
const ITERATE = 57903
const UNTIL = 57904
const CALL = 57905
const SPBEGIN = 57906
const BACKEND = 57907
const SERVERS = 57908
const KILL = 57909
const BACKUP = 57910
const FILESYSTEM = 57911
const QUERY_RESULT = 57912

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10116

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 115,
	21, 685,
	-2, 666,
	-1, 130,
	235, 940,
	-2, 1011,
	-1, 153,
	42, 506,
	235, 506,
	262, 513,
	263, 513,
	449, 506,
	-2, 539,
	-1, 189,
	591, 1707,
	-2, 422,
	-1, 521,
	314, 133,
	423, 133,
	-2, 1619,
	-1, 584,
	81, 1417,
	-2, 1761,
	-1, 585,
	81, 1435,
	-2, 1732,
	-1, 589,
	81, 1436,
	-2, 1760,
	-1, 614,
	81, 1347,
	-2, 1829,
	-1, 615,
	81, 1348,
	-2, 1828,
	-1, 616,
	81, 1349,
	-2, 1818,
	-1, 617,
	81, 1793,
	-2, 1813,
	-1, 618,
	81, 1794,
	-2, 1814,
	-1, 619,
	81, 1795,
	-2, 1820,
	-1, 620,
	81, 1796,
	-2, 1803,
	-1, 621,
	81, 1797,
	-2, 1811,
	-1, 622,
	81, 1798,
	-2, 1821,
	-1, 623,
	81, 1799,
	-2, 1822,
	-1, 624,
	81, 1800,
	-2, 1827,
	-1, 625,
	81, 1801,
	-2, 1832,
	-1, 626,
	81, 1802,
	-2, 1833,
	-1, 628,
	81, 1414,
	-2, 1608,
	-1, 632,
	81, 1419,
	-2, 1620,
	-1, 635,
	81, 1423,
	-2, 1638,
	-1, 639,
	81, 1427,
	-2, 1678,
	-1, 640,
	81, 1428,
	-2, 1756,
	-1, 648,
	81, 1438,
	-2, 1741,
	-1, 649,
	81, 1439,
	-2, 1786,
	-1, 650,
	81, 1440,
	-2, 1751,
	-1, 651,
	81, 1441,
	-2, 1776,
	-1, 662,
	81, 1325,
	-2, 1823,
	-1, 663,
	81, 1326,
	-2, 1824,
	-1, 664,
	81, 1327,
	-2, 1825,
	-1, 668,
	21, 686,
	-2, 649,
	-1, 747,
	444, 539,
	445, 539,
	-2, 507,
	-1, 791,
	122, 1608,
	133, 1608,
	153, 1608,
	-2, 1583,
	-1, 894,
	21, 686,
	-2, 649,
	-1, 994,
	21, 685,
	-2, 1225,
	-1, 1360,
	81, 1485,
	-2, 1758,
	-1, 1361,
	81, 1486,
	-2, 1759,
	-1, 1497,
	82, 830,
	-2, 836,
	-1, 1870,
	82, 1569,
	154, 1569,
	-2, 1743,
	-1, 1871,
	82, 1569,
	154, 1569,
	-2, 1742,
	-1, 1872,
	82, 1547,
	154, 1547,
	-2, 1729,
	-1, 1873,
	82, 1548,
	154, 1548,
	-2, 1734,
	-1, 1874,
	82, 1549,
	154, 1549,
	-2, 1666,
	-1, 1875,
	82, 1550,
	154, 1550,
	-2, 1660,
	-1, 1876,
	82, 1551,
	154, 1551,
	-2, 1599,
	-1, 1877,
	82, 1552,
	154, 1552,
	-2, 1731,
	-1, 1878,
	82, 1553,
	154, 1553,
	-2, 1664,
	-1, 1879,
	82, 1554,
	154, 1554,
	-2, 1659,
	-1, 1880,
	82, 1555,
	154, 1555,
	-2, 1652,
	-1, 1882,
	82, 1558,
	154, 1558,
	-2, 1776,
	-1, 1883,
	82, 1538,
	154, 1538,
	-2, 1761,
	-1, 1884,
	82, 1567,
	154, 1567,
	-2, 1732,
	-1, 1885,
	82, 1567,
	154, 1567,
	-2, 1760,
	-1, 1886,
	82, 1567,
	154, 1567,
	-2, 1621,
	-1, 1887,
	82, 1565,
	154, 1565,
	-2, 1751,
	-1, 1888,
	82, 1562,
	154, 1562,
	-2, 1643,
	-1, 1889,
	81, 1519,
	82, 1519,
	154, 1519,
	381, 1519,
	382, 1519,
	383, 1519,
	-2, 1598,
	-1, 1890,
	81, 1520,
	82, 1520,
	154, 1520,
	381, 1520,
	382, 1520,
	383, 1520,
	-2, 1600,
	-1, 1891,
	81, 1523,
	82, 1523,
	154, 1523,
	381, 1523,
	382, 1523,
	383, 1523,
	-2, 1733,
	-1, 1892,
	81, 1525,
	82, 1525,
	154, 1525,
	381, 1525,
	382, 1525,
	383, 1525,
	-2, 1716,
	-1, 1893,
	81, 1527,
	82, 1527,
	154, 1527,
	381, 1527,
	382, 1527,
	383, 1527,
	-2, 1665,
	-1, 1894,
	81, 1529,
	82, 1529,
	154, 1529,
	381, 1529,
	382, 1529,
	383, 1529,
	-2, 1648,
	-1, 1895,
	81, 1530,
	82, 1530,
	154, 1530,
	381, 1530,
	382, 1530,
	383, 1530,
	-2, 1649,
	-1, 1896,
	81, 1532,
	82, 1532,
	154, 1532,
	381, 1532,
	382, 1532,
	383, 1532,
	-2, 1597,
	-1, 1897,
	82, 1572,
	154, 1572,
	381, 1572,
	382, 1572,
	383, 1572,
	-2, 1626,
	-1, 1898,
	82, 1572,
	154, 1572,
	381, 1572,
	382, 1572,
	383, 1572,
	-2, 1639,
	-1, 1899,
	82, 1575,
	154, 1575,
	381, 1575,
	382, 1575,
	383, 1575,
	-2, 1622,
	-1, 1900,
	82, 1575,
	154, 1575,
	381, 1575,
	382, 1575,
	383, 1575,
	-2, 1681,
	-1, 1901,
	82, 1572,
	154, 1572,
	381, 1572,
	382, 1572,
	383, 1572,
	-2, 1701,
	-1, 1917,
	105, 975,
	149, 975,
	188, 975,
	191, 975,
	275, 975,
	-2, 968,
	-1, 2049,
	21, 685,
	-2, 779,
	-1, 2243,
	105, 975,
	149, 975,
	188, 975,
	191, 975,
	275, 975,
	-2, 969,
	-1, 2255,
	79, 595,
	154, 595,
	-2, 1114,
	-1, 2277,
	191, 975,
	299, 1193,
	-2, 1167,
	-1, 2578,
	191, 975,
	299, 1193,
	-2, 1168,
	-1, 2726,
	105, 975,
	149, 975,
	188, 975,
	191, 975,
	-2, 1057,
	-1, 2729,
	105, 975,
	149, 975,
	188, 975,
	191, 975,
	-2, 1057,
	-1, 2739,
	79, 595,
	154, 595,
	-2, 1115,
	-1, 2854,
	105, 975,
	149, 975,
	188, 975,
	191, 975,
	-2, 1058,
	-1, 3186,
	82, 1029,
	154, 1029,
	-2, 975,
	-1, 3190,
	82, 1029,
	154, 1029,
	-2, 975,
	-1, 3204,
	82, 1033,
	154, 1033,
	-2, 975,
	-1, 3209,
	82, 1034,
	154, 1034,
	-2, 975,
}

const yyPrivate = 57344

const yyLast = 38123

var yyAct = [...]int{
	551, 3190, 1570, 3189, 3198, 3169, 180, 1279, 530, 3071,
	532, 3128, 1341, 553, 525, 3094, 3116, 2816, 540, 2811,
	2990, 3022, 1981, 2592, 3023, 3004, 1845, 2879, 2982, 2617,
	1142, 2677, 3008, 2847, 2844, 2913, 1026, 1201, 2678, 2944,
	437, 2846, 2814, 2903, 669, 2991, 1269, 2993, 1528, 790,
	444, 2717, 449, 449, 581, 2853, 2258, 1344, 449, 465,
	474, 2550, 2703, 474, 2749, 1660, 165, 1657, 2806, 1337,
	2368, 2366, 2367, 2350, 2706, 2538, 2607, 2360, 2579, 1956,
	1625, 1868, 534, 2848, 2675, 2856, 1722, 2043, 2663, 485,
	1753, 1959, 2646, 2389, 2234, 2519, 2363, 2522, 2517, 1866,
	2244, 2548, 479, 1672, 2606, 2027, 1926, 1858, 888, 1849,
	2426, 2463, 523, 2273, 1260, 529, 1848, 1723, 1730, 1731,
	524, 2091, 1653, 1696, 1477, 55, 796, 2044, 2409, 1748,
	36, 1194, 1628, 723, 2279, 2223, 2032, 1749, 1626, 1957,
	1557, 1115, 2218, 6, 1278, 1925, 2551, 1506, 1117, 1150,
	1566, 176, 8, 1265, 175, 7, 1485, 437, 1273, 531,
	842, 1335, 1270, 1750, 2071, 1234, 2108, 1781, 443, 1530,
	784, 1094, 533, 1210, 1908, 114, 1180, 1864, 2553, 2552,
	180, 1760, 180, 1540, 833, 834, 1539, 1390, 522, 471,
	2181, 1374, 827, 828, 1131, 2182, 541, 832, 1326, 524,
	14, 905, 35, 754, 794, 26, 1241, 32, 1712, 15,
	436, 13, 1729, 1686, 2051, 1726, 1151, 1334, 783, 1505,
	461, 458, 1179, 1177, 722, 1127, 1395, 1340, 1396, 666,
	487, 488, 23, 16, 10, 166, 1064, 1233, 1143, 473,
	700, 159, 668, 1090, 720, 704, 829, 1757, 831, 1027,
	2938, 2206, 162, 830, 1767, 742, 2206, 2206, 2720, 469,
	2670, 2142, 2097, 2095, 470, 2094, 467, 2092, 466, 1490,
	468, 1248, 1244, 825, 826, 826, 164, 1081, 445, 1163,
	826, 1246, 963, 964, 965, 962, 800, 963, 964, 965,
	962, 2804, 2422, 2420, 1701, 2909, 2904, 454, 2807, 2676,
	1481, 1021, 477, 2995, 1725, 667, 1989, 2955, 824, 163,
	163, 51, 155, 131, 163, 677, 8, 163, 926, 7,
	2129, 163, 1082, 2833, 163, 2137, 3062, 163, 163, 163,
	51, 155, 131, 2704, 1293, 2828, 797, 163, 2965, 51,
	155, 131, 1107, 483, 1286, 814, 2486, 941, 1765, 1912,
	942, 2956, 1754, 1159, 484, 657, 1160, 656, 658, 659,
	113, 660, 661, 799, 1290, 934, 1327, 2441, 936, 1331,
	2069, 2434, 2831, 1083, 1283, 772, 2057, 113, 944, 2056,
	160, 160, 2058, 2070, 960, 1292, 1311, 1670, 160, 1416,
	2396, 2397, 160, 1330, 2395, 1285, 937, 1637, 160, 160,
	160, 1638, 1639, 1491, 1492, 1181, 670, 1183, 160, 2220,
	3112, 2109, 678, 1148, 1149, 763, 1139, 1146, 3110, 2221,
	953, 1145, 1148, 1149, 3026, 3027, 1553, 1343, 958, 793,
	792, 2998, 2824, 2998, 3058, 2997, 3057, 2996, 3056, 2997,
	2996, 1836, 1162, 3098, 3099, 2911, 2427, 2984, 449, 2914,
	2915, 2916, 2917, 939, 2987, 2428, 2679, 2429, 449, 898,
	2984, 2907, 2679, 2124, 1346, 908, 2219, 899, 3001, 1648,
	2688, 930, 1332, 1654, 2306, 1644, 474, 474, 1322, 449,
	2531, 3061, 2707, 1761, 809, 806, 801, 805, 807, 2523,
	2838, 2533, 2714, 1329, 932, 2226, 2933, 2454, 2021, 893,
	895, 1247, 1245, 1907, 1709, 3000, 935, 938, 710, 1254,
	1253, 2209, 812, 2602, 940, 768, 804, 836, 767, 929,
	956, 957, 518, 2452, 130, 520, 161, 955, 2134, 908,
	519, 1987, 931, 2528, 2529, 2805, 2421, 2354, 2024, 2023,
	1430, 966, 897, 996, 1412, 2936, 153, 2835, 1409, 2530,
	995, 2028, 1411, 1408, 1410, 1414, 1415, 3105, 1004, 892,
	1413, 2823, 3064, 3065, 2615, 2616, 795, 810, 2825, 3025,
	2547, 3114, 921, 1345, 813, 2925, 2557, 3014, 2926, 2952,
	1010, 2251, 894, 898, 476, 1352, 1355, 1356, 2527, 943,
	800, 802, 1766, 471, 471, 1161, 1353, 3183, 475, 1770,
	1772, 1773, 2359, 1914, 773, 2773, 3009, 933, 1328, 1137,
	1126, 3109, 811, 1171, 2880, 2881, 2882, 2884, 2883, 3073,
	2619, 769, 951, 952, 2778, 482, 3199, 3137, 3144, 1668,
	1669, 2928, 3069, 3070, 2932, 3073, 2334, 1975, 2925, 2764,
	797, 2926, 3148, 1998, 1977, 1080, 1997, 912, 2232, 2759,
	2018, 2019, 803, 910, 909, 1190, 2920, 946, 2753, 1124,
	947, 800, 2927, 469, 469, 1030, 1031, 799, 470, 470,
	467, 467, 466, 466, 468, 468, 1189, 1141, 1140, 1755,
	919, 1755, 771, 901, 902, 1123, 2937, 2690, 949, 1088,
	444, 1091, 2458, 2205, 2928, 1122, 998, 999, 1000, 1001,
	2525, 1976, 1419, 1420, 1421, 1422, 1423, 1424, 1417, 1418,
	1061, 797, 918, 1755, 2073, 914, 915, 910, 909, 3200,
	1782, 3170, 723, 1962, 2945, 2927, 2954, 808, 889, 826,
	3206, 826, 826, 2953, 2502, 826, 903, 2731, 799, 1002,
	472, 826, 826, 2238, 2239, 2240, 2241, 2093, 2802, 472,
	3063, 713, 1249, 714, 1756, 1095, 1768, 770, 2391, 2393,
	1147, 483, 2981, 945, 3119, 1980, 1178, 3194, 926, 449,
	2130, 1173, 1144, 1148, 1149, 2061, 1985, 437, 437, 1101,
	1758, 1148, 1149, 1965, 2832, 667, 437, 437, 2524, 2457,
	1205, 1205, 2534, 449, 3115, 2225, 1655, 2934, 2455, 950,
	52, 1105, 1104, 1103, 711, 478, 2512, 1769, 2618, 52,
	2766, 474, 1091, 444, 132, 132, 1237, 1237, 2834, 132,
	2138, 1354, 132, 1138, 948, 1212, 132, 180, 1207, 132,
	1236, 1236, 132, 132, 132, 1771, 437, 920, 2304, 1112,
	1039, 1040, 132, 2307, 2839, 2308, 2309, 1647, 2208, 2229,
	2230, 925, 1852, 1645, 2406, 2407, 1323, 1961, 1089, 1203,
	1203, 795, 1963, 764, 2228, 1096, 1097, 1098, 1099, 1100,
	1086, 1102, 2921, 1494, 1120, 1106, 2992, 2760, 2761, 1125,
	2335, 2337, 2338, 2339, 2336, 1277, 1135, 1280, 1255, 764,
	1495, 2526, 1288, 3193, 1153, 1154, 1851, 1156, 1157, 1158,
	3120, 1493, 2755, 680, 3205, 2010, 2754, 2545, 1066, 2465,
	2464, 1966, 1309, 717, 718, 719, 1964, 1304, 1305, 1199,
	1200, 2392, 681, 1068, 1294, 668, 1205, 2862, 1205, 898,
	1133, 1134, 1092, 1984, 715, 2921, 3149, 1093, 2562, 2922,
	1854, 1853, 1084, 1085, 2325, 2326, 766, 1185, 1187, 765,
	1128, 1132, 1132, 1132, 1172, 1531, 1197, 1198, 1258, 671,
	1261, 1262, 2041, 1531, 1813, 1910, 1114, 1812, 1979, 3167,
	671, 961, 766, 1128, 1128, 765, 1347, 1348, 1349, 1350,
	1351, 1229, 1164, 1165, 1843, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 2643, 926, 712,
	1152, 1385, 1386, 1155, 2256, 684, 1250, 1861, 1394, 1308,
	1188, 1633, 1342, 2257, 800, 1267, 1268, 1307, 800, 1284,
	1392, 1393, 1443, 1291, 1433, 1434, 1435, 1427, 3117, 3118,
	1862, 1863, 1129, 2546, 471, 1437, 3212, 1449, 2111, 961,
	1450, 1275, 454, 1272, 1318, 1452, 1276, 1223, 1213, 2639,
	1227, 1324, 1457, 1458, 1238, 1228, 683, 1689, 3211, 2727,
	686, 685, 1239, 448, 448, 1339, 2324, 3202, 3184, 456,
	963, 964, 965, 962, 963, 964, 965, 962, 1479, 1909,
	1839, 2129, 1483, 1325, 1357, 1486, 2042, 2042, 2214, 1320,
	774, 2211, 1475, 2042, 961, 449, 2116, 1504, 1205, 1508,
	1509, 2643, 1511, 1512, 469, 1062, 1792, 449, 961, 470,
	1205, 467, 3179, 466, 723, 468, 1842, 1529, 2073, 1317,
	2484, 668, 1205, 1314, 1300, 1313, 1754, 924, 1173, 1478,
	961, 1295, 1636, 465, 1296, 963, 964, 965, 962, 3203,
	1763, 1442, 923, 2257, 1949, 3173, 1316, 1315, 1312, 1130,
	1383, 1384, 1552, 1336, 1844, 1333, 1425, 1426, 1338, 1429,
	1558, 1558, 3172, 1173, 3153, 1173, 1173, 1444, 1503, 449,
	891, 1504, 1504, 1556, 3130, 1205, 1622, 1623, 1635, 3088,
	1451, 1791, 1453, 1817, 3180, 1376, 817, 822, 823, 3037,
	1510, 1745, 437, 3028, 1205, 1666, 1687, 977, 976, 986,
	987, 979, 980, 981, 982, 983, 984, 985, 978, 1479,
	2975, 1113, 1388, 2974, 1479, 1479, 1815, 1763, 924, 449,
	1504, 1205, 926, 1677, 1191, 449, 1680, 1681, 2970, 3132,
	2969, 2742, 1684, 1685, 1763, 2968, 1763, 1691, 2563, 2411,
	1428, 2259, 1617, 1618, 180, 2713, 3131, 180, 180, 2967,
	180, 3089, 2132, 2131, 2123, 1573, 1946, 1699, 1808, 1793,
	1702, 2941, 2940, 1705, 1500, 2941, 1707, 1663, 1664, 2781,
	1454, 2627, 1537, 1538, 1744, 1513, 1514, 1515, 1532, 1533,
	1649, 1541, 2976, 1543, 1544, 1930, 1443, 1443, 1733, 1547,
	1548, 1674, 1476, 1443, 1443, 2386, 1549, 2187, 1740, 2143,
	2941, 1559, 2941, 1482, 1694, 1545, 2127, 2941, 2120, 2118,
	1700, 1676, 2113, 1703, 1704, 2106, 1706, 1641, 1499, 1643,
	1551, 2941, 1529, 1554, 1555, 1507, 1205, 1752, 1679, 1661,
	1662, 1656, 2104, 1560, 2941, 1525, 2102, 1521, 1526, 1128,
	2892, 2073, 1550, 2628, 2100, 1929, 1561, 1840, 1536, 1534,
	1821, 1562, 1563, 1546, 1542, 979, 980, 981, 982, 983,
	984, 985, 978, 1297, 1132, 1820, 2567, 2042, 2779, 961,
	1746, 961, 1811, 1007, 819, 820, 821, 1734, 1930, 1802,
	2114, 2119, 1801, 1800, 2114, 1775, 1762, 2107, 1301, 911,
	1779, 1780, 1624, 1168, 1621, 1170, 891, 1174, 1175, 1176,
	2053, 886, 1507, 1785, 2105, 1728, 1789, 1640, 2101, 1642,
	1650, 800, 1728, 884, 2449, 1665, 2101, 1930, 800, 1839,
	978, 3015, 961, 2863, 1432, 1431, 2668, 1218, 1219, 1220,
	1221, 1222, 471, 1224, 1225, 1226, 2558, 961, 1675, 1231,
	1232, 1129, 1118, 2734, 961, 1799, 1119, 1697, 1336, 1671,
	2732, 961, 1695, 1806, 961, 961, 3162, 3150, 1763, 890,
	1302, 797, 1982, 1818, 2939, 3016, 1195, 2864, 797, 896,
	1825, 1819, 891, 1714, 1822, 1823, 1824, 1196, 2757, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 2735, 799, 2756,
	917, 2719, 2644, 2637, 2733, 799, 2632, 523, 2629, 898,
	1902, 449, 469, 800, 1743, 2540, 1737, 470, 1735, 467,
	2356, 466, 2559, 468, 449, 449, 449, 963, 964, 965,
	962, 2236, 1742, 1747, 2207, 1382, 1927, 2117, 2671, 2063,
	1193, 1738, 1109, 1739, 1463, 1108, 1934, 1173, 2092, 1777,
	1778, 1379, 1381, 1378, 900, 1380, 1931, 1939, 963, 964,
	965, 962, 1783, 797, 2150, 1774, 2560, 2086, 1130, 2096,
	682, 1173, 981, 982, 983, 984, 985, 978, 898, 1970,
	1776, 963, 964, 965, 962, 1376, 1698, 1787, 1391, 1242,
	799, 2413, 1869, 1455, 1456, 965, 962, 1459, 1460, 1461,
	1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1502,
	1391, 1988, 1788, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	2159, 3055, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 2009, 1983, 2011, 2012, 2013, 2014, 2015, 1192,
	2016, 2046, 2046, 1635, 2046, 1242, 962, 1698, 883, 879,
	880, 881, 882, 1904, 2164, 2768, 2163, 2162, 2160, 2767,
	2430, 1955, 437, 437, 2291, 2290, 1479, 2285, 1479, 2283,
	898, 3147, 963, 964, 965, 962, 1205, 449, 1835, 1837,
	1838, 2669, 963, 964, 965, 962, 1479, 1479, 2746, 449,
	1447, 2152, 687, 898, 444, 1855, 2841, 2842, 1237, 1911,
	1635, 2174, 1009, 2081, 1448, 2083, 2836, 2711, 1942, 180,
	1943, 2235, 1236, 1944, 3188, 1008, 1948, 1936, 1937, 2059,
	2161, 2060, 2477, 2050, 1951, 3176, 3138, 1940, 1941, 2048,
	3133, 2052, 3146, 1935, 3075, 554, 564, 3046, 3017, 2064,
	2065, 2957, 2346, 2905, 555, 2067, 563, 556, 560, 559,
	557, 558, 1030, 1031, 1947, 2125, 1954, 1953, 1752, 2344,
	1804, 1945, 2837, 2712, 2871, 1205, 2866, 1205, 800, 1205,
	963, 964, 965, 962, 898, 2087, 1869, 2865, 2736, 2088,
	2080, 2476, 2342, 1132, 963, 964, 965, 962, 2331, 2710,
	1169, 2532, 2075, 1243, 963, 964, 965, 962, 2345, 561,
	2445, 2425, 2424, 1205, 2168, 2329, 2025, 963, 964, 965,
	962, 2328, 2327, 2151, 1211, 2343, 2319, 2313, 797, 2175,
	3019, 2169, 2170, 2054, 1205, 2312, 2311, 1803, 2310, 2172,
	2173, 562, 1185, 1187, 2177, 1717, 2135, 1716, 2341, 1715,
	2167, 2718, 2178, 1711, 2330, 799, 963, 964, 965, 962,
	2068, 2165, 2166, 963, 964, 965, 962, 2139, 1710, 1678,
	1298, 2176, 2077, 2079, 1479, 1079, 2078, 2200, 2201, 1486,
	2076, 898, 1203, 2179, 2361, 2085, 2518, 3104, 2812, 1796,
	3100, 3059, 2154, 986, 987, 979, 980, 981, 982, 983,
	984, 985, 978, 1203, 3003, 2141, 2845, 2979, 2136, 976,
	986, 987, 979, 980, 981, 982, 983, 984, 985, 978,
	2148, 2935, 2906, 2122, 2870, 2198, 963, 964, 965, 962,
	1205, 2128, 2869, 2233, 518, 2852, 2133, 520, 2126, 1504,
	1846, 1847, 519, 2840, 2810, 2255, 2808, 2788, 3007, 2785,
	2222, 2261, 969, 970, 971, 972, 973, 974, 975, 967,
	2783, 2959, 2147, 2351, 2212, 2144, 2145, 2270, 2748, 2709,
	2708, 2215, 2158, 898, 963, 964, 965, 962, 2705, 2695,
	2638, 2282, 963, 964, 965, 962, 2634, 2625, 2624, 2287,
	2288, 2818, 2289, 2541, 2509, 2508, 2292, 2293, 2294, 1558,
	2507, 1850, 1336, 2456, 2423, 2400, 1262, 2340, 2332, 2322,
	2246, 1790, 963, 964, 965, 962, 2320, 963, 964, 965,
	962, 2202, 2046, 2245, 2316, 2252, 2302, 2303, 2199, 2315,
	2314, 1841, 2183, 613, 612, 2918, 2347, 2188, 1719, 1713,
	2317, 2318, 1489, 2262, 437, 672, 673, 674, 675, 1504,
	898, 1635, 1635, 1635, 1635, 1573, 1955, 2277, 671, 1267,
	1268, 1488, 898, 1635, 2353, 2216, 2046, 1299, 1038, 1034,
	2280, 1033, 887, 679, 2280, 2729, 2728, 2231, 2726, 1275,
	2694, 1272, 1205, 2683, 1276, 963, 964, 965, 962, 2674,
	2254, 2673, 2260, 2662, 449, 449, 2817, 2661, 2568, 2482,
	8, 2475, 2467, 7, 2263, 3177, 2462, 163, 2408, 180,
	155, 131, 2267, 2268, 180, 2269, 2278, 2284, 2213, 2276,
	2272, 1216, 963, 964, 965, 962, 1501, 2417, 2264, 2419,
	2210, 2103, 2266, 2369, 2382, 1443, 2099, 1443, 1516, 2296,
	2440, 2098, 1826, 1816, 2444, 2369, 1814, 1479, 1810, 2321,
	1205, 2281, 1479, 2451, 1809, 1807, 1798, 1507, 977, 976,
	986, 987, 979, 980, 981, 982, 983, 984, 985, 978,
	1795, 1794, 1718, 1474, 1473, 2414, 2265, 1472, 160, 3201,
	2418, 2357, 1446, 2352, 1445, 1436, 1217, 2461, 1215, 2370,
	2371, 2372, 2373, 2385, 163, 2383, 668, 2381, 1478, 3161,
	1564, 3155, 3145, 2439, 3142, 2384, 2401, 3140, 3045, 2481,
	2777, 2398, 2977, 1028, 2355, 1257, 2888, 2876, 2394, 2872,
	2796, 2794, 2437, 2775, 2774, 2771, 2770, 2763, 2443, 2470,
	2721, 2472, 2416, 2415, 2412, 898, 963, 964, 965, 962,
	2448, 1266, 1259, 2521, 1116, 3036, 2692, 2453, 2348, 2431,
	1673, 2286, 2249, 2536, 2436, 2438, 1673, 2433, 449, 800,
	2248, 2247, 3034, 2480, 2435, 160, 800, 1271, 898, 898,
	898, 2442, 963, 964, 965, 962, 1274, 1635, 1927, 2459,
	2566, 2479, 2460, 1263, 2197, 2112, 2570, 2447, 2466, 963,
	964, 965, 962, 2062, 2468, 2469, 898, 2473, 2474, 2017,
	2605, 1928, 2608, 1377, 2608, 2608, 160, 963, 964, 965,
	962, 2613, 1682, 1498, 2511, 2544, 1497, 1321, 1869, 566,
	115, 2612, 1287, 1205, 1205, 115, 1264, 1063, 1060, 1059,
	2503, 1058, 1057, 1056, 2513, 1055, 2506, 2471, 1054, 2510,
	1053, 1052, 1051, 1050, 2620, 1049, 1048, 1047, 1046, 2245,
	1045, 1955, 1955, 1955, 1044, 1043, 1042, 2564, 1041, 2537,
	2621, 2622, 1037, 800, 2543, 1036, 1035, 1032, 2516, 449,
	2554, 2555, 1025, 1024, 2521, 455, 2604, 2603, 115, 2575,
	1022, 1021, 2561, 2598, 2565, 1504, 1504, 2478, 1020, 1019,
	1018, 2487, 1203, 1203, 1017, 2488, 2489, 2490, 2491, 2196,
	2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2609, 2610,
	2576, 1016, 1015, 963, 964, 965, 962, 800, 2195, 1014,
	1013, 1012, 2574, 2194, 1011, 963, 964, 965, 962, 1006,
	1005, 928, 2168, 3159, 2193, 885, 2647, 2648, 2573, 2192,
	3032, 2672, 3030, 2772, 963, 964, 965, 962, 1933, 963,
	964, 965, 962, 2569, 1916, 916, 3080, 2571, 2572, 3078,
	963, 964, 965, 962, 3024, 963, 964, 965, 962, 2631,
	2650, 2630, 2626, 2636, 2237, 2635, 2074, 2611, 449, 1721,
	798, 2640, 2641, 927, 115, 2651, 977, 976, 986, 987,
	979, 980, 981, 982, 983, 984, 985, 978, 2191, 115,
	2653, 115, 2655, 2658, 2659, 2660, 2378, 2633, 2799, 2376,
	2798, 2379, 2691, 2380, 2377, 2038, 2039, 2652, 2375, 2693,
	2374, 2667, 3187, 2190, 963, 964, 965, 962, 2121, 2115,
	1110, 2204, 1903, 446, 2189, 1523, 1524, 3157, 1518, 1519,
	1520, 2684, 2274, 2539, 2275, 1919, 1920, 1921, 2685, 963,
	964, 965, 962, 100, 1986, 1609, 2686, 2642, 2797, 2687,
	963, 964, 965, 962, 54, 2696, 53, 2514, 2725, 2504,
	2505, 1251, 2654, 2110, 1846, 1847, 2186, 2140, 1938, 1065,
	1281, 1905, 2046, 1635, 2739, 1683, 450, 2722, 2723, 2724,
	977, 976, 986, 987, 979, 980, 981, 982, 983, 984,
	985, 978, 963, 964, 965, 962, 922, 1205, 2698, 451,
	2185, 2747, 2999, 2515, 2700, 2271, 2217, 2701, 1923, 1527,
	452, 2146, 453, 449, 2034, 2037, 2038, 2039, 2035, 1496,
	2036, 2040, 2605, 2298, 3091, 2716, 963, 964, 965, 962,
	2299, 2300, 2301, 2741, 1205, 977, 976, 986, 987, 979,
	980, 981, 982, 983, 984, 985, 978, 1432, 1431, 2874,
	1504, 800, 2623, 2738, 898, 2026, 2702, 2022, 1479, 2737,
	1077, 1078, 1075, 1076, 1073, 1074, 2750, 2745, 2603, 1479,
	1620, 2780, 2793, 1167, 2598, 2795, 1071, 1072, 2184, 1166,
	180, 954, 2657, 2801, 2072, 1741, 1121, 1067, 1211, 2800,
	3156, 3067, 3052, 898, 3050, 3010, 2989, 2790, 2776, 2180,
	1673, 2988, 2986, 1203, 963, 964, 965, 962, 2978, 2900,
	2899, 2786, 2782, 2809, 2697, 2826, 2784, 2681, 2680, 2665,
	2792, 2789, 2787, 1070, 2791, 963, 964, 965, 962, 2171,
	671, 2664, 898, 1205, 1205, 2149, 1531, 2369, 898, 2855,
	1387, 2410, 2855, 2446, 2740, 1918, 2803, 3082, 3081, 3081,
	2743, 1797, 913, 2744, 3082, 963, 964, 965, 962, 2765,
	2682, 963, 964, 965, 962, 2813, 963, 964, 965, 962,
	2850, 2402, 115, 115, 798, 2829, 2369, 2827, 167, 3,
	1136, 898, 898, 62, 2, 898, 898, 672, 673, 674,
	675, 1182, 2055, 1667, 1209, 2860, 2859, 2029, 2851, 2857,
	671, 2483, 1203, 2750, 1, 1529, 2741, 2897, 1487, 676,
	2387, 2885, 2891, 2388, 2656, 2901, 2902, 2890, 2390, 1759,
	2358, 1955, 2877, 2878, 2020, 1906, 2886, 2887, 2535, 1111,
	2873, 2894, 716, 1438, 2034, 2037, 2038, 2039, 2035, 2931,
	2036, 2040, 1306, 816, 907, 994, 1303, 906, 904, 2893,
	1389, 2924, 568, 2895, 977, 976, 986, 987, 979, 980,
	981, 982, 983, 984, 985, 978, 1724, 2947, 2349, 2323,
	2896, 3090, 3127, 3044, 2943, 3093, 1319, 552, 2919, 2980,
	2923, 2929, 2910, 3048, 2912, 2815, 1764, 898, 959, 2432,
	738, 604, 579, 1023, 1289, 2819, 1282, 2960, 2485, 898,
	818, 578, 1205, 2715, 2227, 2942, 2405, 2962, 2951, 815,
	2950, 739, 2949, 1708, 2908, 1252, 2948, 2867, 2868, 1256,
	2961, 2861, 2958, 2730, 2556, 2973, 2250, 3197, 2966, 3186,
	3168, 3154, 3072, 3182, 3108, 3143, 2822, 2820, 2821, 2972,
	2971, 3136, 3068, 489, 1646, 435, 2253, 781, 2889, 2994,
	1720, 490, 898, 1010, 1932, 3060, 2875, 698, 2985, 3011,
	2983, 1915, 699, 2243, 2242, 1358, 968, 1375, 2500, 2501,
	1003, 1203, 528, 3020, 1786, 2224, 2593, 2399, 61, 3006,
	1069, 3012, 60, 3002, 1205, 3005, 59, 3039, 3042, 58,
	1690, 188, 570, 3013, 187, 2843, 3041, 3095, 550, 3018,
	549, 548, 547, 3029, 3031, 3033, 3035, 989, 3043, 993,
	546, 2033, 2031, 2030, 1630, 1629, 3051, 1688, 3053, 3054,
	2614, 3038, 3049, 1205, 3047, 990, 992, 988, 2295, 991,
	977, 976, 986, 987, 979, 980, 981, 982, 983, 984,
	985, 978, 1974, 1967, 3066, 1565, 3021, 2963, 2964, 2762,
	2333, 1517, 1978, 1203, 1579, 3079, 3097, 3077, 2305, 3076,
	3074, 1576, 1575, 2297, 2758, 2752, 1606, 2854, 3083, 3096,
	3084, 3087, 3085, 2577, 3086, 2578, 2584, 1922, 898, 726,
	841, 837, 3101, 839, 2994, 840, 3102, 838, 2157, 2153,
	1950, 2549, 1203, 1860, 3103, 2403, 2404, 3111, 3113, 1859,
	3126, 1857, 1856, 1087, 2930, 1214, 2699, 1867, 1865, 3121,
	455, 2649, 3129, 2645, 1732, 1484, 3134, 2203, 898, 3122,
	3123, 3124, 3125, 1631, 1627, 857, 1917, 2830, 1522, 3139,
	3135, 3141, 691, 1913, 98, 145, 115, 48, 89, 88,
	97, 143, 3097, 3152, 47, 172, 171, 174, 725, 173,
	170, 898, 2089, 898, 2090, 3096, 169, 3151, 764, 1240,
	168, 3106, 2858, 3158, 3163, 3160, 665, 38, 37, 33,
	3129, 3164, 898, 12, 11, 3166, 3171, 713, 3178, 714,
	34, 3181, 21, 22, 3175, 20, 1310, 19, 25, 31,
	30, 108, 107, 29, 106, 105, 3185, 104, 115, 3192,
	103, 1342, 115, 3196, 3195, 102, 28, 18, 42, 41,
	3204, 40, 9, 115, 96, 696, 3209, 3192, 3208, 3207,
	94, 27, 3196, 115, 3210, 1416, 95, 92, 707, 93,
	711, 90, 73, 72, 1342, 71, 1342, 86, 85, 84,
	83, 766, 82, 81, 765, 845, 79, 80, 737, 70,
	69, 68, 67, 66, 91, 1342, 77, 87, 78, 2542,
	76, 75, 74, 65, 64, 865, 869, 871, 873, 875,
	876, 878, 63, 883, 879, 880, 881, 882, 751, 860,
	861, 862, 863, 843, 844, 866, 727, 846, 128, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 858,
	864, 1784, 129, 127, 126, 125, 124, 123, 868, 870,
	872, 874, 877, 729, 122, 43, 44, 45, 46, 139,
	138, 140, 142, 144, 141, 977, 976, 986, 987, 979,
	980, 981, 982, 983, 984, 985, 978, 136, 134, 137,
	135, 133, 56, 17, 24, 859, 4, 0, 0, 2582,
	0, 0, 0, 0, 709, 0, 703, 0, 692, 0,
	0, 0, 0, 0, 0, 706, 705, 0, 0, 0,
	1673, 0, 0, 0, 0, 0, 750, 749, 0, 0,
	1412, 0, 689, 0, 1409, 0, 697, 2594, 1411, 1408,
	1410, 1414, 1415, 748, 0, 0, 1413, 0, 0, 0,
	2585, 0, 724, 0, 0, 0, 0, 0, 0, 0,
	2580, 0, 0, 728, 759, 2600, 2601, 0, 0, 0,
	0, 2581, 0, 0, 0, 712, 0, 0, 0, 0,
	702, 0, 0, 0, 701, 0, 0, 755, 0, 0,
	688, 0, 0, 0, 695, 977, 976, 986, 987, 979,
	980, 981, 982, 983, 984, 985, 978, 0, 2586, 0,
	0, 693, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 756, 760, 0, 2155, 2156, 0, 2689,
	0, 0, 690, 0, 0, 0, 0, 1634, 0, 0,
	0, 745, 0, 743, 747, 763, 710, 0, 0, 744,
	741, 740, 0, 746, 731, 732, 730, 733, 734, 735,
	736, 0, 761, 0, 762, 0, 0, 0, 0, 0,
	0, 0, 694, 0, 0, 757, 758, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1419, 1420,
	1421, 1422, 1423, 1424, 1417, 1418, 0, 0, 0, 2599,
	0, 1960, 0, 115, 0, 0, 115, 115, 0, 115,
	0, 0, 753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2590, 0, 0, 0,
	0, 365, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 328, 0, 0, 798, 0, 708, 2587, 2591,
	2589, 2588, 798, 0, 0, 542, 0, 0, 867, 273,
	0, 115, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2769, 430, 0, 431, 0, 0,
	577, 0, 0, 357, 312, 752, 2596, 2597, 0, 636,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 0, 0, 567, 613, 612, 554, 564, 0,
	0, 251, 186, 432, 0, 433, 555, 0, 563, 556,
	560, 559, 557, 558, 0, 628, 2602, 0, 0, 0,
	0, 0, 526, 539, 0, 543, 0, 994, 2583, 0,
	0, 0, 0, 0, 2595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 536,
	537, 0, 0, 0, 0, 587, 0, 538, 0, 0,
	582, 561, 565, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 562, 585, 589, 267, 650, 583, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 651, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 388, 0, 0, 634,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	584, 0, 348, 330, 647, 527, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 366, 367, 368, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 407, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 1440, 1439, 1441, 400, 280, 234,
	235, 441, 632, 326, 0, 0, 646, 627, 629, 630,
	633, 637, 638, 639, 640, 641, 643, 645, 649, 440,
	0, 0, 0, 0, 0, 439, 332, 0, 351, 0,
	0, 0, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 411, 414, 0, 0, 0, 0,
	239, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 0, 0, 392, 963, 964, 965, 962, 0,
	588, 0, 0, 316, 317, 318, 319, 635, 0, 256,
	412, 341, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 405,
	406, 279, 285, 424, 287, 255, 331, 281, 390, 294,
	0, 417, 0, 418, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 657, 631, 656, 658, 659, 655,
	660, 661, 642, 545, 1416, 592, 653, 652, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	620, 597, 598, 599, 544, 600, 595, 596, 621, 590,
	617, 618, 569, 593, 601, 616, 602, 619, 622, 623,
	662, 663, 608, 664, 605, 624, 615, 614, 603, 591,
	625, 626, 576, 571, 606, 607, 594, 609, 610, 611,
	572, 573, 574, 575, 0, 0, 0, 396, 397, 398,
	420, 382, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 51, 155, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 148, 0, 1412,
	0, 157, 0, 1409, 0, 0, 0, 1411, 1408, 1410,
	1414, 1415, 0, 0, 0, 1413, 0, 0, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 101, 0, 0, 0, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 51, 155, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 857, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 118, 119, 0,
	120, 121, 0, 0, 113, 0, 0, 0, 0, 0,
	1634, 1634, 1634, 1634, 0, 0, 0, 0, 0, 101,
	0, 0, 1634, 0, 0, 160, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1419, 1420, 1421,
	1422, 1423, 1424, 1417, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 154, 161, 115, 99,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 147, 146,
	0, 0, 0, 115, 57, 845, 0, 0, 0, 835,
	115, 118, 119, 0, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 865, 869, 871, 873, 875,
	876, 878, 0, 883, 879, 880, 881, 882, 0, 860,
	861, 862, 863, 843, 844, 866, 0, 846, 0, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 858,
	864, 0, 0, 0, 0, 149, 150, 151, 868, 870,
	872, 874, 877, 0, 0, 0, 0, 0, 0, 130,
	154, 161, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 147, 146, 0, 859, 0, 115, 57, 109,
	0, 0, 0, 152, 0, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 149,
	150, 151, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 152, 0, 110,
	0, 0, 0, 0, 0, 365, 586, 0, 0, 0,
	0, 0, 52, 0, 0, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 0, 273, 1480, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 0, 430,
	0, 431, 0, 0, 577, 0, 111, 357, 312, 0,
	0, 0, 0, 636, 644, 0, 0, 50, 0, 0,
	0, 0, 1658, 0, 0, 535, 0, 0, 567, 613,
	612, 554, 564, 0, 0, 251, 186, 432, 0, 433,
	555, 0, 563, 556, 560, 559, 557, 558, 0, 628,
	0, 0, 0, 112, 39, 0, 526, 539, 0, 543,
	49, 5, 0, 0, 116, 117, 52, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 537, 0, 0, 0, 0, 587,
	0, 538, 0, 0, 1659, 561, 565, 0, 867, 132,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 562, 585, 589,
	267, 650, 583, 386, 246, 115, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 651, 288,
	336, 302, 337, 289, 314, 313, 315, 112, 39, 0,
	0, 0, 415, 0, 49, 0, 0, 0, 116, 117,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	388, 0, 1634, 634, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 584, 0, 348, 330, 647, 527,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 366, 367, 368, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 407, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 441, 632, 326, 0, 115,
	646, 627, 629, 630, 633, 637, 638, 639, 640, 641,
	643, 645, 649, 440, 0, 0, 0, 0, 0, 439,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 411, 414,
	0, 0, 0, 0, 239, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 588, 0, 0, 316, 317, 318,
	319, 635, 0, 256, 412, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 424, 287, 255,
	331, 281, 390, 294, 0, 417, 0, 418, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 657, 631,
	656, 658, 659, 655, 660, 661, 642, 545, 0, 592,
	653, 652, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 620, 597, 598, 599, 544, 600,
	595, 596, 621, 590, 617, 618, 569, 593, 601, 616,
	602, 619, 622, 623, 662, 663, 608, 664, 605, 624,
	615, 614, 603, 591, 625, 626, 576, 571, 606, 607,
	594, 609, 610, 611, 572, 573, 574, 575, 163, 365,
	586, 396, 397, 398, 420, 382, 0, 438, 0, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	434, 0, 0, 542, 0, 0, 0, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 997, 0,
	0, 357, 312, 0, 0, 0, 0, 636, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	0, 0, 567, 613, 612, 554, 564, 0, 0, 251,
	186, 432, 0, 433, 555, 0, 563, 556, 560, 559,
	557, 558, 0, 628, 0, 0, 0, 0, 0, 0,
	526, 539, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 537, 0,
	0, 0, 0, 587, 0, 538, 0, 0, 582, 561,
	565, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 562, 585, 589, 267, 650, 583, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 651, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 388, 0, 0, 634, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 584, 0,
	348, 330, 647, 527, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 366,
	367, 368, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	407, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 441,
	632, 326, 0, 0, 646, 627, 629, 630, 633, 637,
	638, 639, 640, 641, 643, 645, 649, 440, 0, 0,
	0, 0, 0, 439, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 411, 414, 0, 0, 0, 0, 239, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 588, 0,
	0, 316, 317, 318, 319, 635, 0, 256, 412, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 424, 287, 255, 331, 281, 390, 294, 0, 417,
	0, 418, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 657, 631, 656, 658, 659, 655, 660, 661,
	642, 545, 0, 592, 653, 652, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 299, 132, 340, 278, 0, 0, 620, 597,
	598, 599, 544, 600, 595, 596, 621, 590, 617, 618,
	569, 593, 601, 616, 602, 619, 622, 623, 662, 663,
	608, 664, 605, 624, 615, 614, 603, 591, 625, 626,
	576, 571, 606, 607, 594, 609, 610, 611, 572, 573,
	574, 575, 365, 586, 0, 396, 397, 398, 420, 382,
	0, 438, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 434, 0, 542, 0, 0, 0,
	273, 3165, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 577, 0, 0, 357, 312, 0, 0, 0, 0,
	636, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 0, 0, 567, 613, 612, 554, 564,
	0, 0, 251, 186, 432, 0, 433, 555, 0, 563,
	556, 560, 559, 557, 558, 0, 628, 0, 0, 0,
	0, 0, 0, 526, 539, 0, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 537, 0, 0, 0, 0, 587, 0, 538, 0,
	0, 582, 561, 565, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 562, 585, 589, 267, 650, 583,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 651, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 388, 0, 0,
	634, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 584, 0, 348, 330, 647, 527, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 366, 367, 368, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 407, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 441, 632, 326, 0, 0, 646, 627, 629,
	630, 633, 637, 638, 639, 640, 641, 643, 645, 649,
	440, 0, 0, 0, 0, 0, 439, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 411, 414, 0, 0, 0,
	0, 239, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 588, 0, 0, 316, 317, 318, 319, 635, 0,
	256, 412, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 424, 287, 255, 331, 281, 390,
	294, 0, 417, 0, 418, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 657, 631, 656, 658, 659,
	655, 660, 661, 642, 545, 0, 592, 653, 652, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 620, 597, 598, 599, 544, 600, 595, 596, 621,
	590, 617, 618, 569, 593, 601, 616, 602, 619, 622,
	623, 662, 663, 608, 664, 605, 624, 615, 614, 603,
	591, 625, 626, 576, 571, 606, 607, 594, 609, 610,
	611, 572, 573, 574, 575, 365, 586, 0, 396, 397,
	398, 420, 382, 0, 438, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 434, 0, 542,
	0, 0, 0, 273, 1480, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 577, 0, 0, 357, 312, 0,
	0, 0, 0, 636, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 0, 0, 567, 613,
	612, 554, 564, 0, 0, 251, 186, 432, 0, 433,
	555, 0, 563, 556, 560, 559, 557, 558, 0, 628,
	0, 0, 0, 0, 0, 0, 526, 539, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 537, 0, 0, 0, 0, 587,
	0, 538, 0, 0, 582, 561, 565, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 562, 585, 589,
	267, 650, 583, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 651, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	388, 0, 0, 634, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 584, 0, 348, 330, 647, 527,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 366, 367, 368, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 407, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 441, 632, 326, 0, 0,
	646, 627, 629, 630, 633, 637, 638, 639, 640, 641,
	643, 645, 649, 440, 0, 0, 0, 0, 0, 439,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 411, 414,
	0, 0, 0, 0, 239, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 588, 0, 0, 316, 317, 318,
	319, 635, 0, 256, 412, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 424, 287, 255,
	331, 281, 390, 294, 0, 417, 0, 418, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 657, 631,
	656, 658, 659, 655, 660, 661, 642, 545, 0, 592,
	653, 652, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 620, 597, 598, 599, 544, 600,
	595, 596, 621, 590, 617, 618, 569, 593, 601, 616,
	602, 619, 622, 623, 662, 663, 608, 664, 605, 624,
	615, 614, 603, 591, 625, 626, 576, 571, 606, 607,
	594, 609, 610, 611, 572, 573, 574, 575, 365, 586,
	0, 396, 397, 398, 420, 382, 0, 438, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	434, 0, 542, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 577, 0, 0,
	357, 312, 0, 0, 0, 0, 636, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 0,
	0, 567, 613, 612, 554, 564, 0, 0, 251, 186,
	432, 0, 433, 555, 0, 563, 556, 560, 559, 557,
	558, 0, 628, 0, 0, 0, 0, 0, 0, 526,
	539, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 537, 1235, 0,
	0, 0, 587, 0, 538, 0, 0, 582, 561, 565,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	562, 585, 589, 267, 650, 583, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 651, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 388, 0, 0, 634, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 584, 0, 348,
	330, 647, 527, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 366, 367,
	368, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 407,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 441, 632,
	326, 0, 0, 646, 627, 629, 630, 633, 637, 638,
	639, 640, 641, 643, 645, 649, 440, 0, 0, 0,
	0, 0, 439, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 411, 414, 0, 0, 0, 0, 239, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 588, 0, 0,
	316, 317, 318, 319, 635, 0, 256, 412, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	424, 287, 255, 331, 281, 390, 294, 0, 417, 0,
	418, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 657, 631, 656, 658, 659, 655, 660, 661, 642,
	545, 0, 592, 653, 652, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 620, 597, 598,
	599, 544, 600, 595, 596, 621, 590, 617, 618, 569,
	593, 601, 616, 602, 619, 622, 623, 662, 663, 608,
	664, 605, 624, 615, 614, 603, 591, 625, 626, 576,
	571, 606, 607, 594, 609, 610, 611, 572, 573, 574,
	575, 0, 0, 0, 396, 397, 398, 420, 382, 0,
	438, 0, 0, 365, 586, 0, 0, 1805, 0, 0,
	0, 0, 442, 434, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	0, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 577, 0, 0, 357, 312, 0, 0, 0,
	0, 636, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 0, 567, 613, 612, 554,
	564, 0, 0, 251, 186, 432, 0, 433, 555, 0,
	563, 556, 560, 559, 557, 558, 0, 628, 0, 0,
	0, 0, 0, 0, 526, 539, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 536, 537, 0, 0, 0, 0, 587, 0, 538,
	0, 0, 582, 561, 565, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 562, 585, 589, 267, 650,
	583, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 651, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 388, 0,
	0, 634, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 584, 0, 348, 330, 647, 527, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 366, 367, 368, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 407, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 441, 632, 326, 0, 0, 646, 627,
	629, 630, 633, 637, 638, 639, 640, 641, 643, 645,
	649, 440, 0, 0, 0, 0, 0, 439, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 411, 414, 0, 0,
	0, 0, 239, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 588, 0, 0, 316, 317, 318, 319, 635,
	0, 256, 412, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 424, 287, 255, 331, 281,
	390, 294, 0, 417, 0, 418, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 657, 631, 656, 658,
	659, 655, 660, 661, 642, 545, 0, 592, 653, 652,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 620, 597, 598, 599, 544, 600, 595, 596,
	621, 590, 617, 618, 569, 593, 601, 616, 602, 619,
	622, 623, 662, 663, 608, 664, 605, 624, 615, 614,
	603, 591, 625, 626, 576, 571, 606, 607, 594, 609,
	610, 611, 572, 573, 574, 575, 365, 586, 0, 396,
	397, 398, 420, 382, 0, 438, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 434, 0,
	542, 0, 0, 0, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 577, 0, 0, 357, 312,
	0, 0, 0, 0, 636, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 0, 567,
	613, 612, 554, 564, 0, 0, 251, 186, 432, 0,
	433, 555, 0, 563, 556, 560, 559, 557, 558, 0,
	628, 0, 0, 0, 0, 0, 0, 526, 539, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 537, 0, 0, 0, 0,
	587, 0, 538, 0, 0, 582, 561, 565, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 562, 585,
	589, 267, 650, 583, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 651,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 388, 0, 0, 634, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 584, 0, 348, 330, 647,
	527, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 366, 367, 368, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 407, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 441, 632, 326, 0,
	0, 646, 627, 629, 630, 633, 637, 638, 639, 640,
	641, 643, 645, 649, 440, 0, 0, 0, 0, 0,
	439, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 411,
	414, 0, 0, 0, 0, 239, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 588, 0, 0, 316, 317,
	318, 319, 635, 0, 256, 412, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 424, 287,
	255, 331, 281, 390, 294, 0, 417, 0, 418, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 657,
	631, 656, 658, 659, 655, 660, 661, 642, 545, 0,
	592, 653, 652, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 620, 597, 598, 599, 544,
	600, 595, 596, 621, 590, 617, 618, 569, 593, 601,
	616, 602, 619, 622, 623, 662, 663, 608, 664, 605,
	624, 615, 614, 603, 591, 625, 626, 576, 571, 606,
	607, 594, 609, 610, 611, 572, 573, 574, 575, 365,
	586, 0, 396, 397, 398, 420, 382, 0, 438, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	442, 434, 0, 542, 0, 0, 0, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 577, 0,
	0, 357, 312, 0, 0, 0, 0, 636, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	0, 0, 567, 613, 612, 554, 564, 0, 0, 251,
	186, 432, 0, 433, 555, 0, 563, 556, 560, 559,
	557, 558, 0, 628, 0, 0, 0, 0, 0, 0,
	0, 539, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 537, 0,
	0, 0, 0, 587, 0, 538, 0, 0, 582, 561,
	565, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 562, 585, 589, 267, 650, 583, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 651, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 388, 0, 0, 634, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 584, 0,
	348, 330, 647, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 366,
	367, 368, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 1360, 1361,
	407, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 441,
	632, 326, 0, 0, 646, 627, 629, 630, 633, 637,
	638, 639, 640, 641, 643, 645, 649, 440, 0, 0,
	0, 0, 0, 439, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 411, 414, 0, 0, 0, 0, 239, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 588, 0,
	0, 316, 317, 318, 319, 635, 0, 256, 412, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 424, 287, 255, 331, 281, 390, 294, 0, 417,
	0, 418, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 657, 631, 656, 658, 659, 655, 660, 661,
	642, 545, 0, 592, 653, 652, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 620, 597,
	598, 599, 544, 600, 595, 596, 621, 590, 617, 618,
	569, 593, 601, 616, 602, 619, 622, 623, 662, 663,
	608, 664, 605, 624, 615, 614, 603, 591, 625, 626,
	576, 571, 606, 607, 594, 609, 610, 611, 572, 573,
	574, 575, 365, 586, 0, 396, 397, 398, 420, 382,
	0, 438, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 434, 0, 542, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 577, 0, 0, 357, 312, 0, 0, 0, 0,
	636, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 613, 612, 554, 564,
	0, 0, 251, 186, 432, 0, 433, 555, 0, 563,
	556, 560, 559, 557, 558, 0, 628, 0, 0, 0,
	0, 0, 0, 526, 539, 0, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 537, 0, 0, 0, 0, 587, 0, 538, 0,
	0, 582, 561, 565, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 562, 585, 589, 267, 650, 583,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 651, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 388, 0, 0,
	634, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 584, 0, 348, 330, 647, 527, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 366, 367, 368, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 407, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 441, 632, 326, 0, 0, 646, 627, 629,
	630, 633, 637, 638, 639, 640, 641, 643, 645, 649,
	440, 0, 0, 0, 0, 0, 439, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 411, 414, 0, 0, 0,
	0, 239, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 588, 0, 0, 316, 317, 318, 319, 635, 0,
	256, 412, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 424, 287, 255, 331, 281, 390,
	294, 0, 417, 0, 418, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 657, 631, 656, 658, 659,
	655, 660, 661, 642, 545, 0, 592, 653, 652, 654,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 620, 597, 598, 599, 544, 600, 595, 596, 621,
	590, 617, 618, 569, 593, 601, 616, 602, 619, 622,
	623, 662, 663, 608, 664, 605, 624, 615, 614, 603,
	591, 625, 626, 576, 571, 606, 607, 594, 609, 610,
	611, 572, 573, 574, 575, 365, 586, 0, 396, 397,
	398, 420, 382, 0, 438, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 434, 0, 542,
	0, 0, 0, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 577, 0, 0, 357, 312, 0,
	0, 0, 0, 636, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 0, 0, 567, 613,
	612, 554, 564, 0, 0, 251, 186, 432, 0, 433,
	555, 0, 563, 556, 560, 559, 557, 558, 0, 628,
	0, 0, 0, 0, 0, 0, 0, 539, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 537, 0, 0, 0, 0, 587,
	0, 538, 0, 0, 582, 561, 565, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 562, 585, 589,
	267, 650, 583, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 651, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	388, 0, 0, 634, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 584, 0, 348, 330, 647, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 366, 367, 368, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 407, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 441, 632, 326, 0, 0,
	646, 627, 629, 630, 633, 637, 638, 639, 640, 641,
	643, 645, 649, 440, 0, 0, 0, 0, 0, 439,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 411, 414,
	0, 0, 0, 0, 239, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 588, 0, 0, 316, 317, 318,
	319, 635, 0, 256, 412, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 424, 287, 255,
	331, 281, 390, 294, 0, 417, 0, 418, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 657, 631,
	656, 658, 659, 655, 660, 661, 642, 545, 0, 592,
	653, 652, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 620, 597, 598, 599, 544, 600,
	595, 596, 621, 590, 617, 618, 569, 593, 601, 616,
	602, 619, 622, 623, 662, 663, 608, 664, 605, 624,
	615, 614, 603, 591, 625, 626, 576, 571, 606, 607,
	594, 609, 610, 611, 572, 573, 574, 575, 0, 0,
	0, 396, 397, 398, 420, 382, 0, 438, 0, 163,
	365, 51, 155, 131, 0, 0, 0, 0, 0, 442,
	434, 328, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 148, 0, 273, 0,
	157, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 0, 431, 0, 0, 113,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 0, 0, 0, 0, 0,
	160, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	251, 186, 432, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 419, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 130, 154, 161, 0, 99, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 178, 0,
	0, 0, 361, 0, 0, 297, 153, 147, 146, 404,
	0, 348, 330, 57, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	366, 367, 368, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 407, 0, 408, 149, 150, 151, 416, 421, 422,
	423, 425, 426, 427, 428, 0, 0, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	383, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 181, 0, 0, 429, 189, 0,
	0, 0, 152, 0, 190, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 411, 414, 0, 0, 0, 0, 239,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 409,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 412,
	341, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 424, 287, 255, 331, 281, 390, 294, 0,
	417, 0, 418, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 299, 132, 340, 278, 0, 0, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 0, 0, 230,
	231, 232, 233, 0, 0, 0, 396, 397, 398, 420,
	382, 365, 191, 39, 179, 182, 184, 183, 0, 49,
	5, 0, 328, 116, 192, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1029, 0, 0, 185, 0, 0, 554, 564, 0,
	0, 251, 186, 432, 0, 433, 555, 0, 563, 556,
	560, 559, 557, 558, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 561, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 562, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 419, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 366, 367, 368, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 407, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 441, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 429, 440,
	0, 0, 0, 0, 0, 439, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 411, 414, 0, 0, 0, 0,
	239, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	409, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	412, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 424, 287, 255, 331, 281, 390, 294,
	0, 417, 0, 418, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 396, 397, 398,
	420, 382, 0, 438, 0, 163, 365, 51, 155, 131,
	0, 0, 0, 0, 0, 442, 434, 328, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 464, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 251, 186, 432, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 419,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 366, 367, 368, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 407, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 441, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 429, 440, 0, 0, 0, 0, 0,
	439, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 411,
	414, 0, 0, 0, 0, 239, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 409, 0, 0, 316, 317,
	318, 319, 460, 462, 256, 412, 341, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 424, 287,
	255, 331, 281, 390, 294, 0, 417, 0, 418, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 299,
	132, 340, 278, 0, 0, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 0, 0, 230, 231, 232, 233, 365,
	0, 0, 396, 397, 398, 420, 382, 0, 438, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 857, 0,
	442, 434, 0, 0, 0, 0, 0, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 251,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 845, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 1889, 1891,
	1892, 1893, 1894, 1895, 1896, 0, 1901, 1897, 1898, 1899,
	1900, 0, 1884, 1885, 1886, 1887, 843, 1870, 1890, 0,
	1871, 324, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1888, 336, 302, 337, 289, 314, 313,
	315, 868, 870, 872, 874, 877, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 1883, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 366,
	367, 368, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	407, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 441,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 429, 440, 0, 0,
	0, 0, 0, 439, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 411, 414, 0, 0, 0, 0, 239, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 409, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 412, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 424, 287, 255, 331, 281, 390, 294, 0, 417,
	0, 418, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 867, 299, 0, 340, 278, 0, 0, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 0, 0, 230, 231,
	232, 233, 365, 0, 0, 396, 397, 398, 420, 382,
	0, 438, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 434, 0, 0, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 251, 186, 432, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 1962, 1965, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 419, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1966, 388, 0, 0,
	0, 1961, 1952, 1960, 361, 1958, 1963, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 366, 367, 368, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	1964, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 407, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 441, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 429,
	440, 0, 0, 0, 0, 0, 439, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 411, 414, 0, 0, 0,
	0, 239, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 409, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 412, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 424, 287, 255, 331, 281, 390,
	294, 0, 417, 0, 418, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 0,
	0, 230, 231, 232, 233, 365, 0, 0, 396, 397,
	398, 420, 382, 0, 438, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 434, 0, 0,
	0, 0, 0, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 251, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	1962, 1965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 419, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1966,
	388, 0, 0, 0, 1961, 0, 1960, 361, 1958, 1963,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 366, 367, 368, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 1964, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 407, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 441, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 429, 440, 0, 0, 0, 0, 0, 439,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 411, 414,
	0, 0, 0, 0, 239, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 409, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 412, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 424, 287, 255,
	331, 281, 390, 294, 0, 417, 0, 418, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 0, 0, 230, 231, 232, 233, 365, 0,
	0, 396, 397, 398, 420, 382, 0, 438, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	434, 1692, 0, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 1693, 0, 0, 0, 251, 186,
	432, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 963, 964, 965, 962, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 419, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 366, 367,
	368, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 407,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 441, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 429, 440, 0, 0, 0,
	0, 0, 439, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 411, 414, 0, 0, 0, 0, 239, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 409, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 412, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	424, 287, 255, 331, 281, 390, 294, 0, 417, 0,
	418, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 0, 0, 230, 231, 232,
	233, 365, 0, 0, 396, 397, 398, 420, 382, 0,
	438, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 434, 0, 0, 0, 0, 0, 273,
	780, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 787, 788, 0, 0, 0,
	0, 251, 186, 432, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 775,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 766, 386,
	246, 765, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 419, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 778, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 366, 367, 368, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 407, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 441, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 429, 440,
	0, 0, 0, 0, 0, 439, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 411, 414, 0, 0, 0, 0,
	239, 413, 0, 0, 0, 0, 0, 0, 779, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	782, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	412, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 424, 287, 255, 331, 281, 390, 294,
	0, 417, 0, 418, 0, 0, 0, 0, 789, 776,
	785, 777, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 786, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 0, 0,
	230, 231, 232, 233, 365, 0, 0, 396, 397, 398,
	420, 382, 0, 438, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 434, 0, 0, 0,
	0, 0, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	431, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 251, 186, 432, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 419, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1968, 388,
	0, 0, 0, 1973, 1971, 0, 361, 0, 1972, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 366, 367, 368, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 407, 0, 408, 0, 0,
	0, 416, 421, 422, 423, 425, 426, 427, 428, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 441, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 429, 440, 0, 0, 0, 0, 0, 439, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 411, 414, 0,
	0, 0, 0, 239, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 409, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 412, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 424, 287, 255, 331,
	281, 390, 294, 0, 417, 0, 418, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 0, 0, 230, 231, 232, 233, 163, 365, 0,
	396, 397, 398, 420, 382, 0, 438, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 434,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 113, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 1736,
	0, 185, 0, 0, 0, 0, 0, 0, 251, 186,
	432, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 419, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 366, 367,
	368, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 407,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 441, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 429, 440, 0, 0, 0,
	0, 0, 439, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 411, 414, 0, 0, 0, 0, 239, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 409, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 412, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	424, 287, 255, 331, 281, 390, 294, 0, 417, 0,
	418, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 299, 132, 340, 278, 0, 0, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 0, 0, 230, 231, 232,
	233, 163, 365, 0, 396, 397, 398, 420, 382, 0,
	438, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 434, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 113, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 1727, 0, 185, 0, 0, 0, 0,
	0, 0, 251, 186, 432, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 419, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 366, 367, 368, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 407, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 441, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 429,
	440, 0, 0, 0, 0, 0, 439, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 411, 414, 0, 0, 0,
	0, 239, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 409, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 412, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 424, 287, 255, 331, 281, 390,
	294, 0, 417, 0, 418, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 299, 132, 340, 278, 0,
	0, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 0,
	0, 230, 231, 232, 233, 163, 365, 0, 396, 397,
	398, 420, 382, 0, 438, 0, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 434, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 113, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 251, 186, 432, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 419,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 366, 367, 368, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 407, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 441, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 429, 440, 0, 0, 0, 0, 0,
	439, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 411,
	414, 0, 0, 0, 0, 239, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 409, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 412, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 424, 287,
	255, 331, 281, 390, 294, 0, 417, 0, 418, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 299,
	132, 340, 278, 0, 0, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 0, 0, 230, 231, 232, 233, 365,
	0, 0, 396, 397, 398, 420, 382, 0, 438, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 434, 0, 0, 0, 0, 0, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 787, 788, 0, 0, 0, 0, 251,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 766, 386, 246, 765,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 419, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 366,
	367, 368, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	407, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 441,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 429, 440, 0, 0,
	0, 0, 0, 439, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 411, 414, 0, 0, 0, 0, 239, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 409, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 412, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 424, 287, 255, 331, 281, 390, 294, 0, 417,
	0, 418, 0, 0, 0, 0, 789, 1651, 785, 1652,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 0, 0, 230, 231,
	232, 233, 365, 0, 0, 396, 397, 398, 420, 382,
	0, 438, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 2362, 442, 434, 0, 0, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 251, 186, 432, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 419, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 2365, 0,
	0, 2364, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 366, 367, 368, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 407, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 441, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 429,
	440, 0, 0, 0, 0, 0, 439, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 411, 414, 0, 0, 0,
	0, 239, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 409, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 412, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 424, 287, 255, 331, 281, 390,
	294, 0, 417, 0, 418, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 0,
	0, 230, 231, 232, 233, 365, 0, 0, 396, 397,
	398, 420, 382, 0, 438, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 434, 0, 0,
	0, 0, 0, 273, 1208, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 1206, 0, 0, 0, 251, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1204, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 419, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 366, 367, 368, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 407, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 441, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 429, 440, 0, 0, 0, 0, 0, 439,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 411, 414,
	0, 0, 0, 0, 239, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 409, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 412, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 424, 287, 255,
	331, 281, 390, 294, 0, 417, 0, 418, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 0, 0, 230, 231, 232, 233, 365, 0,
	0, 396, 397, 398, 420, 382, 0, 438, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	434, 0, 0, 0, 0, 0, 273, 1202, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 1206, 0, 0, 0, 251, 186,
	432, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1204, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 419, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 366, 367,
	368, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 407,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 441, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 429, 440, 0, 0, 0,
	0, 0, 439, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 411, 414, 0, 0, 0, 0, 239, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 409, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 412, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	424, 287, 255, 331, 281, 390, 294, 0, 417, 0,
	418, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 0, 0, 230, 231, 232,
	233, 365, 0, 0, 396, 397, 398, 420, 382, 0,
	438, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 434, 0, 0, 0, 0, 0, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3092, 0, 185, 613, 0, 0, 0, 0,
	0, 251, 186, 432, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 419, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 366, 367, 368, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 407, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 441, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 429, 440,
	0, 0, 0, 0, 0, 439, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 411, 414, 0, 0, 0, 0,
	239, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	409, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	412, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 424, 287, 255, 331, 281, 390, 294,
	0, 417, 0, 418, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 0, 0,
	230, 231, 232, 233, 365, 0, 0, 396, 397, 398,
	420, 382, 0, 438, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 434, 0, 0, 0,
	0, 0, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	431, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	1206, 0, 0, 0, 251, 186, 432, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1204, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 419, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 366, 367, 368, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 407, 0, 408, 0, 0,
	0, 416, 421, 422, 423, 425, 426, 427, 428, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 441, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 429, 440, 0, 0, 0, 0, 0, 439, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 411, 414, 0,
	0, 0, 0, 239, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 409, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 412, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 424, 287, 255, 331,
	281, 390, 294, 0, 417, 0, 418, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 0, 0, 230, 231, 232, 233, 365, 0, 0,
	396, 397, 398, 420, 382, 0, 438, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 434,
	0, 0, 0, 0, 0, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 0, 0, 0, 357,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 1206, 0, 0, 0, 251, 186, 432,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2751, 0, 0, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 0,
	375, 403, 267, 394, 0, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	419, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 404, 0, 348, 330,
	0, 0, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 366, 367, 368,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 407, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 441, 266, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	399, 0, 0, 0, 429, 440, 0, 0, 0, 0,
	0, 439, 332, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 381, 393,
	411, 414, 0, 0, 0, 0, 239, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 409, 0, 0, 316,
	317, 318, 319, 283, 0, 256, 412, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 279, 285, 424,
	287, 255, 331, 281, 390, 294, 0, 417, 0, 418,
	0, 0, 0, 0, 323, 290, 291, 355, 295, 301,
	344, 389, 329, 349, 253, 380, 356, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 0, 0, 230, 231, 232, 233,
	365, 0, 0, 396, 397, 398, 420, 382, 0, 438,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 434, 2045, 0, 0, 0, 0, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 0, 431, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 2047, 0, 0, 0,
	251, 186, 432, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 419, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	366, 367, 368, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 407, 0, 408, 0, 0, 0, 416, 421, 422,
	423, 425, 426, 427, 428, 0, 0, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	441, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 429, 440, 0,
	0, 0, 0, 0, 439, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 411, 414, 0, 0, 0, 0, 239,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 409,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 412,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 424, 287, 255, 331, 281, 390, 294, 0,
	417, 0, 418, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 299, 0, 340, 278, 0, 0, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 0, 0, 230,
	231, 232, 233, 365, 0, 0, 396, 397, 398, 420,
	382, 0, 438, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 434, 0, 0, 0, 0,
	0, 273, 2066, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 1206,
	0, 0, 0, 251, 186, 432, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 419, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 366, 367, 368, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 407, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 441, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	429, 440, 0, 0, 0, 0, 0, 439, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 411, 414, 0, 0,
	0, 0, 239, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 409, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 412, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 424, 287, 255, 331, 281,
	390, 294, 0, 417, 0, 418, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	0, 0, 230, 231, 232, 233, 365, 0, 0, 396,
	397, 398, 420, 382, 0, 438, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 434, 0,
	0, 0, 0, 0, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3174, 0, 185,
	0, 0, 0, 0, 0, 0, 251, 186, 432, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 419,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 366, 367, 368, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 407, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 441, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 429, 440, 0, 0, 0, 0, 0,
	439, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 411,
	414, 0, 0, 0, 0, 239, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 409, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 412, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 424, 287,
	255, 331, 281, 390, 294, 0, 417, 0, 418, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 0, 0, 230, 231, 232, 233, 365,
	0, 0, 396, 397, 398, 420, 382, 0, 438, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 434, 0, 0, 0, 0, 0, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 613, 0, 0, 0, 0, 0, 251,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 419, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 366,
	367, 368, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	407, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 441,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 429, 440, 0, 0,
	0, 0, 0, 439, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 411, 414, 0, 0, 0, 0, 239, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 409, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 412, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 424, 287, 255, 331, 281, 390, 294, 0, 417,
	0, 418, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 0, 0, 230, 231,
	232, 233, 365, 0, 0, 396, 397, 398, 420, 382,
	0, 438, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 434, 0, 0, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3107, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 251, 186, 432, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 419, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 366, 367, 368, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 407, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 441, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 429,
	440, 0, 0, 0, 0, 0, 439, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 411, 414, 0, 0, 0,
	0, 239, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 409, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 412, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 424, 287, 255, 331, 281, 390,
	294, 0, 417, 0, 418, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 0,
	0, 230, 231, 232, 233, 365, 0, 0, 396, 397,
	398, 420, 382, 0, 438, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 434, 0, 0,
	0, 0, 0, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 251, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 419, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 3040, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 366, 367, 368, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 407, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 441, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 429, 440, 0, 0, 0, 0, 0, 439,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 411, 414,
	0, 0, 0, 0, 239, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 409, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 412, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 424, 287, 255,
	331, 281, 390, 294, 0, 417, 0, 418, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 0, 0, 230, 231, 232, 233, 365, 0,
	0, 396, 397, 398, 420, 382, 0, 438, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	434, 0, 0, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2849, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 251, 186,
	432, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 419, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 366, 367,
	368, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 407,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 441, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 429, 440, 0, 0, 0,
	0, 0, 439, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 411, 414, 0, 0, 0, 0, 239, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 409, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 412, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	424, 287, 255, 331, 281, 390, 294, 0, 417, 0,
	418, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 0, 0, 230, 231, 232,
	233, 365, 0, 0, 396, 397, 398, 420, 382, 0,
	438, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 434, 0, 0, 0, 0, 0, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 251, 186, 432, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 419, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	2898, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 366, 367, 368, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 407, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 441, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 429, 440,
	0, 0, 0, 0, 0, 439, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 411, 414, 0, 0, 0, 0,
	239, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	409, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	412, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 424, 287, 255, 331, 281, 390, 294,
	0, 417, 0, 418, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 0, 0,
	230, 231, 232, 233, 365, 0, 0, 396, 397, 398,
	420, 382, 0, 438, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 434, 0, 0, 0,
	0, 0, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	431, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 251, 186, 432, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 419, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 366, 367, 368, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 407, 0, 408, 0, 0,
	0, 416, 421, 422, 423, 425, 426, 427, 428, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 441, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 429, 440, 0, 0, 0, 0, 0, 439, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 411, 414, 0,
	0, 0, 0, 239, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 409, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 412, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 424, 287, 255, 331,
	281, 390, 294, 0, 417, 0, 418, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 0, 0, 230, 231, 232, 233, 365, 0, 0,
	396, 397, 398, 420, 382, 0, 438, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 434,
	0, 0, 0, 0, 0, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 0, 0, 0, 357,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1632, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 251, 186, 432,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 0,
	375, 403, 267, 394, 0, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	419, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 404, 0, 348, 330,
	0, 0, 0, 346, 300, 373, 338, 379, 363, 387,
	342, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 366, 367, 368,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 407, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 441, 266, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	399, 0, 0, 0, 429, 440, 0, 0, 0, 0,
	0, 439, 332, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 381, 393,
	411, 414, 0, 0, 0, 0, 239, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 409, 0, 0, 316,
	317, 318, 319, 283, 0, 256, 412, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 279, 285, 424,
	287, 255, 331, 281, 390, 294, 0, 417, 0, 418,
	0, 0, 0, 0, 323, 290, 291, 355, 295, 301,
	344, 389, 329, 349, 253, 380, 356, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 0, 0, 230, 231, 232, 233,
	365, 0, 0, 396, 397, 398, 420, 382, 0, 438,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 434, 0, 0, 0, 0, 0, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 0, 431, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	251, 186, 432, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 419, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	366, 367, 368, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 407, 0, 408, 0, 0, 0, 416, 421, 422,
	423, 425, 426, 427, 428, 0, 0, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	441, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 429, 440, 0,
	0, 0, 0, 0, 439, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 411, 414, 0, 0, 0, 0, 239,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 409,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 412,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 424, 287, 255, 331, 281, 390, 294, 0,
	417, 0, 418, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 299, 0, 340, 278, 0, 0, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 0, 0, 230,
	231, 232, 233, 365, 0, 0, 396, 397, 398, 420,
	382, 0, 438, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 434, 0, 0, 0, 0,
	0, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 2520,
	0, 0, 0, 251, 186, 432, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 419, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 366, 367, 368, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 407, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 441, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	429, 440, 0, 0, 0, 0, 0, 439, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 411, 414, 0, 0,
	0, 0, 239, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 409, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 412, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 424, 287, 255, 331, 281,
	390, 294, 0, 417, 0, 418, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	0, 0, 230, 231, 232, 233, 365, 0, 0, 396,
	397, 398, 420, 382, 0, 438, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 434, 0,
	0, 0, 0, 0, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 251, 186, 432, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2450, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 419,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 366, 367, 368, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 407, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 441, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 429, 440, 0, 0, 0, 0, 0,
	439, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 411,
	414, 0, 0, 0, 0, 239, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 409, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 412, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 424, 287,
	255, 331, 281, 390, 294, 0, 417, 0, 418, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 0, 0, 230, 231, 232, 233, 365,
	0, 0, 396, 397, 398, 420, 382, 0, 438, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 434, 0, 0, 0, 0, 0, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 1206, 0, 0, 0, 251,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 378, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 419, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 366,
	367, 368, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	407, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 441,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 429, 440, 0, 0,
	0, 0, 0, 439, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 411, 414, 0, 0, 0, 0, 239, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 409, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 412, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 424, 287, 255, 331, 281, 390, 294, 0, 417,
	0, 418, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 0, 0, 230, 231,
	232, 233, 365, 0, 0, 396, 397, 398, 420, 382,
	0, 438, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 434, 0, 0, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 2047, 0,
	0, 0, 251, 186, 432, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 419, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 366, 367, 368, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 407, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 441, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 429,
	440, 0, 0, 0, 0, 0, 439, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 411, 414, 0, 0, 0,
	0, 239, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 409, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 412, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 424, 287, 255, 331, 281, 390,
	294, 0, 417, 0, 418, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 0,
	0, 230, 231, 232, 233, 365, 0, 0, 396, 397,
	398, 420, 382, 0, 438, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 434, 0, 0,
	0, 0, 0, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 251, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 419, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 366, 367, 368, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 407, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 441, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 429, 440, 0, 0, 0, 0, 0, 439,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 411, 414,
	0, 0, 0, 0, 239, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 409, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 412, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 424, 287, 255,
	331, 281, 390, 294, 0, 417, 0, 418, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 0, 0, 230, 231, 232, 233, 365, 0,
	0, 396, 397, 398, 420, 382, 0, 438, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	434, 0, 0, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 251, 186,
	432, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 419, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 342, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 366, 367,
	368, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 407,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 441, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 429, 440, 0, 0, 0,
	0, 0, 439, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 411, 414, 0, 0, 0, 0, 239, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 409, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 412, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	424, 287, 255, 331, 281, 390, 294, 0, 417, 0,
	418, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 0, 0, 230, 231, 232,
	233, 365, 0, 0, 396, 397, 398, 420, 382, 0,
	438, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 434, 0, 0, 0, 0, 0, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 2082, 0, 0,
	0, 251, 186, 432, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 419, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 0,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 366, 367, 368, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 407, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 441, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 429, 440,
	0, 0, 0, 0, 0, 439, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 411, 414, 0, 0, 0, 0,
	239, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	409, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	412, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 424, 287, 255, 331, 281, 390, 294,
	0, 417, 0, 418, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 396, 397, 398,
	420, 382, 365, 438, 0, 0, 1924, 0, 0, 0,
	0, 0, 0, 328, 0, 442, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 251, 186, 432, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	378, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 419, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 366, 367, 368, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 407, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 441, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 429,
	440, 0, 0, 0, 0, 0, 439, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 411, 414, 0, 0, 0,
	0, 239, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 409, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 412, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 424, 287, 255, 331, 281, 390,
	294, 0, 417, 0, 418, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 0,
	0, 230, 231, 232, 233, 365, 0, 0, 396, 397,
	398, 420, 382, 0, 438, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 442, 434, 0, 0,
	0, 0, 0, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 251, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 419, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 265, 272, 274, 276,
	277, 320, 321, 333, 352, 366, 367, 368, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 407, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 441, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 429, 440, 0, 0, 0, 0, 0, 439,
	332, 0, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 411, 414,
	0, 0, 0, 0, 239, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 0, 0, 392, 0,
	0, 0, 0, 0, 409, 0, 0, 316, 317, 318,
	319, 283, 0, 256, 412, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 279, 285, 424, 287, 255,
	331, 281, 390, 294, 0, 417, 0, 418, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 299, 0,
	340, 278, 0, 0, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 0, 0, 230, 231, 232, 233, 365, 0,
	0, 396, 397, 398, 420, 382, 0, 438, 0, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	434, 0, 0, 0, 0, 0, 273, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 0, 0, 0,
	357, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 1206, 0, 0, 0, 251, 186,
	432, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 362, 378, 252, 353, 391,
	257, 360, 247, 327, 350, 0, 0, 244, 376, 359,
	309, 292, 293, 243, 0, 345, 271, 284, 268, 325,
	0, 375, 403, 267, 394, 0, 386, 246, 0, 385,
	324, 372, 377, 310, 304, 245, 374, 308, 303, 296,
	275, 419, 288, 336, 302, 337, 289, 314, 313, 315,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	361, 0, 0, 297, 0, 0, 0, 404, 0, 348,
	330, 0, 0, 0, 346, 300, 373, 338, 379, 363,
	387, 1535, 339, 237, 364, 270, 311, 248, 250, 265,
	272, 274, 276, 277, 320, 321, 333, 352, 366, 367,
	368, 269, 258, 347, 259, 286, 260, 238, 262, 261,
	263, 354, 264, 240, 334, 371, 0, 282, 343, 307,
	241, 306, 335, 370, 369, 249, 395, 401, 402, 407,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 400, 280, 234, 235, 441, 266,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	322, 399, 0, 0, 0, 429, 440, 0, 0, 0,
	0, 0, 439, 332, 0, 351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 358, 381,
	393, 411, 414, 0, 0, 0, 0, 239, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 392, 0, 0, 0, 0, 0, 409, 0, 0,
	316, 317, 318, 319, 283, 0, 256, 412, 341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 279, 285,
	424, 287, 255, 331, 281, 390, 294, 0, 417, 0,
	418, 0, 0, 0, 0, 323, 290, 291, 355, 295,
	301, 344, 389, 329, 349, 253, 380, 356, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 299, 0, 340, 278, 0, 0, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 0, 0, 0, 230, 231, 232,
	233, 365, 0, 0, 396, 397, 398, 420, 382, 0,
	438, 0, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 442, 434, 0, 0, 0, 0, 0, 273,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 357, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 251, 186, 432, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 362, 378,
	252, 353, 391, 257, 360, 247, 327, 350, 0, 0,
	244, 376, 359, 309, 292, 293, 243, 0, 345, 271,
	284, 268, 325, 0, 375, 403, 267, 394, 0, 386,
	246, 0, 385, 324, 372, 377, 310, 304, 245, 374,
	308, 303, 296, 275, 419, 288, 336, 302, 337, 289,
	314, 313, 315, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 388, 0, 0, 1230,
	0, 0, 0, 361, 0, 0, 297, 0, 0, 0,
	404, 0, 348, 330, 0, 0, 0, 346, 300, 373,
	338, 379, 363, 387, 342, 339, 237, 364, 270, 311,
	248, 250, 265, 272, 274, 276, 277, 320, 321, 333,
	352, 366, 367, 368, 269, 258, 347, 259, 286, 260,
	238, 262, 261, 263, 354, 264, 240, 334, 371, 0,
	282, 343, 307, 241, 306, 335, 370, 369, 249, 395,
	401, 402, 407, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 400, 280, 234,
	235, 441, 266, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 322, 399, 0, 0, 0, 429, 440,
	0, 0, 0, 0, 0, 439, 332, 0, 351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 381, 393, 411, 414, 0, 0, 0, 0,
	239, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 392, 0, 0, 0, 0, 0,
	409, 0, 0, 316, 317, 318, 319, 283, 0, 256,
	412, 341, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 279, 285, 424, 287, 255, 331, 281, 390, 294,
	0, 417, 0, 418, 0, 0, 0, 0, 323, 290,
	291, 355, 295, 301, 344, 389, 329, 349, 253, 380,
	356, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 299, 0, 340, 278, 0, 0,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 0, 0,
	230, 231, 232, 233, 365, 0, 0, 396, 397, 398,
	420, 382, 0, 438, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 442, 434, 0, 0, 0,
	0, 0, 273, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	431, 0, 0, 0, 0, 0, 357, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 251, 186, 432, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 362, 378, 252, 353, 391, 257, 360, 247, 327,
	350, 0, 0, 244, 376, 359, 309, 292, 293, 243,
	0, 345, 271, 284, 268, 325, 0, 375, 403, 267,
	394, 0, 386, 246, 0, 385, 324, 372, 377, 310,
	304, 245, 374, 308, 303, 296, 275, 419, 288, 336,
	302, 337, 289, 314, 313, 315, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 0, 0, 0, 0, 0, 361, 0, 0, 297,
	0, 0, 0, 404, 0, 348, 330, 0, 0, 0,
	346, 300, 373, 338, 379, 363, 387, 342, 339, 237,
	364, 270, 311, 248, 250, 265, 272, 274, 276, 277,
	320, 321, 333, 352, 366, 367, 368, 269, 258, 347,
	259, 286, 260, 238, 262, 261, 263, 354, 264, 240,
	334, 371, 0, 282, 343, 307, 241, 306, 335, 370,
	369, 249, 395, 401, 402, 407, 0, 408, 0, 0,
	0, 416, 421, 422, 423, 425, 426, 427, 428, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	400, 280, 234, 235, 441, 266, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 322, 399, 0, 0,
	0, 429, 440, 0, 0, 0, 0, 0, 439, 332,
	0, 351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 358, 381, 393, 411, 414, 0,
	0, 0, 0, 239, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 392, 0, 0,
	0, 0, 0, 409, 0, 0, 316, 317, 318, 319,
	283, 0, 256, 412, 341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 279, 285, 424, 287, 255, 331,
	281, 390, 294, 0, 417, 0, 418, 0, 0, 0,
	0, 323, 290, 291, 355, 295, 301, 344, 389, 329,
	349, 253, 380, 356, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 0, 0, 0, 236, 0, 299, 0, 340,
	278, 0, 0, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 0, 0, 230, 231, 232, 233, 365, 0, 0,
	396, 397, 398, 420, 382, 0, 438, 0, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 442, 434,
	0, 0, 0, 0, 0, 273, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 0, 0, 0, 357,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 251, 186, 432,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 242, 362, 378, 252, 353, 391, 257,
	360, 247, 327, 350, 0, 0, 244, 376, 359, 309,
	292, 293, 243, 0, 345, 271, 284, 268, 325, 0,
	375, 403, 267, 394, 0, 386, 246, 0, 385, 324,
	372, 377, 310, 304, 245, 374, 308, 303, 296, 275,
	419, 288, 336, 302, 337, 289, 314, 313, 315, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 388, 0, 0, 0, 0, 0, 0, 361,
	0, 0, 297, 0, 0, 0, 404, 0, 348, 330,
	0, 0, 0, 346, 300, 373, 338, 379, 363, 387,
	480, 339, 237, 364, 270, 311, 248, 250, 265, 272,
	274, 276, 277, 320, 321, 333, 352, 366, 367, 368,
	269, 258, 347, 259, 286, 260, 238, 262, 261, 263,
	354, 264, 240, 334, 371, 0, 282, 343, 307, 241,
	306, 335, 370, 369, 249, 395, 401, 402, 407, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 400, 280, 234, 235, 441, 266, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	399, 0, 0, 0, 429, 440, 0, 0, 0, 0,
	0, 439, 332, 0, 351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 381, 393,
	411, 414, 0, 0, 0, 0, 239, 413, 0, 0,
	0, 0, 0, 0, 481, 0, 384, 0, 0, 0,
	392, 0, 0, 0, 0, 0, 409, 0, 0, 316,
	317, 318, 319, 283, 0, 256, 412, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 279, 285, 424,
	287, 255, 331, 281, 390, 294, 0, 417, 0, 418,
	0, 0, 0, 0, 323, 290, 291, 355, 295, 301,
	344, 389, 329, 349, 253, 380, 356, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	299, 0, 340, 278, 0, 0, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 0, 0, 230, 231, 232, 233,
	365, 0, 0, 396, 397, 398, 420, 382, 0, 438,
	0, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 442, 434, 0, 0, 0, 0, 0, 273, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 0, 431, 0, 0, 0,
	0, 0, 357, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	251, 186, 432, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 362, 378, 252,
	353, 391, 257, 360, 247, 327, 350, 0, 0, 244,
	376, 359, 309, 292, 293, 243, 0, 345, 271, 284,
	268, 325, 0, 375, 403, 267, 394, 0, 386, 246,
	0, 385, 324, 372, 377, 310, 304, 245, 374, 308,
	303, 296, 275, 419, 288, 336, 302, 337, 289, 314,
	313, 315, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 0, 0, 388, 0, 0, 0, 0,
	0, 0, 361, 0, 0, 297, 0, 0, 0, 404,
	0, 348, 330, 0, 0, 0, 346, 300, 373, 338,
	379, 363, 387, 342, 339, 237, 364, 270, 311, 248,
	250, 265, 272, 274, 276, 277, 320, 321, 333, 352,
	366, 367, 368, 269, 258, 347, 259, 286, 260, 238,
	262, 261, 263, 354, 264, 240, 334, 371, 0, 282,
	343, 307, 241, 306, 335, 370, 369, 249, 395, 401,
	402, 407, 0, 408, 0, 0, 0, 416, 421, 422,
	423, 425, 426, 427, 428, 0, 0, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 400, 280, 234, 235,
	441, 266, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 322, 399, 0, 0, 0, 429, 440, 0,
	0, 0, 0, 0, 439, 332, 0, 351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	358, 381, 393, 411, 414, 0, 0, 0, 0, 239,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 392, 0, 0, 0, 0, 0, 409,
	0, 0, 316, 317, 318, 319, 283, 0, 256, 412,
	341, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	279, 285, 424, 287, 255, 331, 281, 390, 294, 0,
	417, 0, 418, 0, 0, 0, 0, 323, 290, 291,
	355, 295, 301, 344, 389, 329, 349, 253, 380, 356,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 299, 0, 340, 278, 0, 0, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 0, 0, 230,
	231, 232, 233, 365, 0, 0, 396, 397, 398, 420,
	382, 0, 438, 0, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 442, 434, 0, 0, 0, 0,
	447, 273, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 0, 0, 0, 357, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 251, 186, 432, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	362, 378, 252, 353, 391, 257, 360, 247, 327, 350,
	0, 0, 244, 376, 359, 309, 292, 293, 243, 0,
	345, 271, 284, 268, 325, 0, 375, 403, 267, 394,
	0, 386, 246, 0, 385, 324, 372, 377, 310, 304,
	245, 374, 308, 303, 296, 275, 419, 288, 336, 302,
	337, 289, 314, 313, 315, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 388, 0,
	0, 0, 0, 0, 0, 361, 0, 0, 297, 0,
	0, 0, 404, 0, 348, 330, 0, 0, 0, 346,
	300, 373, 338, 379, 363, 387, 342, 339, 237, 364,
	270, 311, 248, 250, 265, 272, 274, 276, 277, 320,
	321, 333, 352, 366, 367, 368, 269, 258, 347, 259,
	286, 260, 238, 262, 261, 263, 354, 264, 240, 334,
	371, 0, 282, 343, 307, 241, 306, 335, 370, 369,
	249, 395, 401, 402, 407, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 400,
	280, 234, 235, 441, 266, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 322, 399, 0, 0, 0,
	429, 440, 0, 0, 0, 0, 0, 439, 332, 0,
	351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 381, 393, 411, 414, 0, 0,
	0, 0, 239, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 392, 0, 0, 0,
	0, 0, 409, 0, 0, 316, 317, 318, 319, 283,
	0, 256, 412, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 279, 285, 424, 287, 255, 331, 281,
	390, 294, 0, 417, 0, 418, 0, 0, 0, 0,
	323, 290, 291, 355, 295, 301, 344, 389, 329, 349,
	253, 380, 356, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 299, 0, 340, 278,
	0, 0, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	0, 0, 230, 231, 232, 233, 365, 0, 0, 396,
	397, 398, 420, 382, 0, 438, 0, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 442, 434, 0,
	0, 0, 0, 0, 273, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 0, 0, 0, 357, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 251, 186, 432, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 362, 378, 252, 353, 391, 257, 360,
	247, 327, 350, 0, 0, 244, 376, 359, 309, 292,
	293, 243, 0, 345, 271, 284, 268, 325, 0, 375,
	403, 267, 394, 0, 386, 246, 0, 385, 324, 372,
	377, 310, 304, 245, 374, 308, 303, 296, 275, 419,
	288, 336, 302, 337, 289, 314, 313, 315, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 388, 0, 0, 0, 0, 0, 0, 361, 0,
	0, 297, 0, 0, 0, 404, 0, 348, 330, 0,
	0, 0, 346, 300, 373, 338, 379, 363, 387, 342,
	339, 237, 364, 270, 311, 248, 250, 265, 272, 274,
	276, 277, 320, 321, 333, 352, 366, 367, 368, 269,
	258, 347, 259, 286, 260, 238, 262, 261, 263, 354,
	264, 240, 334, 371, 0, 282, 343, 307, 241, 306,
	335, 370, 369, 249, 395, 401, 402, 407, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 400, 280, 234, 235, 441, 266, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 322, 399,
	0, 0, 0, 429, 440, 0, 0, 0, 0, 0,
	439, 332, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 358, 381, 393, 411,
	414, 0, 0, 0, 0, 239, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 392,
	0, 0, 0, 0, 0, 409, 0, 0, 316, 317,
	318, 319, 283, 0, 256, 412, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 279, 285, 424, 287,
	255, 331, 281, 390, 294, 0, 417, 0, 418, 0,
	0, 0, 0, 323, 290, 291, 355, 295, 301, 344,
	389, 329, 349, 253, 380, 356, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 299,
	0, 340, 278, 0, 0, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 0, 0, 230, 231, 232, 233, 365,
	0, 0, 396, 397, 398, 420, 382, 0, 438, 0,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	442, 434, 0, 0, 0, 0, 0, 273, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 357, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 251,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 362, 1186, 252, 353,
	391, 257, 360, 247, 327, 350, 0, 0, 244, 376,
	359, 309, 292, 293, 243, 0, 345, 271, 284, 268,
	325, 0, 375, 403, 267, 394, 0, 386, 246, 0,
	385, 324, 372, 377, 310, 304, 245, 374, 308, 303,
	296, 275, 419, 288, 336, 302, 337, 289, 314, 313,
	315, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 388, 0, 0, 0, 0, 0,
	0, 361, 0, 0, 297, 0, 0, 0, 404, 0,
	348, 330, 0, 0, 0, 346, 300, 373, 338, 379,
	363, 387, 342, 339, 237, 364, 270, 311, 248, 250,
	265, 272, 274, 276, 277, 320, 321, 333, 352, 366,
	367, 368, 269, 258, 347, 259, 286, 260, 238, 262,
	261, 263, 354, 264, 240, 334, 371, 0, 282, 343,
	307, 241, 306, 335, 370, 369, 249, 395, 401, 402,
	407, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 400, 280, 234, 235, 441,
	266, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 322, 399, 0, 0, 0, 429, 440, 0, 0,
	0, 0, 0, 439, 332, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	381, 393, 411, 414, 0, 0, 0, 0, 239, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 0, 392, 0, 0, 0, 0, 0, 409, 0,
	0, 316, 317, 318, 319, 283, 0, 256, 412, 341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 279,
	285, 424, 287, 255, 331, 281, 390, 294, 0, 417,
	0, 418, 0, 0, 0, 0, 323, 290, 291, 355,
	295, 301, 344, 389, 329, 349, 253, 380, 356, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 299, 0, 340, 278, 0, 0, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 0, 0, 230, 231,
	232, 233, 365, 0, 0, 396, 397, 398, 420, 382,
	0, 438, 0, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 434, 0, 0, 0, 0, 0,
	273, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 0, 0, 0, 357, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 251, 186, 432, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 362,
	1184, 252, 353, 391, 257, 360, 247, 327, 350, 0,
	0, 244, 376, 359, 309, 292, 293, 243, 0, 345,
	271, 284, 268, 325, 0, 375, 403, 267, 394, 0,
	386, 246, 0, 385, 324, 372, 377, 310, 304, 245,
	374, 308, 303, 296, 275, 419, 288, 336, 302, 337,
	289, 314, 313, 315, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 388, 0, 0,
	0, 0, 0, 0, 361, 0, 0, 297, 0, 0,
	0, 404, 0, 348, 330, 0, 0, 0, 346, 300,
	373, 338, 379, 363, 387, 342, 339, 237, 364, 270,
	311, 248, 250, 265, 272, 274, 276, 277, 320, 321,
	333, 352, 366, 367, 368, 269, 258, 347, 259, 286,
	260, 238, 262, 261, 263, 354, 264, 240, 334, 371,
	0, 282, 343, 307, 241, 306, 335, 370, 369, 249,
	395, 401, 402, 407, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 400, 280,
	234, 235, 441, 266, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 322, 399, 0, 0, 0, 429,
	440, 0, 0, 0, 0, 0, 439, 332, 0, 351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 381, 393, 411, 414, 0, 0, 0,
	0, 239, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 392, 0, 0, 0, 0,
	0, 409, 0, 0, 316, 317, 318, 319, 283, 0,
	256, 412, 341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 279, 285, 424, 287, 255, 331, 281, 390,
	294, 0, 417, 0, 418, 0, 0, 0, 0, 323,
	290, 291, 355, 295, 301, 344, 389, 329, 349, 253,
	380, 356, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 299, 0, 340, 278, 0,
	0, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 0,
	0, 230, 231, 232, 233, 365, 0, 0, 396, 397,
	398, 420, 382, 0, 438, 0, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 442, 434, 0, 0,
	0, 0, 0, 273, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 357, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 251, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 362, 378, 252, 353, 391, 257, 360, 247,
	327, 350, 0, 0, 244, 376, 359, 309, 292, 293,
	243, 0, 345, 271, 284, 268, 325, 0, 375, 403,
	267, 394, 0, 386, 246, 0, 385, 324, 372, 377,
	310, 304, 245, 374, 308, 303, 296, 275, 419, 288,
	336, 302, 337, 289, 314, 313, 315, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 361, 0, 0,
	297, 0, 0, 0, 404, 0, 348, 330, 0, 0,
	0, 346, 300, 373, 338, 379, 363, 387, 342, 339,
	237, 364, 270, 311, 248, 250, 521, 272, 274, 276,
	277, 320, 321, 333, 352, 366, 367, 368, 269, 258,
	347, 259, 286, 260, 238, 262, 261, 263, 354, 264,
	240, 334, 371, 0, 282, 343, 307, 241, 306, 335,
	370, 369, 249, 395, 401, 402, 407, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 400, 280, 234, 235, 441, 266, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 322, 399, 0,
	0, 0, 429, 440, 0, 0, 0, 0, 0, 439,
	332, 1607, 351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 381, 393, 411, 414,
	0, 0, 0, 0, 239, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 1609, 1578, 0, 392, 0,
	0, 0, 0, 0, 409, 1610, 1611, 316, 317, 318,
	319, 283, 0, 256, 412, 341, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 405, 406, 279, 285, 424, 287, 255,
	331, 281, 390, 294, 0, 417, 1584, 418, 0, 0,
	0, 0, 323, 290, 291, 355, 295, 301, 344, 389,
	329, 349, 253, 380, 356, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 299, 0,
	340, 278, 0, 1600, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 0, 0, 230, 231, 232, 233, 0, 0,
	0, 396, 397, 398, 420, 382, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 442,
	434, 1569, 1568, 1571, 0, 1567, 0, 0, 0, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1582, 1616, 0, 0, 1583, 1585, 1587, 0, 1589,
	1590, 1591, 1595, 1596, 1597, 1599, 1602, 1603, 1604, 0,
	0, 0, 0, 0, 0, 1609, 1592, 1601, 1593, 857,
	0, 0, 0, 0, 0, 0, 0, 0, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	1608, 0, 0, 0, 0, 0, 3191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 0, 0, 1605, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1581, 0, 0, 0, 0, 0,
	0, 1580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1584, 1600, 0, 1598, 0, 0, 0, 845,
	0, 0, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1613, 1612, 0, 865,
	869, 871, 873, 875, 876, 878, 0, 883, 879, 880,
	881, 882, 0, 860, 861, 862, 863, 843, 844, 866,
	0, 846, 0, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 858, 864, 2946, 0, 1607, 0, 1600,
	0, 0, 868, 870, 872, 874, 877, 0, 1574, 0,
	1588, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 0, 0, 0, 0, 859,
	1615, 1582, 1616, 1614, 0, 1583, 1585, 1587, 0, 1589,
	1590, 1591, 1595, 1596, 1597, 1599, 1602, 1603, 1604, 0,
	0, 0, 0, 0, 0, 0, 1592, 1601, 1593, 0,
	0, 500, 0, 499, 506, 496, 1588, 0, 0, 0,
	0, 0, 1584, 0, 0, 503, 504, 1594, 505, 509,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	1608, 0, 514, 0, 0, 0, 0, 1582, 1616, 0,
	0, 1583, 1585, 1587, 0, 1589, 1590, 1591, 1595, 1596,
	1597, 1599, 1602, 1603, 1604, 500, 0, 499, 506, 496,
	0, 0, 1592, 1601, 1593, 0, 0, 1605, 0, 503,
	504, 0, 505, 509, 0, 518, 491, 0, 520, 1600,
	0, 0, 0, 519, 1581, 0, 514, 0, 0, 0,
	0, 1580, 0, 0, 0, 500, 1608, 499, 506, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	504, 0, 505, 509, 0, 1598, 491, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 514, 0, 0, 518,
	0, 0, 520, 1605, 0, 0, 0, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1581, 0, 0, 0, 0, 0, 1588, 1580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1594, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 1582, 1616, 0,
	1586, 1583, 1585, 1587, 0, 1589, 1590, 1591, 1595, 1596,
	1597, 1599, 1602, 1603, 1604, 0, 0, 0, 0, 0,
	0, 0, 1592, 1601, 1593, 0, 492, 494, 493, 0,
	0, 0, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 867, 0, 0, 0, 0, 0, 502, 0,
	0, 0, 0, 0, 0, 517, 1608, 0, 0, 0,
	0, 0, 495, 0, 0, 0, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 494, 493, 0, 0, 0, 0, 0, 0, 0,
	498, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 0, 502, 0, 0, 0, 0, 0, 0, 517,
	1581, 0, 0, 0, 0, 0, 495, 1580, 0, 0,
	492, 494, 493, 0, 0, 0, 0, 0, 0, 0,
	498, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 502, 0, 0, 0, 0, 0, 0, 517,
	1586, 0, 0, 0, 0, 0, 495, 0, 0, 0,
	0, 0, 0, 0, 497, 501, 507, 0, 508, 510,
	0, 0, 511, 512, 513, 0, 0, 515, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 501,
	507, 0, 508, 510, 0, 0, 511, 512, 513, 0,
	0, 515, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 497, 501,
	507, 0, 508, 510, 0, 0, 511, 512, 513, 0,
	0, 515, 516,
}

var yyPact = [...]int{
	4160, -1000, -1000, -1000, -312, 10179, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35095,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35095,
	-309, 34542, 34542, -1000, -1000, 2077, -1000, 33989, 11305, 35095,
	283, 269, 35095, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 572,
	-1000, 33436, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 522,
	37651, 36754, 7955, -260, -1000, 2771, -104, 1966, 741, 763,
	894, 894, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3112, 691, 32883, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3043, 282, 691, 14070, -9, -10, 2771,
	317, 252, -1000, 1155, 4264, 154, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7955, 7955, 10179,
	-338, 10179, 7955, 35095, 35095, -1000, -1000, -1000, -1000, 522,
	37651, 7955, 1966, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -10, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4265, -1000, 1260, -1000, -1000,
	-1000, -1000, -1000, 2334, 1248, 1965, 472, 35095, -1000, 1243,
	472, -1000, -1000, -1000, 2771, 2771, -1000, 35095, 35095, 48,
	1422, -1000, 327, 318, 300, 1236, -1000, -1000, -1000, -1000,
	-1000, -1000, 375, 2727, -1000, 35095, 35095, 2356, 35095, -1000,
	1830, 416, 37705, 2551, 1064, 614, 2385, -1000, -1000, 2330,
	-1000, 158, 132, 114, 424, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 184, -1000, 2645, -1000, -1000, 161, -1000, -1000,
	151, -1000, -1000, -1000, -11, -1000, -1000, -1000, -1000, -1000,
	-1000, -87, -1000, -1000, 817, 1798, 7955, -1000, 1810, -1000,
	2885, -1000, -1000, -1000, -1000, 5178, 9614, 9614, 9614, 9614,
	-1000, -1000, 2205, 7955, 2329, 2328, -1000, -1000, -1000, -1000,
	-1000, 1220, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1605, -1000, -1000, -1000, 9061, -1000, 2323, 2320, 2319,
	2318, 2311, 2310, 2293, 2289, 2288, 2287, 2280, 2279, 2272,
	2271, 2112, 10740, 2266, 1964, 1962, 2265, 2264, 2261, 1961,
	2112, 2112, 2257, 2255, 2254, 2253, 2249, 2247, 2246, 2245,
	2244, 2242, 2241, 2240, 2239, 2237, 2234, 2232, 2231, 2230,
	2228, 2227, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 951, -1000, 2226, 2521, 2656,
	2164, 2693, 2635, 2623, 2621, 2619, 1759, -1000, -1000, 59,
	-1000, -142, -1000, -1000, 777, -1000, 703, -1000, 35095, 35095,
	35095, 696, 516, 516, 516, 516, 516, 516, 544, 516,
	570, 569, 568, 516, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -140, 1413, 1410, 2452, 670, -1000, -1000, -1000, -1000,
	1057, 35095, -1000, 2143, 1312, 1312, 2653, 433, 423, 397,
	1312, 308, -1000, 1426, 1426, 1426, 1426, 1312, 374, 415,
	2656, 2656, -22, 1426, -27, 1312, 1312, -27, 1312, 1312,
	1312, 120, -304, -1000, -1000, -1000, 1426, 1426, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2639, 2633, 522, 35095, 104,
	35095, 522, 522, 522, 528, -57, 36201, 35648, 1830, 412,
	391, 1070, 1507, -1000, 1344, 35095, 35095, 1344, 1344, 18497,
	17944, -1000, 35095, -1000, 2656, 2164, -1000, 2086, 2019, 2084,
	2164, 522, 522, 522, 522, 522, 134, 522, 522, 522,
	35095, 35095, 32330, 522, 522, 6837, 6837, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 10179, 1463, 1666, 153,
	-74, -308, 179, -1000, -1000, 35095, 2511, 128, -1000, -1000,
	-1000, 2114, -1000, 2141, 2141, 2141, 2141, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2182, 2225, -1000, -1000,
	2140, 2140, 2140, 2114, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2166,
	2166, 2175, 2175, 2166, 35095, 7955, 35095, 2522, 314, 2221,
	-1000, 35095, 304, 2656, 2521, 2656, -1000, -1000, 1210, 1754,
	1960, -1000, -1000, 327, 1306, -1000, 815, -1000, -1000, -1000,
	-1000, 35095, -87, 299, -1000, -1000, 1928, 2216, -1000, 447,
	973, 1068, -1000, 133, 37745, 27898, 1830, 27898, 35095, -1000,
	-1000, -1000, -1000, -1000, -1000, -12, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 150,
	-1000, 7955, 7955, 7955, 7955, 7955, -1000, 484, 8508, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9614, 9614, 9614, 9614,
	9614, 9614, 9614, 9614, 9614, 9614, 9614, 9614, 2202, 1411,
	9614, 9614, 9614, 9614, 2019, 2648, 1058, 220, -1000, -1000,
	-1000, -1000, -1000, 1462, 1798, 7955, 7955, 35095, -1000, -1000,
	3857, 7955, 7955, 3028, 7955, 2606, 7955, 7955, 7955, 2083,
	3560, 35095, 7955, -1000, 2082, 2080, -1000, -1000, 1598, 7955,
	-1000, -1000, 7955, -1000, -1000, 7955, 9614, 7955, -1000, -1000,
	-1000, 202, 2606, 2606, 7955, 7955, 2606, 2606, 2606, 1393,
	2606, 2606, 2606, 2606, 2606, 2606, 2606, 2606, 2075, 2072,
	2071, 2656, -260, 6284, -1000, -266, 2521, 7955, -1000, -1000,
	7955, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1954,
	1935, -320, -62, 738, 707, 725, -1000, 2575, -1000, 2215,
	2212, 1165, 516, -1000, 35095, 1487, 35095, 27898, 35095, 35095,
	1830, 35095, 35095, 516, 516, 516, 35095, -1000, 2466, 27898,
	2460, 528, -1000, 35095, 1057, 2565, 35095, 2710, 9614, 9614,
	-1000, 31777, 1426, 1312, 1312, -1000, -1000, 35095, -1000, -1000,
	-1000, 1426, 35095, 1426, 1426, 2710, 1426, -1000, -1000, -1000,
	1312, 1312, -1000, -1000, -1000, -1000, 1426, 1426, -1000, -1000,
	2710, 35095, -13, 2710, 2710, -31, -1000, -1000, -1000, 35095,
	35095, 516, 35095, -1000, 35095, 35095, -1000, -1000, 35095, 37115,
	35095, 31224, 2630, -1000, 27898, 35095, 35095, 25686, -1000, 978,
	-1000, -66, -1000, -64, -57, 1344, -57, 1344, -1000, 444,
	438, 16838, 386, 27898, 4624, -1000, -1000, 1344, 1344, 4624,
	4624, 1266, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1041,
	-1000, 165, 2521, -1000, -1000, -1000, -1000, -1000, 35095, 35095,
	27898, 1830, 35095, 522, 35095, 35095, 35095, -1000, 2211, -1000,
	2530, 35095, 35095, 1042, -1000, -1000, 13517, 1151, 1042, -1000,
	1519, -1000, 7955, 10179, -281, 7955, 10179, 10179, 7955, 10179,
	-1000, 7955, 121, -1000, -1000, -1000, -1000, 1752, -1000, 1737,
	-1000, -1000, -1000, 1932, 1932, -1000, 1733, -1000, -1000, -1000,
	-1000, 1731, -1000, -1000, 1729, -1000, -1000, -1000, 2070, 817,
	-1000, 1931, 2381, -261, -1000, 15731, 35095, 35095, -1000, -1000,
	-261, -1000, 15177, 35095, 2521, -1000, 2521, 35095, -1000, 2652,
	-1000, 327, 236, -1000, -1000, -1000, -1000, -1000, -1000, 1121,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1037,
	-1000, 35095, -1000, -1000, 133, 27898, 29004, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 198, -1000, -1000, 162, -1000, 543,
	82, 1304, -1000, -1000, 110, 167, 589, 1798, -1000, 1475,
	1475, 1525, -1000, 498, -1000, -1000, -1000, -1000, 2205, -1000,
	-1000, -1000, 1736, 1753, -1000, 1421, 1421, 1274, 1274, 1274,
	1274, 1274, 1216, 1216, -1000, -1000, -1000, 5178, 2202, 9614,
	9614, 9614, 9614, 469, 469, 3300, 3180, -1000, 7955, 1484,
	-1000, 7955, 1957, 1027, 1106, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2069, 2068, 1854, 2726, 2054,
	7955, -1000, -1000, 1301, 1300, 1297, -1000, 1735, 7402, -1000,
	-1000, -1000, 2053, 1105, 2052, -1000, -1000, -1000, 2046, 1290,
	885, 2044, 1062, 2041, 1029, 7955, 7955, 1283, 1268, 7955,
	7955, 7955, 7955, 2040, 7955, 7955, 7955, 7955, 7955, 7955,
	7955, 7955, 7, 7, 7, -1000, -1000, 1265, -1000, 1798,
	-1000, 1924, -1000, 962, 1000, -1000, 1884, -1000, -1000, -1000,
	1894, -1000, -1000, 732, 685, 774, 35095, 875, 11858, 35095,
	35095, 2143, 2526, 116, -1000, 925, -1000, 82, -126, 289,
	844, 2355, 2720, 35095, 35095, 35095, 2564, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 30671, -1000, 2200, 1263, -1000,
	-1000, 7955, -1000, -1000, 2349, 35095, 35095, 2710, 2710, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 35095, 2710, 2710, 1312,
	1426, -1000, -1000, 1426, -1000, -1000, 1426, -1000, 1103, -1000,
	35095, -1000, -1000, -1000, 2143, 990, -1000, 12411, 14623, 402,
	-1000, 731, 1340, 784, 539, 2492, 169, -1000, 1340, -213,
	1340, 1340, 1340, 1340, 1340, 1340, 1340, 373, 370, 1340,
	1340, 1340, 1340, 1340, 1340, 1340, 1340, 1340, 1340, 1340,
	746, 1340, 1340, 1340, 1340, 1340, -1000, 1340, 2198, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 382, 111, 2617, 194,
	193, 925, 2615, 212, 2757, 932, -1000, -1000, -1000, -1000,
	20709, 20709, 16285, 20709, -1000, 1319, -57, -88, -1000, -1000,
	978, 4624, 978, 4624, -1000, -1000, 538, -1000, -1000, 844,
	-1000, 35095, 35095, -1000, -1000, 2192, 1407, -1000, -1000, 10740,
	-1000, 4624, 4624, -1000, -1000, 21262, 35095, -1000, -101, -1000,
	-82, 2651, 964, -1000, -1000, 972, 844, 2378, 35095, 964,
	-1000, -1000, 11858, 35095, -1000, -1000, 2710, 6837, -1000, 25686,
	-1000, -1000, 30110, -1000, 29557, 2710, 1438, -1000, 10179, 1652,
	147, -1000, 174, -314, 144, 1440, 143, 1798, -1000, -1000,
	2039, 2034, 1262, -1000, 1254, 2029, 1250, 1233, -1000, -33,
	-1000, 2514, 884, -1000, 2184, -1000, 1230, 2449, -1000, 942,
	-1000, 1405, 1227, -1000, 884, 1226, 2448, 942, 2651, -1000,
	1101, 44, -1000, -1000, 35095, 1928, 1224, 29004, 927, -1000,
	533, 1100, 1099, -1000, 27898, 163, 27898, -1000, 27898, -1000,
	-1000, 305, -1000, 35095, 2519, -1000, -1000, -1000, 1894, -328,
	-1000, -1000, -1000, -1000, -1000, 1217, -1000, 469, 469, 3300,
	2490, -1000, 9614, -1000, 9614, 2643, 1435, -1000, 7955, 1564,
	3085, 1460, 19603, 35095, -1000, -1000, 7955, 7955, -1000, 2637,
	-1000, -1000, -1000, -1000, 7955, 7955, 1676, -1000, 35095, -1000,
	-1000, -1000, -1000, 19603, -1000, 9614, -1000, 7955, 940, 2607,
	7, 7, 2586, 2508, 2474, 1215, 7, 2432, 2421, 2396,
	2337, 2332, 2321, 2316, 2297, -1000, 2183, -1000, -1000, 6284,
	-1000, -33, 7955, 7955, 7955, 2468, -1000, -1000, 103, -1000,
	1402, -1000, -1000, -1000, 681, 138, 2028, 937, -1000, -1000,
	35095, -1000, -1000, -1000, 2016, 934, -1000, -1000, -1000, 37379,
	2141, 2141, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2182, -1000, -1000, 2140, 2140, 2140, 2114, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2166, 2166, 2175,
	2175, 2166, -1000, 2143, 2562, -1000, 20, 1340, 454, 27898,
	384, -1000, 35095, 1607, 1399, 2376, 414, 2495, 35095, 2160,
	2159, 2151, 262, 37379, 35095, 989, -1000, 1088, 4264, -1000,
	35095, 1798, -1000, 1830, -1000, 1312, -1000, -1000, 2710, 1017,
	-1000, -1000, 2710, 1312, 1312, 1426, 35095, -1000, 2561, 37115,
	-1000, 2478, 35095, -1000, -1000, 37379, 617, -1000, 676, 516,
	35095, 1552, 676, 1550, 2150, -1000, -1000, -1000, 35095, 35095,
	-1000, 35095, 1548, 1547, -1000, 35095, 35095, 35095, 35095, -1000,
	-1000, 2573, -1000, 1340, 1340, 647, -1000, -1000, 434, -1000,
	1722, 1720, 1719, 1711, 1923, 1922, 1917, 1340, 1340, 1710,
	1909, 28451, 1902, 900, 1706, 1705, 1699, 1738, 1901, 596,
	-1000, 1900, 1732, 1709, 1692, 35095, 2147, 1856, -1000, -1000,
	20, 1340, 192, 35095, 1388, 454, 288, 1773, 17391, 35095,
	25686, 25686, 25686, 25686, -1000, 2433, 2431, -1000, 2422, 2419,
	2426, 35095, 25686, 2143, -1000, 28451, -1000, -1000, -1000, 2019,
	1213, 2537, 683, 7955, -1000, -1000, -70, -78, -1000, -1000,
	-1000, 27898, 1898, 386, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2748, 35095, 35095, 560, 2006, -1000, 2714, -1000,
	933, -1000, -1000, 1086, -1000, 2714, 1466, -313, 10179, 1458,
	1418, -1000, 7955, 10179, 7955, -282, 181, -284, -1000, -1000,
	-1000, 1897, -1000, -1000, -1000, 1696, -1000, 1695, 17, 31,
	1543, -261, 6284, 311, 35095, -261, 35095, 6284, -1000, 35095,
	307, -261, -1000, 35095, 1694, -1000, -1000, -1000, 2718, 27898,
	1830, 1273, 27345, -1000, 157, -1000, 166, 410, 1896, -1000,
	556, 102, 1894, -1000, -1000, -1000, 9614, -1000, -1000, -1000,
	-1000, 1798, 7955, 2004, -1000, 735, 735, 2000, -1000, 2141,
	2141, -1000, 2114, 2140, 2114, 735, 735, 1999, -1000, 1689,
	2285, -1000, 2179, 2161, 7955, -1000, 1997, 2709, 966, -138,
	7, -1000, -1000, -1000, 7, 7, 7, 7, -1000, 7,
	7, 7, 7, 7, 7, 7, 7, 478, -1000, 17,
	1798, 1798, -1000, -1000, 2505, -1000, 1894, 1893, -1000, 1888,
	1887, 875, 37379, 575, 11858, 2507, 2559, 319, 1775, -1000,
	-1000, -1000, 26792, 398, -1000, -1000, -1000, 548, 142, 1685,
	395, -1000, 35095, 212, 2472, 1383, 1886, 35095, -1000, -1000,
	-1000, -1000, -1000, 2495, -1000, 758, 248, 12964, 12964, 12964,
	255, 1416, -1000, 472, 859, 1085, 25686, 35095, -1000, 25133,
	1996, -1000, 844, 2710, -1000, 35095, -1000, 2710, 2710, 1312,
	-1000, 319, -1000, -1000, -1000, 35095, 2478, 3299, -1000, 35095,
	-1000, 35095, -1000, 35095, 35095, 516, 7955, -1000, -1000, -1000,
	35095, -1000, 237, 508, 508, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19603, 19603, 2612, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1881, 1880, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35095, 1189,
	-1000, 1376, 1775, 26792, 1374, 1344, 1879, 398, 1607, 1371,
	-1000, 1873, -1000, 895, 35095, 35095, -1000, 947, -1000, 1370,
	2338, 2372, 2338, -1000, -1000, -1000, -1000, 2430, -1000, 2413,
	-1000, -1000, 947, -1000, -1000, -1000, -1000, -1000, 683, -1000,
	2649, 676, 676, 676, 1995, -1000, -1000, -1000, 927, 1991,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2703,
	2689, 26239, 2703, -1000, -313, 1307, -1000, 1554, 141, 1409,
	35095, -1000, -1000, -1000, 1989, 1987, -268, 38, 2688, 2687,
	2737, -1000, 1981, 926, -261, -1000, -1000, 884, -1000, -1000,
	-1000, -261, -1000, 884, -1000, -1000, 1830, -1000, 164, -1000,
	-1000, -1000, -1000, -1000, -1000, 60, -1000, 35095, -1000, 97,
	-1000, 1798, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 7955, -1000, -1000,
	-1000, 2144, -1000, -1000, 7955, 1978, 1872, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2701, -1000, 2684, -268, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37379, -1000, 1638, 319, -182, -1000, 1871, 81,
	-1000, -1000, -1000, 1863, 1862, 1683, -1000, -1000, 1657, 1093,
	99, -1000, -1000, -1000, -1000, -1000, -1000, 1773, 1740, 1369,
	-331, -1000, 2129, -1000, 1340, 1340, 1340, 35095, 1976, 905,
	-1000, -1000, -1000, -1000, 1974, 1973, 482, 1354, 1347, -1000,
	1672, 20709, 25686, 25133, 939, -1000, 1078, -1000, -1000, -1000,
	2710, -1000, -1000, 2710, -1000, -1000, -1000, -1000, 3299, -1000,
	-1000, 1577, 9614, -1000, -1000, 1861, 20156, 618, 1367, 1356,
	609, 2126, -1000, 340, 2736, -1000, -1000, -1000, 619, 1542,
	1538, -1000, 35095, -1000, 2125, -1000, 2124, 2344, 296, 2123,
	2122, 35095, 2108, -1000, -1000, -1000, -1000, -1000, -1000, 324,
	-1000, 1219, -1000, 19603, -1000, -1000, 1187, -1000, 1856, 1853,
	-1000, 81, 1842, 4624, -1000, -1000, 2472, 1840, -1000, 35095,
	895, 895, 2701, 35095, 6284, -1000, -1000, 7955, 2120, -1000,
	7955, -1000, -1000, -1000, -1000, -1000, 2119, 2471, -1000, -1000,
	-1000, -1000, -1000, -1000, 7955, 7955, -1000, -1000, 509, 10179,
	-285, 180, -1000, -1000, -1000, -270, 1839, -1000, -1000, 2683,
	1837, 1781, 35095, -1000, 884, 884, 844, -1000, -1000, -31,
	-1000, 1994, -1000, 1889, 7, -1000, 131, 7955, -270, -179,
	-1000, -1000, -182, -1000, 313, -1000, -1000, 303, -1000, -1000,
	205, -1000, -1000, 1656, 450, -1000, -1000, -1000, 1836, 1584,
	1799, 24027, 19603, 20156, 1828, -1000, 37581, 12964, 150, 37581,
	769, 1327, -1000, 1671, -1000, 1660, -1000, 2710, 939, 1078,
	-1000, -1000, 1225, -1000, -1000, -1000, -1000, 3300, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1825, 1817, -1000, -1000,
	-1000, -1000, -1000, 1658, 2118, -119, 2609, -1000, -1000, 2116,
	24027, 24027, 285, 285, 24027, 24027, 2115, 508, -1000, 1340,
	1191, -1000, -1000, -1000, -1000, -1000, -1000, 1740, -1000, -1000,
	2656, -1000, -1000, 1798, 35095, 1798, 24580, -1000, 2680, 2679,
	1798, 817, -1000, -313, 35095, 35095, -273, 1637, -1000, 1815,
	35, -1000, -1000, 843, -275, 16, 25, -1000, -1000, -1000,
	1933, -1000, 542, -1000, -1000, -1000, 817, -273, 35095, -1000,
	335, -1000, -1000, 409, 1814, -1000, -1000, 203, -1000, -1000,
	-1000, -1000, -1000, 96, -1000, 1342, 1180, -1000, 2114, 7955,
	-1000, -1000, -1000, 468, 37431, -1000, 784, -1000, -1000, -31,
	468, 413, 211, -1000, 1635, -1000, -1000, 2701, -1000, -1000,
	-1000, 1859, 7955, 2112, 1340, -173, 24027, 1167, 1153, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1148, 1146, 24027, -1000,
	-1000, 19603, 1340, -1000, -1000, 1131, 1128, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2111, -1000, -1000, 2678, -1000, 1800,
	524, 32, 25, -1000, 2672, 28, 2671, 2666, -1000, -1000,
	479, -262, 5, 4, -4, -1000, -1000, -1000, 7955, -1000,
	2558, -1000, 139, -1000, 58, -1000, -1000, -1000, 1799, 1797,
	-1000, 24027, 2518, 1846, 298, 2665, 37581, -1000, 1340, -1000,
	298, -1000, 257, -1000, 1325, -1000, 1632, -1000, 2656, -1000,
	1728, -1000, 35095, 2366, -1000, 127, 1111, 2343, 2341, 2163,
	2146, 1107, -1000, 19603, -1000, -1000, 23474, 35095, 1781, -1000,
	2107, 1631, 38, 19, 2664, -1000, 1781, 2662, 1781, 1781,
	1500, -1000, 2, 0, -2, -1000, -1000, -1000, -1000, 1784,
	-1000, -1000, -1000, -1000, 235, -1000, -1000, 2518, -1000, 2661,
	331, -1000, 19603, -1000, -1000, -1000, 1628, -1000, -1000, 508,
	-1000, -1000, 2361, 2358, 2724, -1000, -1000, -1000, -1000, 235,
	285, 235, 285, 235, 285, 235, 285, 146, -1000, -1000,
	-1000, 1097, -1000, -1000, 2584, 19050, 14, -1000, -1000, -1000,
	1783, -1000, 1781, -1000, -1000, 479, -1000, -1000, -1000, -1000,
	-1000, 1340, 1780, 231, -1000, -1000, -1000, 22921, 306, 337,
	329, -1000, 464, -1000, -1000, -1000, -1000, -1000, 2731, -1000,
	2725, 734, 734, -1000, -1000, -1000, -1000, -1000, -1000, 35095,
	-1000, 35095, -1000, 1092, -1000, -1000, -1000, 1076, -1000, -1000,
	-1000, -1000, -1000, 1624, -1000, 35095, -1000, 35095, 321, 1620,
	9614, 2106, 9614, 2103, 325, 2101, -1000, -1000, -1000, 1621,
	346, -1000, 235, 235, 235, 235, -1000, 782, -1000, 1335,
	-1000, 22368, 35095, -1000, -1000, 1082, 2100, 2660, -1000, 2435,
	35095, 2331, 35095, 2098, 1334, 9614, -1000, -1000, -1000, 35095,
	5731, -1000, 816, -1000, -1000, 465, 315, -1000, 1080, -1000,
	1063, 21815, 1619, 2003, -1000, -1000, 1798, 35095, 1030, -1000,
	35095, 290, -1000, -1000, -1000, 986, -1000, -1000, -1000, -1000,
	465, 2442, -1000, 1608, -1000, -1000, 37365, 635, -1000, -1000,
	37365, 320, -1000, 460, 2078, -1000, -1000, 985, -1000, 35095,
	649, 7955, -1000, 320, 37581, -1000, 7955, 976, -1000, 37581,
	954, -1000, -1000,
}

var yyPgo = [...]int{
	0, 143, 2768, 235, 154, 3336, 66, 234, 211, 209,
	233, 3334, 3333, 2546, 2544, 3332, 3331, 3330, 3329, 3328,
	3327, 3314, 3313, 3312, 3311, 3310, 3309, 3308, 3307, 3306,
	3305, 3304, 3297, 3296, 3295, 3294, 3293, 3292, 3278, 232,
	3262, 3254, 3253, 3252, 3251, 3250, 3248, 3247, 3246, 3244,
	3243, 3242, 3241, 3240, 3239, 3238, 3237, 3236, 3233, 3232,
	3230, 3229, 3228, 3227, 3225, 3223, 3222, 3221, 3219, 3217,
	3216, 205, 3211, 2533, 3210, 3204, 3202, 3201, 3199, 3198,
	3197, 220, 3196, 3195, 3190, 3187, 3185, 3184, 3183, 3182,
	3181, 3180, 3179, 207, 3178, 3177, 3176, 3175, 3173, 3172,
	200, 3170, 151, 202, 3164, 3163, 3159, 3158, 3157, 3156,
	229, 236, 57, 3152, 42, 3150, 206, 3149, 123, 3146,
	121, 3144, 3142, 3140, 3139, 3137, 3136, 3135, 3134, 3131,
	3130, 3129, 3128, 3127, 3125, 3124, 3123, 77, 3122, 245,
	3118, 62, 3117, 3116, 105, 130, 175, 241, 2299, 252,
	237, 165, 145, 80, 3114, 2513, 3113, 138, 214, 132,
	26, 3107, 156, 3105, 126, 44, 30, 238, 119, 48,
	141, 108, 3104, 215, 96, 92, 3103, 3101, 164, 243,
	177, 3098, 99, 3097, 3096, 3094, 3093, 188, 168, 3092,
	3091, 107, 3089, 3083, 101, 3081, 61, 179, 139, 178,
	3080, 1011, 106, 103, 146, 3079, 3078, 81, 3077, 3075,
	3073, 3071, 160, 3070, 3067, 111, 78, 3066, 3065, 3063,
	55, 3057, 37, 3056, 64, 3055, 3054, 3053, 3052, 3051,
	3048, 3044, 3042, 3041, 3040, 3039, 68, 3038, 3037, 16,
	21, 24, 3036, 23, 3035, 150, 3033, 3032, 3018, 113,
	3010, 2, 3007, 213, 169, 88, 128, 3005, 406, 3004,
	3003, 3002, 136, 3001, 540, 3000, 2992, 2991, 2990, 2988,
	83, 2987, 208, 43, 2986, 109, 116, 2985, 34, 49,
	183, 186, 2984, 2982, 2981, 22, 87, 69, 0, 2980,
	127, 2979, 2976, 2972, 239, 2968, 221, 194, 140, 148,
	255, 149, 2967, 2966, 79, 2965, 135, 82, 47, 115,
	8, 18, 159, 2964, 14, 167, 2962, 191, 2960, 144,
	7, 117, 2959, 2958, 36, 249, 2957, 2956, 2955, 100,
	2954, 2953, 171, 85, 2952, 2951, 2947, 41, 2946, 33,
	25, 2945, 89, 2944, 231, 2941, 227, 137, 161, 147,
	129, 217, 219, 70, 72, 2940, 1560, 122, 90, 29,
	2938, 218, 2937, 170, 131, 2935, 67, 2934, 230, 354,
	198, 2933, 163, 12, 39, 32, 2932, 9, 2931, 190,
	195, 2928, 2927, 20, 45, 2926, 17, 2925, 2924, 2923,
	2922, 5, 2921, 2920, 2919, 1, 4, 2917, 3, 196,
	2916, 2914, 2913, 2911, 46, 114, 2909, 153, 162, 158,
	2905, 84, 2904, 2903, 2901, 625, 2899, 240, 2898, 2896,
	2894, 2893, 2891, 2890, 2888, 2886, 2884, 86, 54, 2883,
	2882, 2881, 2880, 65, 124, 2879, 2878, 2876, 2875, 35,
	166, 2874, 19, 2873, 31, 28, 38, 2872, 110, 2869,
	13, 172, 2867, 2866, 15, 2865, 2863, 10, 11, 2862,
	2861, 104, 2860, 76, 27, 134, 91, 2859, 2858, 73,
	212, 118, 2856, 2842, 226, 228, 187, 2840, 125, 224,
	244, 2838, 201, 2837, 2836, 2834, 2833, 2832, 2823, 934,
	2822, 2819, 223, 56, 71, 95, 2818, 2815, 2814, 74,
	142, 98, 97, 51, 75, 2810, 94, 181, 2809, 174,
	2808, 2804, 93, 2803, 2800, 2799, 2798, 2794, 173, 2784,
	2783, 176, 222, 2782, 2781, 2774, 2773, 225, 216, 2770,
}

//line mysql_sql.y:10116
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColposUnion() *tree.AlterColPos {
	v, _ := st.union.(*tree.AlterColPos)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 517, 525, 525, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 108, 108, 107, 515, 515, 515, 516,
	516, 104, 125, 124, 127, 127, 126, 126, 123, 123,
	119, 122, 122, 121, 121, 120, 115, 117, 117, 116,
	118, 118, 105, 93, 106, 460, 460, 459, 459, 458,
	458, 412, 412, 457, 457, 457, 456, 456, 456, 455,
	455, 454, 454, 453, 453, 451, 451, 452, 450, 449,
	449, 449, 447, 447, 447, 443, 443, 445, 444, 444,
	446, 438, 438, 441, 441, 439, 439, 439, 439, 442,
	437, 437, 437, 436, 436, 92, 92, 92, 358, 358,
	91, 91, 372, 372, 372, 372, 372, 370, 370, 370,
	370, 370, 370, 369, 369, 368, 368, 373, 373, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 82,
	82, 82, 82, 82, 87, 87, 87, 522, 522, 521,
	521, 523, 523, 523, 523, 524, 524, 85, 85, 85,
	86, 367, 367, 367, 83, 84, 84, 357, 357, 362,
	362, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 366, 366, 366, 364, 364, 363,
	363, 365, 365, 76, 76, 76, 79, 78, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 77, 77, 77,
	77, 77, 77, 72, 72, 72, 72, 72, 71, 71,
	73, 73, 354, 354, 353, 88, 88, 89, 519, 519,
	518, 520, 520, 520, 520, 90, 96, 96, 96, 96,
	96, 96, 96, 95, 95, 98, 98, 97, 99, 81,
	81, 81, 81, 81, 81, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 485, 485, 485, 487, 487, 292,
	293, 526, 295, 291, 291, 291, 481, 481, 482, 483,
	484, 484, 484, 94, 11, 11, 11, 11, 11, 11,
	11, 70, 75, 244, 244, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 232, 232, 232, 227, 227, 227, 227, 228, 228,
	229, 229, 230, 230, 230, 230, 231, 231, 249, 249,
	249, 248, 246, 246, 246, 246, 246, 246, 247, 247,
	247, 250, 250, 68, 74, 74, 74, 498, 498, 69,
	509, 509, 415, 415, 306, 306, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 420, 421, 302, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 46, 49, 45, 45, 45, 343,
	343, 44, 527, 527, 281, 281, 57, 56, 48, 58,
	59, 60, 61, 62, 63, 43, 55, 55, 55, 55,
	55, 55, 55, 55, 66, 66, 432, 432, 529, 529,
	529, 64, 65, 414, 414, 414, 54, 53, 52, 51,
	50, 50, 42, 42, 41, 41, 47, 131, 132, 299,
	299, 299, 301, 301, 297, 528, 528, 386, 386, 300,
	300, 40, 40, 40, 40, 67, 298, 298, 280, 296,
	296, 296, 12, 12, 10, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 23, 24,
	26, 351, 351, 348, 25, 18, 17, 20, 16, 16,
	19, 21, 22, 22, 9, 9, 9, 9, 13, 13,
	14, 152, 152, 202, 202, 493, 493, 489, 489, 490,
	490, 490, 491, 491, 492, 492, 100, 426, 426, 426,
	426, 426, 426, 8, 174, 174, 425, 425, 425, 425,
	425, 425, 355, 355, 470, 470, 470, 471, 173, 173,
	168, 168, 427, 427, 321, 472, 472, 435, 435, 434,
	434, 433, 433, 171, 171, 172, 172, 155, 155, 111,
	111, 440, 440, 440, 440, 448, 448, 411, 411, 236,
	236, 273, 273, 274, 274, 145, 145, 146, 146, 146,
	146, 146, 146, 478, 478, 480, 480, 479, 170, 170,
	166, 166, 167, 167, 167, 165, 165, 164, 163, 163,
	162, 160, 160, 160, 161, 161, 161, 178, 178, 148,
	148, 148, 147, 147, 147, 147, 147, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 149,
	149, 486, 486, 486, 416, 416, 416, 423, 423, 255,
	255, 256, 256, 254, 254, 150, 150, 151, 151, 151,
	151, 253, 253, 252, 153, 153, 159, 158, 158, 154,
	154, 154, 154, 263, 263, 262, 262, 262, 262, 103,
	109, 109, 110, 177, 177, 261, 260, 260, 260, 176,
	176, 175, 175, 169, 169, 157, 157, 157, 157, 259,
	156, 257, 514, 514, 513, 513, 512, 510, 510, 510,
	511, 511, 511, 511, 462, 462, 462, 462, 462, 286,
	286, 286, 290, 290, 289, 289, 289, 289, 289, 294,
	7, 7, 7, 7, 7, 7, 30, 30, 30, 30,
	30, 30, 30, 30, 36, 186, 187, 37, 188, 188,
	189, 189, 190, 190, 191, 192, 193, 193, 193, 193,
	35, 179, 179, 180, 180, 181, 181, 182, 183, 183,
	183, 185, 184, 34, 34, 27, 138, 138, 139, 139,
	139, 139, 141, 141, 233, 233, 233, 140, 140, 142,
	142, 142, 494, 497, 495, 495, 499, 499, 499, 500,
	500, 500, 500, 501, 501, 28, 128, 133, 504, 504,
	504, 503, 503, 505, 505, 506, 506, 277, 277, 278,
	278, 136, 137, 137, 135, 130, 144, 144, 144, 144,
	144, 129, 134, 496, 502, 502, 502, 352, 352, 349,
	350, 350, 347, 346, 346, 346, 508, 508, 507, 507,
	507, 287, 287, 29, 342, 342, 344, 345, 345, 345,
	336, 336, 336, 336, 33, 340, 340, 341, 341, 341,
	341, 341, 337, 337, 339, 339, 335, 335, 335, 335,
	335, 32, 143, 143, 334, 334, 332, 332, 330, 330,
	331, 331, 329, 329, 329, 333, 333, 31, 31, 31,
	113, 112, 112, 112, 276, 276, 275, 275, 114, 38,
	214, 214, 400, 400, 400, 400, 400, 418, 418, 418,
	401, 401, 401, 402, 402, 402, 403, 403, 403, 403,
	403, 417, 417, 419, 419, 419, 374, 374, 375, 375,
	375, 378, 378, 392, 392, 393, 393, 391, 391, 398,
	398, 397, 397, 396, 396, 395, 395, 394, 394, 394,
	394, 389, 389, 388, 388, 376, 376, 376, 376, 376,
	377, 377, 377, 387, 387, 390, 390, 220, 220, 221,
	221, 221, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 468, 468, 469,
	223, 223, 234, 234, 234, 234, 234, 234, 222, 222,
	224, 224, 203, 203, 201, 201, 194, 194, 195, 195,
	196, 196, 196, 200, 200, 199, 199, 199, 199, 197,
	197, 198, 198, 198, 198, 198, 198, 360, 360, 465,
	465, 466, 466, 461, 461, 461, 464, 464, 464, 464,
	464, 467, 467, 467, 463, 463, 204, 271, 271, 271,
	288, 288, 288, 288, 270, 270, 270, 219, 219, 218,
	218, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 359, 359, 303, 303, 304, 304, 243, 242, 242,
	242, 242, 242, 240, 241, 239, 239, 239, 239, 239,
	238, 238, 237, 237, 237, 338, 338, 235, 235, 226,
	226, 226, 225, 225, 225, 399, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	269, 269, 269, 313, 313, 318, 318, 477, 477, 476,
	205, 205, 205, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 215, 215, 215, 383, 383, 383, 383, 384,
	384, 384, 384, 385, 385, 385, 381, 381, 382, 382,
	322, 323, 323, 424, 424, 379, 379, 380, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 431, 431, 431, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 488, 488, 488, 473, 473, 473,
	474, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	474, 474, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 267,
	267, 267, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 324, 324, 325,
	325, 428, 428, 428, 428, 428, 428, 429, 429, 430,
	430, 430, 430, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 311, 264, 264, 264, 326, 319, 319, 320,
	320, 314, 314, 314, 314, 314, 314, 314, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	315, 315, 317, 317, 328, 328, 328, 327, 327, 327,
	327, 327, 327, 327, 217, 217, 217, 217, 308, 308,
	308, 307, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 207, 207, 207, 207, 211, 211, 213,
	213, 213, 213, 213, 213, 213, 213, 213, 213, 213,
	213, 213, 213, 212, 212, 212, 212, 212, 210, 210,
	210, 210, 210, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 101,
	102, 102, 209, 272, 272, 404, 404, 407, 407, 405,
	405, 406, 408, 408, 408, 409, 409, 409, 410, 410,
	410, 413, 413, 279, 279, 279, 285, 285, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 7, 4, 1, 3, 2, 2, 2, 1, 3,
	3, 4, 3, 7, 5, 8, 2, 2, 1, 3,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	2, 1, 2, 2, 1, 2, 3, 2, 3, 3,
	3, 1, 1, 7, 7, 8, 8, 0, 4, 7,
	0, 3, 0, 2, 0, 1, 1, 1, 1, 4,
	2, 2, 3, 3, 4, 5, 3, 4, 4, 2,
	2, 2, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 2, 5, 5, 0,
	2, 7, 0, 1, 0, 1, 5, 5, 3, 3,
	2, 4, 4, 4, 4, 4, 1, 1, 1, 3,
	3, 1, 1, 1, 6, 8, 0, 1, 1, 1,
	1, 5, 5, 0, 1, 1, 3, 3, 3, 4,
	6, 7, 4, 4, 7, 8, 3, 3, 3, 0,
	2, 2, 0, 2, 2, 1, 1, 1, 1, 0,
	1, 4, 4, 5, 4, 3, 1, 3, 1, 1,
	3, 5, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	4, 1, 3, 1, 4, 6, 6, 4, 4, 4,
	3, 6, 3, 5, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 1, 3, 2, 1, 5, 4,
	4, 2, 0, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 5, 3, 4,
	6, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 0, 2, 3,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 4,
	1, 3, 4, 0, 2, 1, 1, 2, 2, 0,
	1, 2, 4, 1, 3, 1, 3, 2, 3, 1,
	4, 3, 0, 1, 1, 2, 5, 2, 2, 2,
	0, 2, 3, 3, 0, 1, 3, 1, 3, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 7, 1, 1, 7, 1, 3,
	0, 1, 1, 3, 1, 3, 0, 1, 1, 1,
	12, 1, 3, 0, 1, 1, 3, 1, 1, 2,
	4, 1, 1, 9, 8, 7, 1, 2, 2, 3,
	3, 3, 0, 4, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 2, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 2, 3,
	1, 1, 1, 3, 3, 4, 0, 2, 2, 2,
	2, 6, 0, 4, 1, 1, 0, 3, 0, 1,
	1, 2, 4, 4, 4, 0, 1, 11, 9, 11,
	2, 2, 4, 5, 1, 3, 0, 3, 5, 10,
	0, 2, 0, 3, 2, 4, 3, 0, 2, 1,
	0, 2, 3, 0, 2, 3, 0, 3, 2, 4,
	3, 0, 1, 0, 1, 1, 0, 6, 0, 3,
	5, 0, 4, 0, 3, 1, 3, 4, 5, 0,
	3, 1, 3, 2, 3, 1, 2, 0, 4, 6,
	5, 0, 2, 0, 2, 4, 5, 4, 5, 1,
	5, 6, 5, 0, 3, 0, 1, 0, 1, 1,
	3, 2, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 5, 4, 1, 3, 3,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 0, 1, 1, 3,
	1, 1, 1, 1, 1, 7, 9, 7, 9, 2,
	1, 7, 9, 7, 9, 8, 5, 0, 1, 0,
	1, 1, 1, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 3, 1, 3, 5,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	2, 1, 2, 2, 1, 1, 2, 2, 2, 3,
	3, 2, 2, 1, 5, 6, 4, 1, 1, 1,
	5, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 1, 1, 1, 1, 1,
	4, 4, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 1, 6, 8, 6,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 4, 4, 3, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 2, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -517, -525, -2, -5, 581, -1, -4, -102, -76,
	-7, -104, -105, -8, -100, -9, -10, -12, -80, -95,
	-97, -99, -98, -39, -11, -94, -71, -72, -82, -88,
	-91, -92, -93, -106, -101, -103, -145, -107, -108, 574,
	-77, -78, -79, -30, -29, -28, -27, -128, -133, 580,
	433, 12, 482, -13, -14, -478, -15, 254, -291, -292,
	-293, -295, -526, -40, -41, -42, -50, -51, -52, -53,
	-54, -64, -65, -66, -43, -44, -45, -48, -46, -57,
	-56, -58, -59, -60, -61, -62, -63, -47, -131, -132,
	-67, -49, -69, -68, -74, -70, -75, -130, -135, 229,
	-73, 75, -83, -84, -85, -86, -87, -89, -90, 359,
	365, 422, 573, 60, -146, -148, 584, 585, 157, 158,
	160, 161, -31, -32, -33, -34, -35, -36, -38, -37,
	225, 14, 515, -16, -19, -17, -20, -18, -25, -26,
	-24, -21, -23, -129, -22, -134, 249, 248, 37, 315,
	316, 317, 363, 247, 226, 13, 30, 41, 341, -147,
	81, 227, -149, 10, 588, -6, -3, -2, -115, -119,
	-123, -126, -127, -124, -125, -4, -102, 115, 239, 575,
	-288, 355, 576, 578, 577, 84, 92, -282, -284, 359,
	365, 573, 585, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 556, 485,
	560, 561, 562, 563, 339, 340, 512, 266, 290, 390,
	296, 303, 157, 176, 170, 198, 190, 165, 270, 308,
	271, 91, 160, 468, 105, 445, 419, 163, 285, 287,
	289, 292, 291, 293, 295, 272, 342, 186, 181, 284,
	268, 179, 273, 39, 274, 203, 275, 276, 517, 441,
	338, 447, 300, 417, 180, 442, 288, 444, 205, 209,
	459, 460, 174, 175, 449, 462, 202, 246, 42, 514,
	258, 463, 207, 201, 197, 471, 304, 302, 200, 173,
	196, 269, 64, 211, 210, 212, 413, 414, 415, 416,
	277, 278, 353, 458, 193, 182, 343, 166, 22, 466,
	253, 446, 366, 279, 297, 305, 206, 208, 260, 265,
	516, 421, 264, 301, 464, 178, 257, 286, 252, 467,
	167, 368, 280, 161, 294, 461, 470, 63, 381, 172,
	164, 243, 158, 262, 267, 11, 281, 282, 283, 307,
	306, 298, 194, 259, 199, 184, 171, 195, 159, 261,
	469, 382, 571, 341, 400, 192, 189, 263, 236, 465,
	448, 162, 404, 383, 187, 309, 567, 568, 569, 354,
	337, 310, 311, 185, 250, 439, 440, 312, 314, 410,
	330, 384, 420, 391, 385, 218, 318, 451, 453, 204,
	570, 319, 320, 321, 443, 322, 323, 324, 325, 358,
	55, 57, 93, 95, 586, -365, -363, -288, 573, 365,
	359, 341, 585, -188, -288, 587, -155, 38, -201, -288,
	-155, -73, -14, -13, -147, -148, -201, 233, -296, 23,
	417, -81, 418, 229, 81, -288, -9, -93, -8, -100,
	-71, -145, 422, -294, -288, 315, 315, -294, 233, -288,
	264, 398, -415, 239, -369, -342, 265, -368, -344, -371,
	-345, 31, 225, 227, 226, 261, 14, 363, 235, 12,
	10, 364, 247, 24, 25, 27, 13, 365, 367, 28,
	368, 371, 372, 373, 41, 376, 377, 254, 84, 92,
	87, 272, -187, -288, -320, -314, 112, 255, -316, -309,
	-310, -312, -457, -451, -307, 81, 139, 140, 147, 113,
	-311, -399, 35, 115, 524, 483, -265, -266, -267, -268,
	-269, -288, -452, -450, 87, 96, 99, 102, 103, 101,
	100, 151, 183, 98, 88, 152, -148, 84, -473, 532,
	-283, 553, 560, 561, 562, 563, 552, 60, -422, -430,
	232, -428, 150, 188, 250, 184, 12, 145, 410, 185,
	529, 549, 485, 533, 556, 526, 527, 521, 522, 523,
	525, 534, 536, 548, -431, 544, 554, 555, 542, 557,
	558, 559, 86, 85, 547, 546, 535, 530, 531, 537,
	520, 528, 538, 539, 545, 550, 551, 347, 105, 348,
	349, 475, 342, 350, 239, 417, 69, 351, 352, 353,
	354, 355, 482, 356, 70, 357, 346, 254, 400, 358,
	187, 204, 487, 486, 488, 479, 476, 474, 477, 478,
	480, 481, 540, 541, 543, -109, -110, 565, -164, -165,
	-258, 19, 6, 7, 8, 9, -515, 419, 516, 87,
	162, 159, -356, 162, 111, 167, 166, -356, 318, 260,
	360, -138, 236, 339, 400, 322, 93, 264, -336, -334,
	-417, 312, 308, 234, -139, 244, 243, 106, 475, 232,
	374, 108, 303, 55, 57, -489, -490, 222, 223, 224,
	-480, 508, -479, -288, 349, 95, 26, 233, 360, 260,
	453, 451, 452, 454, 455, 456, 457, -55, -432, -414,
	448, 447, -300, 440, 446, 438, 450, 441, 340, 324,
	323, 225, 582, 509, -279, 384, 420, 472, 473, 361,
	421, 459, 461, 442, 105, 191, 188, 236, 233, 339,
	475, 400, 93, 322, -489, 159, 459, 461, 264, 398,
	40, -362, 410, -361, -363, 460, 471, 85, 86, 458,
	-279, 105, 439, 439, -165, -258, -164, -146, -148, -103,
	-478, 234, 339, 400, 264, 235, 233, 236, 475, 232,
	315, 360, 260, 322, 93, -416, -486, 31, -423, 219,
	220, 221, 32, 33, -1, 119, 588, -314, -314, -6,
	591, -6, -314, -288, -288, 154, -207, -211, -208, -210,
	-209, -213, -212, 188, 189, 150, 192, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 30, 204, 250,
	184, 185, 186, 187, 205, 170, 190, 513, 213, 171,
	214, 172, 215, 173, 216, 174, 175, 217, 176, 179,
	180, 181, 182, 178, 153, 81, 153, 87, -171, 256,
	-201, 153, -171, -165, -164, -165, -201, -270, -288, 419,
	122, -81, -81, 418, -481, -482, -483, -485, 229, 418,
	417, 153, 272, 15, -294, -294, 79, -201, -344, 264,
	-369, -342, 35, 78, 154, 237, 154, 78, 81, 361,
	339, 400, 362, 475, 233, 374, 236, 264, 375, 339,
	400, 233, 236, 475, 264, 339, 233, 236, 400, 264,
	375, 438, 439, 236, 26, 366, 369, 370, 439, -436,
	471, 154, 111, 108, 109, 110, -314, 129, -327, 122,
	123, 124, 125, 126, 127, 128, 136, 135, 146, 139,
	140, 141, 142, 143, 144, 145, 137, 138, 132, 112,
	130, 134, 131, 114, -148, -314, -320, 60, -312, -312,
	-312, -312, -399, -318, -314, 81, 81, 153, 100, 87,
	-314, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, -429, 81, 81, -324, -325, 81, 81,
	-307, -270, 81, 87, 87, 81, 81, 81, 87, -325,
	-325, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, -165, 154, 81, -111, 38, -167, 21, -149, -148,
	20, 31, 32, 31, 32, 31, 32, 31, 32, 96,
	586, 218, 464, 515, 165, 166, 167, -186, -288, -188,
	-179, -288, 236, -139, -332, 239, -332, -332, -332, -332,
	-332, 235, -332, 233, 233, 233, -332, 482, 122, 122,
	58, -491, 169, 154, -480, -170, 81, -299, 130, 134,
	-299, 23, 262, 262, 262, -299, 302, -527, -528, 15,
	132, -297, -528, -297, -297, -299, -529, 235, 449, 42,
	263, 262, -166, -167, -166, 443, 439, -386, 444, 445,
	-301, -528, -300, -299, -299, -300, -299, -299, -299, 233,
	236, 475, 322, 583, -527, -527, 30, 30, -415, -201,
	-415, 509, -280, -288, -415, -415, -415, -492, 238, -522,
	-521, 462, -524, 464, 159, -363, 159, -363, -344, 264,
	264, 154, 122, 23, -364, 122, 133, -363, -363, -364,
	-364, -222, 40, -287, 150, -288, 87, -222, 40, -519,
	-518, -201, -166, -149, -148, 82, 82, 82, -415, -415,
	-415, -415, -415, -417, -415, -415, -415, -294, -179, -188,
	239, -415, -415, -150, -151, 141, -314, -288, -150, -3,
	-117, -116, 116, 117, 119, 576, 355, 575, 579, 573,
	-363, 40, -410, 382, 381, -404, -406, 81, -405, 81,
	-405, -405, -405, 81, 81, -407, 81, -407, -407, -404,
	-408, 81, -408, -409, 81, -409, -408, -288, -319, -320,
	-288, 38, -425, 60, -145, 81, 30, 81, -288, -426,
	60, -145, 81, 30, -166, -111, -167, 153, 96, 87,
	-81, 82, 154, -484, 102, 103, -487, 202, 194, -288,
	-96, 87, -7, -8, -9, -10, -39, -71, -145, -453,
	-451, 81, 31, 409, 78, 15, -370, 233, 475, 360,
	260, 236, 339, -368, -351, -348, -346, -287, -344, -347,
	-346, -373, -270, 439, -112, 423, 314, -314, -314, -314,
	-314, -314, 101, 112, 337, 102, 103, -309, -328, 31,
	310, 311, -310, -310, -310, -310, -310, -310, -310, -310,
	-310, -310, -310, -310, -317, -326, -399, 81, 132, 130,
	134, 131, 114, -312, -312, -310, -310, 82, 154, -477,
	-476, 116, -314, -314, -288, -474, -475, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 351, 346,
	352, 350, 342, 358, 353, 354, 187, 506, 507, 500,
	501, 502, 503, 504, 505, -319, -319, -314, -474, -319,
	-264, 32, 31, -320, -320, -320, 82, -314, -488, 335,
	334, 336, -168, -288, -319, 82, 82, 82, 96, -320,
	-320, -319, -310, -319, -475, -264, -264, -320, -320, -264,
	-264, -264, -264, 141, -264, -264, -264, -264, -264, -264,
	-264, -264, 82, 82, 82, -166, -110, -434, -433, -314,
	40, 566, -111, -314, -163, -162, -314, -516, 87, 87,
	589, 465, 466, 163, 166, 165, 34, 81, 81, 153,
	-332, -201, 112, -494, -288, -352, -349, -346, -288, -288,
	-342, -288, -288, -332, -332, -332, -201, -233, 52, 53,
	54, -346, -140, 55, 56, -492, -479, 34, -169, -288,
	-254, 16, -312, -312, -346, 264, -527, -299, -299, -281,
	-280, -301, -296, -301, -301, -254, -528, -299, -299, -301,
	-297, -254, -288, 439, -254, -254, -386, -298, -288, -298,
	-332, -280, -281, -281, -201, -244, -245, 230, 227, 226,
	-251, 228, 303, -333, 483, -228, -229, 76, 41, -231,
	386, 379, 266, 270, 91, 271, 419, 272, 235, 274,
	275, 276, 291, 293, 246, 277, 278, 279, 410, 280,
	158, 292, 281, 282, 283, 362, -223, 6, 325, 40,
	50, 51, 432, 431, 518, 515, 267, -494, -494, 30,
	30, -352, -288, -288, -158, -153, -157, -154, -159, -257,
	-259, -156, 81, -201, -148, -288, 154, 463, 465, 466,
	-522, -364, -522, -364, 31, 409, -367, 409, 31, -342,
	-361, 459, 461, -357, 87, 410, -347, -366, 78, 150,
	-433, -364, -364, -366, -366, 149, 154, -520, 464, 465,
	222, -111, -203, -201, -494, -351, -342, -288, -415, -203,
	-288, -288, 81, 35, -288, -288, -253, 154, -252, 15,
	-289, -288, 34, 87, 153, -253, -118, -116, 118, -314,
	-6, 575, -314, -6, -6, -314, -6, -314, -413, 383,
	96, 96, -272, 87, -272, 96, 96, 96, 82, 87,
	-355, 78, -427, -321, -472, 565, -173, 82, -168, -470,
	-471, -168, -172, -288, -427, -173, 82, -470, -111, -111,
	-288, 23, -81, -482, 153, 154, -169, -370, -350, -347,
	-372, 141, -288, -358, 154, 515, 592, 85, 237, -508,
	-507, 401, 82, 154, -437, 238, 482, 87, 589, 218,
	101, 337, 102, 103, -399, -320, -317, -312, -312, -310,
	-310, -315, 251, -315, 111, -314, -313, -476, 118, -314,
	34, 154, 79, 153, 82, 82, 15, 15, 82, -314,
	82, 82, 82, 82, 15, 15, -314, 82, 153, 82,
	82, 82, 82, 79, 82, 154, 82, 154, -320, -314,
	82, 82, -314, -314, -314, -320, 82, -314, -314, -314,
	-314, -314, -314, -314, -314, -380, 434, -380, -380, 154,
	82, 87, 154, 22, 154, -160, 36, 37, -276, -275,
	87, 164, 167, 167, 166, -187, -189, -190, -191, -192,
	-193, 132, 155, 156, -180, -181, -182, -183, -207, -270,
	189, 192, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 250, 184, 185, 186, 187, 205, 170,
	190, 171, 172, 173, 174, 175, 176, 179, 180, 181,
	182, 178, -288, -201, -170, 35, -497, 387, -509, 154,
	40, -507, 475, -136, 314, -335, 79, -143, 15, -201,
	-201, -201, -214, 34, 15, -152, -202, -288, 81, 82,
	154, -314, -343, 79, -288, -281, -254, -254, -201, -288,
	-254, -254, -299, -301, -301, -297, 153, -280, -170, 154,
	-200, -204, 241, -197, -199, -270, -304, -198, 244, -466,
	242, 240, 106, 245, 299, 107, 235, -246, 235, 107,
	-288, 241, 245, 240, -247, 235, 299, 242, -232, 237,
	34, -285, 122, -279, 149, 237, 42, 362, -285, 519,
	-285, -285, -285, -285, -285, -285, -285, 273, 273, -285,
	-285, -285, -285, -285, -285, -285, -285, -285, -285, -285,
	159, -285, -285, -285, -285, -285, -285, 81, 268, 269,
	-498, 387, 30, 345, 345, -509, 30, -144, 339, 30,
	-260, -261, -262, -263, 67, 71, 73, 68, 69, 70,
	74, 30, 154, -286, -290, 34, -288, 87, -286, -148,
	-153, -158, -286, 81, -521, -523, 467, 464, 470, -366,
	-366, 237, 81, 122, -366, -366, 40, -287, -518, 471,
	465, -178, 23, 154, 78, -203, -180, -188, -254, -151,
	-153, -288, 87, -288, 141, -254, 119, -6, 117, -122,
	-121, -120, 120, 573, 579, 119, 119, 119, 82, 82,
	82, 154, 82, 82, 82, 154, 82, 154, -440, 444,
	39, 154, 81, 82, 154, 60, 154, 122, 82, 154,
	82, 60, -178, 153, 419, -288, -451, 82, -372, 154,
	237, 153, 153, -348, 365, -287, -350, 20, 515, -270,
	38, -276, 589, 82, -315, -315, 111, -312, -309, 82,
	119, -314, 117, -205, -207, 381, 382, -206, -212, 150,
	188, 250, 187, 186, 184, 381, 382, -222, -288, -314,
	-314, 82, -314, -314, 15, -288, -222, -310, -314, -165,
	82, -379, -380, -379, 82, 82, 82, 82, -379, 82,
	82, 82, 82, 82, 82, 82, 82, 81, -433, -440,
	-314, -314, -162, -161, 43, 590, 154, 122, 167, 373,
	82, 154, -270, 82, 154, -207, -170, 34, -500, 446,
	389, 399, -285, -306, -305, 341, 41, -420, 410, 395,
	396, -349, 264, -288, -506, 94, 122, 78, 329, 330,
	331, 332, -330, -331, -329, -333, -494, 81, 81, 81,
	-400, 319, -207, -201, -152, -288, 15, 154, -493, 153,
	-1, -288, -342, -299, -254, -528, -254, -299, -299, -301,
	-288, 34, -245, -249, 44, 46, -204, -207, -198, -465,
	-466, -332, -288, 107, -465, 107, 81, -288, -288, -288,
	107, 107, -288, -288, -288, -248, -298, -227, 40, 47,
	48, 49, -285, -285, 191, -230, 40, 409, 411, 412,
	96, 96, 96, 96, 87, 87, 87, -285, -285, 96,
	87, -290, 87, -467, 166, 44, 45, 96, 96, 96,
	96, 40, 87, -234, 40, 284, 288, 285, 286, 287,
	87, 96, 40, 96, 40, 96, 40, -288, 81, -468,
	-469, 87, -500, -285, 345, -363, 122, -306, -505, 314,
	-137, 91, 31, -174, 230, 227, -494, -354, -353, -270,
	-157, -157, -157, -157, 67, 67, 67, 72, 67, 72,
	67, -262, -354, -159, -170, -290, 82, -514, -513, -512,
	-510, 75, 238, 76, -319, 464, 468, 469, -350, -302,
	87, -357, 13, -201, -201, -419, 294, 295, 82, -256,
	17, 153, -256, 115, -6, -118, -120, -314, -6, -314,
	575, 355, 576, 87, 96, 96, -448, 429, 424, 426,
	107, -321, -435, -434, 60, -145, -168, -427, -471, -433,
	-288, 60, -145, -427, -288, 96, 15, -347, -342, 141,
	141, -288, 366, -358, 87, 388, 87, 233, 590, -276,
	-309, -314, 82, -215, 175, 174, -215, 82, -405, -405,
	-404, -407, -404, -215, -215, 82, 82, 23, 82, 82,
	82, -314, 82, 82, 154, -424, 484, -379, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-323, -322, 256, -448, 44, 45, -275, 87, 87, 87,
	-191, -207, 231, -182, 40, 34, -145, -501, 91, -495,
	87, -288, -502, 91, 390, 152, 343, 40, 391, 392,
	407, 338, 96, 96, 397, -496, -288, -144, -504, 51,
	122, 87, -201, -329, -279, 149, 275, 322, -194, -195,
	-196, -204, -197, -199, -194, -194, -401, 321, 20, 96,
	140, -171, 79, 153, -153, -202, -288, 141, 82, -254,
	-288, -254, -254, -299, -145, -270, -249, -219, -218, -216,
	101, 112, 40, 379, -217, 91, 149, 289, 292, 291,
	267, 290, -243, -303, 78, 385, 327, 328, -333, 240,
	106, 107, 367, -304, -463, -288, -461, -463, -288, -461,
	-461, -332, -314, -288, -250, 327, 328, -359, 300, 112,
	-359, -222, -222, 30, 87, 87, -203, 82, 154, 122,
	-501, -495, 122, -364, 87, -502, -506, 122, 87, 154,
	-174, -174, -254, 154, 122, -176, -175, 78, 79, -177,
	78, -175, 67, 67, -254, -512, -511, 23, -466, -466,
	-466, 82, 82, -255, 18, 20, 141, -255, 119, 117,
	119, 119, -288, 82, 82, -411, 567, -444, -446, 424,
	20, 20, 13, 82, -427, -427, -342, -358, 410, -201,
	590, -314, 82, -314, 82, 87, -165, 20, -411, -184,
	-207, -307, -145, -141, 515, 87, -499, 401, 87, 87,
	96, 40, 96, 152, 393, -421, -137, -503, 91, 122,
	589, 81, -285, -285, -285, -288, 82, 154, 82, 82,
	-402, 255, 96, 140, 96, 140, 96, -286, -153, -288,
	-254, -493, 153, -254, -254, -216, 101, -310, 87, -224,
	-287, 150, -225, 40, 288, 284, 122, 122, -226, 40,
	268, 269, -235, 81, 299, 13, 191, 107, 107, -201,
	81, 81, 79, 309, 81, 81, -463, 82, 300, 149,
	-222, 82, -469, 87, -499, 87, -366, -504, 87, -494,
	-165, -353, -433, -314, 81, -314, 81, 67, 19, 17,
	-314, -320, 239, -6, 576, 355, -236, 568, 87, 20,
	87, -442, 87, -354, -114, -438, -386, 82, 82, -379,
	-382, -381, -385, 430, 301, 437, -320, -236, 514, -141,
	-142, 59, 471, 20, 515, 342, 40, 96, 40, 394,
	87, 102, 103, -277, -278, 87, -337, -339, -270, 81,
	-222, -224, 87, -220, -221, -251, -333, -196, -113, -112,
	-220, -403, 158, 96, 140, 96, 96, -254, -254, 87,
	87, 96, 81, -428, 30, -338, 81, -337, -337, -464,
	329, 330, 331, 333, 332, -464, -337, -337, 81, -360,
	-359, -285, 149, -503, -166, -169, -462, -288, 240, 20,
	20, -288, -288, -273, 569, 96, 87, 426, -412, 570,
	-447, 429, -441, -439, 424, 425, 426, 427, 82, -384,
	114, 393, 397, -308, -311, 96, 99, 183, 152, -273,
	-185, -288, 299, 87, 388, 87, 342, 590, 154, 122,
	82, 154, -404, -314, -374, 256, 154, -251, -279, -114,
	-374, -418, 166, 320, 515, 96, 140, 96, -165, 82,
	-314, -324, -285, -238, -237, 511, -337, 82, 82, 82,
	82, -337, -222, -285, 82, 82, 154, 81, 20, 87,
	-449, 238, -445, -446, 428, -439, 20, 426, 20, 20,
	-383, -384, 397, -308, -311, 565, 435, 435, 435, 34,
	366, 410, -278, 87, -340, -339, -160, 82, -375, 308,
	20, -251, -285, -375, 320, 96, 140, 96, -166, 82,
	-288, -242, -240, -241, 78, 442, 297, 298, 82, -340,
	79, -340, 79, -340, 79, -340, 79, 82, -222, -288,
	240, -274, -288, -442, -456, 81, 96, -444, -443, -445,
	20, -442, 20, -442, -442, 111, 436, 436, 436, 87,
	-341, 246, 91, 515, 327, 328, -160, 20, -376, 301,
	302, -377, -390, 304, -222, 96, -359, -241, 78, -240,
	78, 14, 13, -464, -464, -464, -464, -243, 82, 154,
	-460, 30, 82, -455, -454, -271, -450, -288, 429, 430,
	87, -442, -383, -285, 87, 326, -270, 81, -388, 305,
	81, -386, 81, -386, 107, 330, -239, 294, 295, 30,
	166, -239, -340, -340, -340, -340, -288, -459, -458, -457,
	82, 154, 153, 96, -288, -373, -378, 306, 96, -310,
	81, -310, 81, -387, 303, 81, 101, 40, 296, 154,
	122, -454, -288, 82, -392, 81, 20, 82, -373, 82,
	-373, 81, 122, -310, -458, 40, -314, 153, -393, -391,
	256, -377, 82, 82, 82, -373, 96, 82, -288, 82,
	154, -288, -389, 307, 82, -391, -394, 60, 96, -398,
	-395, 81, -251, 258, 132, -398, -251, -397, -396, 306,
	259, 81, 82, 154, -288, 255, 81, -320, -396, -395,
	-320, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 810, 811, 812, 813, 814, 815, 0,
	0, 0, 0, 584, 585, 0, 554, 0, 0, 0,
	0, 0, 0, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 354, 355, 356, 357, 358, 359, 360, 0,
	288, 284, 209, 210, 211, 212, 213, 295, 296, 422,
	0, 0, 0, 0, 665, -2, 56, 0, 277, 0,
	268, 268, 816, 817, 818, 819, 820, 821, 822, 823,
	-2, 597, 0, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 343, 344, 345, 339,
	340, 342, 341, -2, 0, 597, 0, 0, 0, 685,
	0, 0, 702, 724, 23, 0, 7, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 0, 0, 19,
	0, 19, 0, 0, 0, 1160, 1161, 1162, 1163, -2,
	1647, 1625, 1791, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1588, 1589, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603,
	1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623,
	1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1792, 0, 261, 259, 1625, 1647,
	1707, 1740, 1791, 0, 828, 0, 643, 0, 648, 1114,
	643, 289, 586, 587, 685, 685, 552, 0, 325, 0,
	1638, 329, 0, 0, 0, 549, 319, 320, 321, 322,
	323, 324, 0, 0, 809, 0, 0, 315, 0, 283,
	1698, 0, 0, 0, 0, 0, 0, 153, 934, 155,
	936, 159, 166, 0, 0, 171, 172, 175, 176, 177,
	178, 179, 0, 183, 0, 185, 188, 0, 190, 191,
	0, 194, 195, 196, 0, 206, 207, 208, 937, 938,
	939, -2, 84, 826, 1559, 1449, 0, 1456, 1457, 1468,
	1479, 1238, 1239, 1240, 1241, 0, 0, 0, 0, 0,
	1248, 1249, 0, 1265, 1807, 0, 1255, 1256, 1257, 1258,
	1259, 93, 105, 106, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 0, 1509, 1510, 1511, 1422, 1225, 1160, 0, 1815,
	0, 1835, 1840, 1841, 1842, 1843, 1834, 0, 0, 1407,
	0, 1397, 0, 0, -2, -2, 0, 0, 1766, -2,
	1812, 1831, 1839, 1816, 1838, 1809, 1810, 1804, 1805, 1806,
	1808, 1817, 1819, 1830, 0, 1826, 1836, 1837, 0, 0,
	0, 0, 107, 108, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1413, -2, 1415,
	1416, 1418, -2, 1420, 1421, -2, 1424, 1425, 1426, -2,
	-2, 1429, 1430, 1431, 1432, 1433, 1434, 1437, -2, -2,
	-2, -2, 1409, 1410, 1411, 1412, 1401, 1402, 1403, 1404,
	1405, 1406, -2, -2, -2, 685, 760, 0, -2, 0,
	0, 0, 707, 710, 713, 716, 0, 57, 58, 0,
	278, 279, 267, 269, 0, 273, 0, 266, 0, 0,
	0, 0, 966, 966, 966, 966, 966, 966, 0, 966,
	0, 0, 0, 966, 856, 941, 942, 943, 964, 965,
	1012, 0, 0, 0, 0, 602, 598, 599, 600, 601,
	673, 0, 675, 678, 529, 529, 476, 0, 0, 0,
	529, 0, 490, 482, 0, 0, 0, 529, 0, 0,
	680, 680, 0, 532, 539, 529, 529, -2, 529, 529,
	529, 0, 0, 496, 497, 498, 482, 482, 501, 502,
	503, 514, 515, 540, 1583, 0, 0, 422, 0, 422,
	0, 422, 422, 422, 604, 1735, 1645, 1712, 1698, 0,
	0, 234, 1766, 239, 0, 1646, 1661, 0, 0, 1679,
	0, -2, 0, 305, 680, 0, 686, 0, 685, 0,
	0, 422, 422, 422, 422, 422, 1011, 422, 422, 422,
	0, 0, 0, 422, 422, 0, 0, 725, 726, 721,
	722, 723, 727, 728, 5, 6, 19, 0, 0, 0,
	0, 0, 0, 63, 62, 0, 1560, 1578, 1514, 1515,
	1516, 1565, 1518, 1569, 1569, 1569, 1569, 1547, 1548, 1549,
	1550, 1551, 1552, 1553, 1554, 1555, 0, 0, 1558, 1538,
	1567, 1567, 1567, 1565, 1562, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1572,
	1572, 1575, 1575, 1572, 0, 1447, 0, 0, 0, 0,
	647, 0, 0, 680, -2, 0, 553, 326, 1164, 0,
	0, 330, 331, 0, 0, 346, 0, 349, 334, 335,
	336, 0, 133, 0, 317, 318, 0, 0, 285, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 163,
	160, 167, 170, 180, 187, 0, 199, 201, 204, 161,
	168, 173, 174, 181, 202, 162, 164, 165, 169, 203,
	205, 182, 186, 200, 184, 189, 192, 193, 198, 0,
	134, 0, 0, 0, 0, 0, 1455, 0, 0, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, 1449, 0, 0, 1244, 1245,
	1246, 1247, 1250, 0, 1266, 0, 0, 0, 1508, 1512,
	0, 1447, 1447, 0, 1447, 1443, 0, 0, 0, 0,
	0, 0, 1447, 1383, 0, 0, 1385, 1398, 0, 0,
	1387, 1388, 0, 1391, 1392, 1447, 0, 1447, 1396, 1379,
	1380, 0, 1443, 1443, 0, 0, 1443, 1443, 1443, 1443,
	1443, 1443, 1443, 1443, 1443, 1443, 1443, 1443, 0, 0,
	0, 680, 0, 0, 668, 0, 649, 0, 704, 706,
	0, 708, 709, 711, 712, 714, 715, 717, 718, 59,
	0, 0, 0, 0, 271, 0, 276, 0, 825, 0,
	0, 841, 966, 857, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 966, 966, 966, 0, 858, 0, 0,
	0, 604, 603, 0, 674, 0, 0, 733, 0, 0,
	475, 0, 482, 529, 529, 488, 489, 484, 483, 535,
	536, 532, 0, 532, 532, 733, 0, 508, 509, 510,
	529, 529, 516, 681, 517, 518, 532, 0, 537, 538,
	733, 0, 0, 733, 733, 0, 526, 527, 528, 0,
	0, 966, 0, 545, 484, 484, 1584, 1585, 0, 975,
	0, 0, 0, 548, 0, 0, 0, 0, 605, 214,
	217, 0, 220, 0, 1735, 0, 1735, 0, 227, 0,
	0, 0, 0, 0, 0, 257, 258, 0, 0, 0,
	0, 248, 251, 1108, 1109, 931, 932, 252, 253, 297,
	298, 0, 649, 703, 705, 699, 700, 701, 0, 0,
	0, 0, 0, 422, 0, 0, 0, 580, 0, 582,
	0, 0, 0, 741, 735, 737, 804, 93, 741, 8,
	80, 77, 0, 19, 0, 0, 19, 19, 0, 19,
	262, 0, 1581, 1579, 1580, 1517, 1566, 0, 1543, 0,
	1544, 1545, 1546, 0, 0, 1539, 0, 1540, 1541, 1542,
	1533, 0, 1534, 1535, 0, 1536, 1537, 260, 0, 1448,
	829, 0, 622, 635, 617, 0, 624, 0, 1115, 606,
	635, 608, 0, 624, 649, 671, 649, 0, 327, 0,
	332, 0, 0, 348, 350, 351, 352, 337, 338, 550,
	313, 314, 306, 307, 308, 309, 310, 311, 312, 316,
	103, 0, 286, 287, 0, 0, 0, 147, 148, 149,
	150, 151, 152, 154, 138, 571, 573, 923, 935, 0,
	926, 0, 157, 197, 130, 0, 0, 1450, 1451, 1452,
	1453, 1454, 1458, 0, 1460, 1462, 1464, 1466, 0, 1484,
	-2, -2, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1469, 1482, 1483, 0, 0, 0,
	0, 0, 0, 1480, 1480, 1475, 0, 1242, 0, 1263,
	1267, 0, 0, 0, 94, 1442, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 0, 0, 1449, 0, 0,
	0, 1444, 1445, 0, 0, 0, 1338, 0, 0, 1344,
	1345, 1346, 0, 630, 0, 1408, 1384, 1399, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 759, 761, 0, 639, 641,
	642, 0, 669, 682, 687, 688, 691, 55, 60, 53,
	986, 280, 281, 0, 0, 275, 0, -2, 843, 0,
	0, 678, 0, 0, 872, 420, 917, 0, 0, 0,
	933, 956, 962, 0, 0, 0, 990, 859, 864, 865,
	866, 860, 861, 867, 868, 0, 676, 0, 0, 773,
	474, 0, 530, 531, 479, 1698, 484, 733, 733, 491,
	485, 492, 534, 493, 494, 495, 0, 733, 733, 529,
	532, 519, 533, 532, 522, 523, 0, 541, 546, 542,
	0, 544, 499, 500, 678, 362, 363, 0, 0, 0,
	368, 381, 1586, 0, 0, 0, 0, 378, 1586, 0,
	1586, 1586, 1586, 1586, 1586, 1586, 1586, 0, 0, 1586,
	1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586, 1586,
	0, 1586, 1586, 1586, 1586, 1586, 1094, 1586, 0, 976,
	388, 389, 390, 391, 396, 397, 0, 417, 0, 0,
	0, 420, 0, 906, 746, 0, 747, 748, 744, 775,
	799, 799, 0, 799, 779, 1114, 0, 0, 225, 226,
	215, 0, 216, 0, 228, 229, 0, 231, 232, 233,
	240, 1645, 1712, 235, 237, 0, 0, 241, 254, 255,
	256, 0, 0, 246, 247, 0, 0, 300, 301, 303,
	0, 697, 568, 1112, 569, 570, 574, 0, 0, 577,
	578, 579, 843, 0, 911, 912, 733, 0, 742, 0,
	738, 805, 0, 807, 0, 733, 0, 78, 19, 0,
	71, 68, 0, 0, 0, 0, 0, 1561, 1513, 1582,
	0, 0, 0, 1563, 0, 0, 0, 0, 61, 651,
	613, 0, 616, 632, 0, 636, 0, 0, 628, 621,
	625, 0, 0, 645, 607, 0, 0, 612, 697, 672,
	1165, 0, 333, 347, 0, 0, 0, 0, 141, 920,
	0, 142, 146, 136, 0, 0, 0, 925, 0, 922,
	927, 0, 156, 0, 0, 131, 132, 981, 986, 0,
	1459, 1461, 1463, 1465, 1467, 0, 1470, 1480, 1480, 1476,
	0, 1471, 0, 1473, 0, 1450, 0, 1268, 0, 0,
	0, 0, 0, 0, 1328, 1329, 0, 0, 1333, 0,
	1335, 1336, 1337, 1339, 0, 0, 0, 1343, 0, 1382,
	1400, 1386, 1389, 0, 1393, 0, 1395, 0, 685, 0,
	1305, 1305, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 1260, 0, 1261, 1262, 0,
	762, 651, 0, 0, 0, 694, 692, 693, 0, 984,
	0, 282, 270, 272, 0, 0, 0, 831, 832, 834,
	0, 837, 838, 839, 0, 844, 845, 847, 848, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1630, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 842, 678, 0, 967, 879, 1586, 424, 0,
	0, 919, 0, 895, 0, 0, 0, -2, 0, 0,
	0, 0, 992, 0, 0, 0, 591, 595, 23, 679,
	0, 734, 477, 0, 478, 529, 486, 487, 733, 1114,
	511, 512, 733, 529, 529, 532, 0, 543, 0, 975,
	365, 398, 0, 1123, 1124, 0, 0, 1130, 1139, 966,
	1195, 0, 1139, 0, 0, 1141, 1142, 366, 0, 0,
	404, 0, 0, 0, 367, 0, 0, 0, 0, 382,
	383, 0, 1587, 1586, 1586, 0, 376, 377, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 1586, 1586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1085, 0, 0, 0, 0, 0, 0, 0, 1100, 1101,
	879, 1586, 0, 0, 0, 424, 893, 902, 0, 0,
	0, 0, 0, 0, 766, 0, 0, 765, 0, 0,
	0, 0, 0, 678, 800, 0, 802, 803, 777, -2,
	0, 746, 782, 1447, 218, 219, 0, 0, 224, 242,
	244, 0, 0, 0, 243, 245, 249, 250, 299, 302,
	304, 667, 0, 0, 0, 1013, 0, 583, 731, 736,
	743, 806, 808, 94, 739, 731, 0, 81, 19, 80,
	72, 73, 0, 19, 0, 0, 0, 0, 1571, 1570,
	1556, 0, 1557, 1568, 1573, 0, 1576, 0, 655, 0,
	0, 635, 637, 0, 0, 635, 0, 0, 644, 0,
	0, 635, 670, 0, 0, 551, 104, 353, 0, 0,
	0, 0, 0, 572, 0, 924, 138, 0, 0, 158,
	0, 0, 986, 1446, 1472, 1474, 0, 1481, 1477, 1243,
	1251, 1264, 0, 0, 1270, 1282, 1282, 0, 1273, 1569,
	1569, 1276, 1565, 1567, 1565, 1282, 1282, 0, 95, 0,
	0, 1334, 0, 0, 0, 631, 0, 0, 0, 1303,
	1305, 1310, 1306, 1311, 1305, 1305, 1305, 1305, 1316, 1305,
	1305, 1305, 1305, 1305, 1305, 1305, 1305, 1301, 640, 655,
	683, 684, 689, 690, 0, 54, 986, 0, 274, 0,
	0, 836, 0, 0, 0, 849, 0, 0, 883, 880,
	881, 882, 0, 914, 425, 426, 427, 428, 0, 0,
	0, 918, 0, 906, 888, 0, 0, 0, 957, 958,
	959, 960, 961, -2, 970, 0, 0, 1116, 1116, 1116,
	1000, 0, 991, 643, 0, -2, 0, 0, 593, 0,
	0, 774, 480, 733, 504, 0, 520, 733, 733, 529,
	547, 0, 364, 370, 399, 0, 398, -2, 1129, 1154,
	1140, 1154, 1196, 1154, 1154, 966, 0, 402, 403, 405,
	0, 407, 0, 0, 0, 369, 401, 372, 384, 385,
	386, 387, 0, 0, 0, 379, 392, 393, 394, 395,
	1062, 1063, 1064, 1067, 1068, 1069, 1070, 0, 0, 1073,
	1074, 1075, 1076, 1077, 1151, 1152, 1153, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1102, 1103, 1104, 1105, 1106, 1107,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 0, 0,
	1097, 0, 883, 0, 0, 0, 0, 914, 895, 0,
	905, 0, 907, 908, 0, 0, 614, 733, 292, 0,
	769, 763, 0, 752, 767, 768, 755, 0, 757, 0,
	753, 754, 733, 745, 776, 801, 778, 781, 783, 784,
	790, 0, 0, 0, 0, 221, 222, 223, 230, 0,
	444, 236, 698, 1113, 575, 576, 1014, 1015, 581, 729,
	0, 0, 729, 76, 79, 0, 74, 0, 0, 0,
	0, 66, 64, 1564, 0, 0, 657, 118, 0, 0,
	0, 633, 0, 638, 635, 620, 629, 619, 626, 627,
	646, 635, 611, 610, 1166, 328, 0, 921, 138, 143,
	144, 145, 139, 137, 928, 0, 930, 0, 982, 0,
	1478, 1269, 1252, 1271, 1283, 1284, 1272, 1253, 1274, 1275,
	1277, 1278, 1279, 1280, 1281, 1254, 1330, 0, 1332, 1340,
	1341, 0, 1390, 1394, 0, 0, 0, 1309, 1312, 1313,
	1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	685, 1302, 0, 657, 695, 696, 985, 987, 824, 827,
	833, 835, 0, 846, 0, 0, 862, 855, 0, 0,
	874, 875, 885, 0, 0, 0, 430, 431, 0, 0,
	0, 443, 439, 440, 441, 421, 913, 902, 891, 0,
	0, 901, 0, 971, 1586, 1586, 1586, 0, 0, 1117,
	1118, 1120, 1121, 1122, 0, 0, 1003, 0, 0, 994,
	0, 799, 0, 0, 733, 592, 595, 596, 677, 481,
	733, 524, 521, 733, 361, 400, 371, 1156, -2, 1169,
	1171, 0, 976, 1174, 1175, 0, 0, 0, 0, 0,
	0, 1217, 1183, 0, 0, 1187, 1188, 1189, 0, 0,
	1496, 1497, 0, 1194, 0, 1155, 0, 1143, 1155, 0,
	0, 1154, 0, 406, 408, 411, 412, 409, 1191, 0,
	410, 1065, 1066, 0, 1071, 1072, 0, 1096, 0, 0,
	413, 0, 0, 0, 414, 419, 888, 0, 903, 0,
	909, 910, 685, 0, 0, 749, 770, 0, 0, 750,
	0, 751, 756, 758, 291, 785, 0, 0, 787, 788,
	789, 780, 238, 719, 0, 0, 740, 720, 0, 19,
	0, 0, 69, 1574, 1577, 659, 0, 656, 119, 0,
	0, 0, 0, 634, 618, 609, 140, 135, 929, 121,
	983, 0, 1342, 0, 1305, 1304, 1298, 0, 659, 0,
	852, 850, 862, 854, 869, 884, 873, 0, 915, 916,
	0, 432, 433, 0, 436, 442, 886, 887, 0, 0,
	899, 0, 0, 0, 0, 963, -2, 0, 0, -2,
	1006, 0, 1001, 0, 993, 0, 996, 733, 733, -2,
	589, 594, 0, 505, 525, 1170, 1172, 1173, 1176, 1177,
	1110, 1111, 1178, 1222, 1223, 1224, 0, 0, 1181, 1219,
	1220, 1221, 1182, 0, 0, 0, 0, 1494, 1495, 1215,
	0, 0, 0, 0, 0, 0, 0, 1137, 1192, 1586,
	374, 1095, 1098, 1099, 418, 415, 416, 891, 894, 615,
	680, 293, 294, 771, 0, 764, 794, 791, 0, 0,
	730, 732, 70, 75, 0, 0, 661, 0, 658, 0,
	652, 654, 129, 623, 91, 112, 0, 1331, 1381, 1308,
	0, 1299, 0, 1293, 1294, 1295, 1300, 661, 0, 853,
	0, 870, 871, 0, 0, 429, 434, 0, 437, 438,
	892, 889, 890, 0, 897, 0, 0, 952, 1565, 0,
	972, 973, 974, 1016, -2, 1059, 0, 1119, 978, 121,
	1016, 997, 0, 1004, 0, 1002, 995, 685, 590, 1179,
	1180, 0, 0, 1397, 1586, 1210, 0, 0, 0, 1144,
	1146, 1147, 1148, 1149, 1150, 1145, 0, 0, 0, 1136,
	1138, 0, 1586, 904, 290, 0, 0, 795, 797, 792,
	793, 65, 67, 82, 0, 660, 120, 0, 83, 0,
	109, 0, 122, 123, 0, 0, 0, 0, 1307, 1296,
	0, 0, 0, 0, 0, 1498, 1499, 1500, 0, 650,
	0, 851, 0, 876, 0, 878, 435, 896, 899, 0,
	945, 0, 691, 0, 1018, 0, 975, 1061, 1586, 980,
	1018, 989, 0, 999, 0, 1008, 0, 1005, 680, 1218,
	0, 1186, 0, 1198, 1211, 0, 0, 945, 945, 945,
	945, 0, 373, 0, 772, 786, 0, 0, 0, 92,
	96, 0, 118, 115, 0, 124, 0, 0, 0, 0,
	0, 1285, 0, 0, 0, 1289, 1290, 1291, 1292, 0,
	863, 877, 898, 900, 944, 953, 954, 691, 977, 0,
	1055, 1060, 0, 979, 998, 1007, 0, 1010, 588, 1184,
	1190, 1197, 1199, 1200, 0, 1212, 1213, 1214, 1216, 1125,
	0, 1127, 0, 1131, 0, 1133, 0, 0, 375, 796,
	798, 0, 663, 653, 85, 0, 0, 113, 114, 116,
	0, 125, 0, 127, 128, 0, 1286, 1287, 1288, 840,
	946, 1586, 0, 0, 950, 951, 955, 0, 1043, 0,
	0, 1049, 0, 1056, 1065, 1009, 1185, 1201, 0, 1202,
	0, 0, 0, 945, 945, 945, 945, 1135, 662, 0,
	988, 0, 97, 0, 99, 101, 102, 1157, 110, 111,
	117, 126, 1297, 0, 948, 0, 1019, 0, 1021, 0,
	0, 0, 0, 0, 1053, 0, 1203, 1205, 1206, 0,
	0, 1204, 1126, 1128, 1132, 1134, 664, 86, 87, 0,
	98, 0, 0, 947, 949, 0, 1023, 0, 1044, 0,
	0, 0, 0, 0, 0, 0, 1207, 1209, 1208, 0,
	0, 100, 1158, 1020, 1017, 0, 1055, 1045, 0, 1047,
	0, 0, 0, 0, 88, 89, 90, 0, 0, 1025,
	0, 1041, 1046, 1048, 1050, 0, 1054, 1052, 1159, 1024,
	0, 1037, 1022, 0, 1051, 1026, -2, 0, 1042, 1027,
	-2, 0, 1035, 0, 0, 1028, 1036, 0, 1031, 0,
	0, 0, 1030, 0, -2, 1038, 0, 0, 1032, -2,
	0, 1040, 1039,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 591, 588,
	123, 122, 124, 3, 592, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 589, 135, 590, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:737
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:744
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:750
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:758
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:764
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:768
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:783
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:787
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:793
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:798
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:802
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:834
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:842
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:850
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:860
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:880
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:886
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:893
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:901
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:907
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:916
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:926
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:934
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:942
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:950
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:960
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:968
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:985
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:994
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1008
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1014
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1018
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1024
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1033
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1043
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1047
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1053
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1062
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1066
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1072
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1093
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1106
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1117
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1123
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1127
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1133
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1140
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1148
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1152
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1166
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1170
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1174
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1179
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1183
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1187
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1193
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1202
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1213
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1217
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1223
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1227
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1233
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1237
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1243
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1267
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1286
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1290
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1294
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1299
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1303
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1310
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1318
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1325
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1330
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1337
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1346
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1370
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1374
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1380
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1386
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1404
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1421
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1444
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1448
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1452
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1457
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1461
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1467
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1480
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1491
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1504
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1508
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1518
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1531
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1544
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1550
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1556
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1563
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1571
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1580
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1584
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1588
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1592
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1596
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1600
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1607
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1611
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1624
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1633
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1637
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1643
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1647
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1651
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1655
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1659
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1663
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1667
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1671
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1675
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1679
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1683
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1687
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1811
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1815
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1823
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1827
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1835
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1839
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1852
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1866
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1876
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1880
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1886
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1893
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1901
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1905
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1909
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1913
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1919
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1929
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1936
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1943
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1952
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1982
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1986
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1990
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1996
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2002
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2006
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2013
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2019
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2023
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2029
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2037
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2046
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2055
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2063
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2071
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2094
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2117
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2124
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2131
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2139
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2162
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2166
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2170
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2176
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2180
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2186
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2190
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2196
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2200
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2211
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2217
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2222
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2226
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2230
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2234
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2238
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2242
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2246
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2250
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2254
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2260
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2264
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2268
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2272
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2277
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2295
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2315
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2332
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2354
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2358
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2364
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2374
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2380
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2384
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2390
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2396
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2400
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2404
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2408
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2414
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2426
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2432
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2442
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2446
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2452
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2469
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2475
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2479
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2483
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2487
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2495
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2511
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2562
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2566
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2572
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2578
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2583
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2584
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2585
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2590
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2606
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2617
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2626
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2630
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2636
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2643
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2647
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2651
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2655
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2659
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[2].columnTableDefUnion(),
					Pos:    yyDollar[3].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2668
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column: yyDollar[3].columnTableDefUnion(),
					Pos:    yyDollar[4].alterColposUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2677
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2683
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2687
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2691
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2695
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2699
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2703
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2707
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2711
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2716
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2747
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: -1,
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2753
		{
			yyLOCAL = &tree.AlterColPos{
				Pos: 0,
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColPos
//line mysql_sql.y:2759
		{
			yyLOCAL = &tree.AlterColPos{
				PreColName: yyDollar[2].unresolvedNameUnion(),
				Pos:        -2,
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2769
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2784
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2791
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2798
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2805
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2812
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2820
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2827
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2834
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2843
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2847
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2854
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2866
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2874
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2882
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2895
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2901
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2912
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2923
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2927
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2932
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:2936
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2945
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2961
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2965
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2981
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2985
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2989
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2993
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:2997
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3001
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3005
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3009
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3013
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3017
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3021
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3027
		{
			yyVAL.item = nil
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3032
		{
			yyVAL.item = nil
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3078
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3086
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3090
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3094
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3103
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3107
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3118
		{
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3122
		{
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3127
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3161
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3173
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3179
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3185
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3191
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3200
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3204
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3208
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3212
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3216
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3220
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3224
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3228
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3234
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3251
		{
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3253
		{
		}
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3262
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3272
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3281
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3289
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3295
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3301
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3313
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3322
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3332
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3354
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3380
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3386
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3393
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3402
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3406
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3411
		{
			yyVAL.str = ""
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3415
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3421
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3434
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3444
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3449
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3453
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3463
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3469
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3473
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3479
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3485
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3489
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3493
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3499
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3503
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3527
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3536
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3545
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3554
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3558
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3564
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3573
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3582
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3592
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3598
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3604
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3608
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3614
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3620
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3629
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3636
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3647
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3652
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3659
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3675
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3688
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3699
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3703
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3709
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3714
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3721
		{
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3723
		{
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3726
		{
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3735
		{
		}
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3739
		{
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3744
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3753
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3760
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3766
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3774
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3781
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3788
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3808
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3818
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3822
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3828
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3835
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3841
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3849
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3856
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3863
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3882
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3886
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3891
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3895
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3899
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3905
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3914
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3918
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3924
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3928
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3934
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:3938
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3944
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3949
		{
		}
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3960
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:3964
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:3971
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3980
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3986
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3990
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:3996
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4000
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4009
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4022
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4029
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4036
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4054
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4073
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4079
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4086
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4090
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4103
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4107
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4112
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4116
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4123
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4128
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4135
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4141
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4145
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4149
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4153
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4157
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4161
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4167
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4174
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4183
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4187
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4193
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4205
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4214
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4220
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4233
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4237
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4243
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4249
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4253
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4259
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4264
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4268
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4272
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4277
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4281
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4285
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4294
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4302
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4306
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4310
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4324
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4328
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4338
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4348
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4358
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4370
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4378
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4386
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4395
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4403
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4419
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4427
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4435
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4443
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4451
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4459
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4480
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4494
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4498
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4502
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4511
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4515
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4524
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4528
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4533
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4537
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4546
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4552
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4556
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4562
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4566
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4571
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4575
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4580
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4588
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4594
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4602
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4610
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4620
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4626
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4635
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4644
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4653
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4663
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4667
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4677
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4681
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4685
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4689
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4695
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4705
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4709
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4715
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4725
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4731
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4737
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4741
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4745
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4751
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4755
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4761
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4765
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4771
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4775
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4781
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4785
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4795
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4808
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4814
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4820
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4833
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4851
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4855
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4861
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4871
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4875
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4879
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4884
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4888
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4892
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4896
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4905
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4909
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4913
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4917
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4922
		{
			yyVAL.str = ""
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4926
		{
			yyVAL.str = yyDollar[1].str
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4930
		{
			yyVAL.str = yyDollar[2].str
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4936
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4942
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4946
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4950
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4954
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:4958
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4964
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 824:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4998
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5008
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5014
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 827:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5020
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5030
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5035
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5041
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5048
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5052
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5058
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5064
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5069
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5073
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5077
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5081
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5088
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5100
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5105
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5111
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5118
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5122
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5128
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5134
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5138
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5142
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5148
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5154
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5160
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5169
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5180
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5192
		{
			yyVAL.str = yyDollar[1].str
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5196
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5202
		{
			yyVAL.str = "OR REPLACE"
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5206
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5210
		{
			yyVAL.str = "DEFINER = "
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5214
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5219
		{
			yyVAL.str = ""
		}
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5223
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5237
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5245
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5251
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5261
		{
			yyVAL.str = yyDollar[1].str
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5265
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5271
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5278
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5284
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5292
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5298
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5305
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5312
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5320
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5326
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5335
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5347
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5359
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5371
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5377
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5426
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5435
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5439
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5444
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5448
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5455
		{
			yyVAL.str = yyDollar[3].str
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5460
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5464
		{
			yyVAL.str = yyDollar[2].str
		}
	case 904:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5470
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5484
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5494
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5498
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5504
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5510
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5516
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5525
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5534
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5543
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5548
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5554
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5562
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5668
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5672
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5678
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5688
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5692
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5698
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5708
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5712
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5716
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5725
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5731
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5738
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5744
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5753
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5760
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5769
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5773
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5779
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5793
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5797
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5801
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5806
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5810
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5814
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5818
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5824
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5847
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5869
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5873
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5877
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5881
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5885
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5891
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5895
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5901
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5906
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5911
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5915
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5919
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5923
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5927
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5933
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:5948
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5958
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5962
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5971
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5977
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:5981
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5987
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:5995
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6000
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6004
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6010
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6022
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6031
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6044
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6051
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6061
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6069
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6080
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6084
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6089
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6093
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6100
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6111
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6124
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6138
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6142
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6146
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6153
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6160
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6167
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6174
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6182
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6186
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6190
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6197
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6204
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6208
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6215
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6222
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6226
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6233
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6240
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6247
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6254
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6258
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6263
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6267
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6276
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6280
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6290
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6294
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6301
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6308
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6312
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6325
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6331
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6335
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6341
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6350
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6364
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6370
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6374
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6380
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6387
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6396
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6400
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6405
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6409
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6414
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6418
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6423
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6427
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6437
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6441
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6452
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6460
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6468
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6476
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6487
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6496
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6506
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6516
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6520
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6525
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6529
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6534
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6538
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6544
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6548
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6552
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6558
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6562
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6566
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6570
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6574
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6578
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6582
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6587
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6591
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6595
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6599
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6603
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6607
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6611
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6615
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6619
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6623
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6627
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6631
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6635
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6639
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6643
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6647
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6651
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6655
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6659
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6663
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6667
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6671
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6675
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6679
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6683
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6687
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6691
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6695
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6701
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6705
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6711
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6717
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6721
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6727
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6731
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6735
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6739
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6743
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6747
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6761
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6765
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6774
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6779
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6785
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6792
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6796
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6806
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6810
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6816
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6820
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6826
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6835
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6844
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6867
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6892
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6906
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6912
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6921
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6930
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6939
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6948
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6958
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6966
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6972
		{
			yyVAL.str = ""
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6976
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6986
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6992
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6998
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7017
		{
			yyVAL.str = ""
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7021
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7027
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7033
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7037
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7041
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7047
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7051
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7055
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7059
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7065
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7069
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7073
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7082
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7088
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7092
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7098
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7102
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7106
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7110
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7114
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7118
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7123
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7127
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7131
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7139
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7143
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7147
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7151
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7155
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7159
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7172
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7176
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7180
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7184
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7190
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7199
		{
			yyVAL.str = ""
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7203
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7209
		{
			yyVAL.str = ""
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7213
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7219
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7231
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7238
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7245
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7252
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7259
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7268
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7274
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7284
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7288
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7292
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7296
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7301
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7308
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7312
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7316
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7325
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7330
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7334
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7350
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7356
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7360
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7364
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7368
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7372
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7376
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7380
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7384
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7388
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7392
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7396
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7400
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7404
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7410
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7414
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7418
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7422
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7426
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7430
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7434
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7438
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7442
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7446
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7450
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7454
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7459
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7467
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7472
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7476
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7485
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7489
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7493
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7497
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7501
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7507
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7515
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7523
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7536
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7545
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7551
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7555
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7561
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7570
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7582
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7599
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7616
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7629
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7642
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7654
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7668
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7683
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7698
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7715
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7730
		{
		}
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7737
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7741
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7745
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7751
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7755
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7759
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7763
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7769
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7773
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7777
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7783
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7791
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7805
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7812
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7817
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:7821
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7826
		{
			yyVAL.str = ","
		}
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7830
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:7842
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7868
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				AggType:    2,
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7879
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7889
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7898
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7907
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7917
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7927
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7937
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7947
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7957
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7967
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7977
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7987
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7997
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8007
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8017
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8027
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8044
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8052
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8060
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8068
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8076
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8086
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8094
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8103
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8111
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8119
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8127
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8135
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8146
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8156
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8168
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8179
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8201
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8237
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8249
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8261
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8272
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8280
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8287
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8294
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8306
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8314
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8324
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8334
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8342
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8353
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8362
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8371
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8379
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8389
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8397
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8411
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8417
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8421
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8440
		{
		}
	case 1408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8442
		{
		}
	case 1442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8483
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8494
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8498
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8502
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8508
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8517
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8523
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8527
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8534
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8538
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8542
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8550
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8554
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8558
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8562
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8568
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8572
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8576
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8580
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8584
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8588
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8592
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8596
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8600
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8604
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8612
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8616
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8620
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8624
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8628
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8632
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8636
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8640
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8644
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8648
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8658
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8664
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8668
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8675
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8679
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8683
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8689
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8693
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8697
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8701
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8705
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8709
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8713
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8719
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8723
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8727
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8731
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8737
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8750
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8755
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8761
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8765
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8778
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8783
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8787
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8791
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8795
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8799
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8806
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8810
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8824
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8828
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8835
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8846
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8851
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8857
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8869
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8881
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8893
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8906
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8919
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8932
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8945
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8958
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8971
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8984
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8997
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9010
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9023
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9038
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9065
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9107
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9143
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9179
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9208
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9228
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9248
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9268
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9284
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9297
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9310
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9323
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9336
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9348
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9360
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9372
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9384
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9396
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9408
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9420
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9432
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9444
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9457
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9470
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9485
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9493
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9502
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9512
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9535
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9540
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9546
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9553
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9557
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9562
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9566
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9572
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9578
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9585
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9592
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9601
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9608
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9615
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9624
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9628
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9632
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9638
		{
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9640
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9650
		{
			yyVAL.str = ""
		}
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9654
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
