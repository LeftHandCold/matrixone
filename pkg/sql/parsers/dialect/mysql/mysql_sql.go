// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INLINE = 57750
const INFILE = 57751
const TERMINATED = 57752
const OPTIONALLY = 57753
const ENCLOSED = 57754
const ESCAPED = 57755
const STARTING = 57756
const LINES = 57757
const ROWS = 57758
const IMPORT = 57759
const DISCARD = 57760
const MODUMP = 57761
const OVER = 57762
const PRECEDING = 57763
const FOLLOWING = 57764
const GROUPS = 57765
const DATABASES = 57766
const TABLES = 57767
const SEQUENCES = 57768
const EXTENDED = 57769
const FULL = 57770
const PROCESSLIST = 57771
const FIELDS = 57772
const COLUMNS = 57773
const OPEN = 57774
const ERRORS = 57775
const WARNINGS = 57776
const INDEXES = 57777
const SCHEMAS = 57778
const NODE = 57779
const LOCKS = 57780
const ROLES = 57781
const TABLE_NUMBER = 57782
const COLUMN_NUMBER = 57783
const TABLE_VALUES = 57784
const TABLE_SIZE = 57785
const NAMES = 57786
const GLOBAL = 57787
const PERSIST = 57788
const SESSION = 57789
const ISOLATION = 57790
const LEVEL = 57791
const READ = 57792
const WRITE = 57793
const ONLY = 57794
const REPEATABLE = 57795
const COMMITTED = 57796
const UNCOMMITTED = 57797
const SERIALIZABLE = 57798
const LOCAL = 57799
const EVENTS = 57800
const PLUGINS = 57801
const CURRENT_TIMESTAMP = 57802
const DATABASE = 57803
const CURRENT_TIME = 57804
const LOCALTIME = 57805
const LOCALTIMESTAMP = 57806
const UTC_DATE = 57807
const UTC_TIME = 57808
const UTC_TIMESTAMP = 57809
const REPLACE = 57810
const CONVERT = 57811
const SEPARATOR = 57812
const TIMESTAMPDIFF = 57813
const CURRENT_DATE = 57814
const CURRENT_USER = 57815
const CURRENT_ROLE = 57816
const SECOND_MICROSECOND = 57817
const MINUTE_MICROSECOND = 57818
const MINUTE_SECOND = 57819
const HOUR_MICROSECOND = 57820
const HOUR_SECOND = 57821
const HOUR_MINUTE = 57822
const DAY_MICROSECOND = 57823
const DAY_SECOND = 57824
const DAY_MINUTE = 57825
const DAY_HOUR = 57826
const YEAR_MONTH = 57827
const SQL_TSI_HOUR = 57828
const SQL_TSI_DAY = 57829
const SQL_TSI_WEEK = 57830
const SQL_TSI_MONTH = 57831
const SQL_TSI_QUARTER = 57832
const SQL_TSI_YEAR = 57833
const SQL_TSI_SECOND = 57834
const SQL_TSI_MINUTE = 57835
const RECURSIVE = 57836
const CONFIG = 57837
const DRAINER = 57838
const SOURCE = 57839
const STREAM = 57840
const HEADERS = 57841
const MATCH = 57842
const AGAINST = 57843
const BOOLEAN = 57844
const LANGUAGE = 57845
const WITH = 57846
const QUERY = 57847
const EXPANSION = 57848
const WITHOUT = 57849
const VALIDATION = 57850
const ADDDATE = 57851
const BIT_AND = 57852
const BIT_OR = 57853
const BIT_XOR = 57854
const CAST = 57855
const COUNT = 57856
const APPROX_COUNT = 57857
const APPROX_COUNT_DISTINCT = 57858
const APPROX_PERCENTILE = 57859
const CURDATE = 57860
const CURTIME = 57861
const DATE_ADD = 57862
const DATE_SUB = 57863
const EXTRACT = 57864
const GROUP_CONCAT = 57865
const MAX = 57866
const MID = 57867
const MIN = 57868
const NOW = 57869
const POSITION = 57870
const SESSION_USER = 57871
const STD = 57872
const STDDEV = 57873
const MEDIAN = 57874
const STDDEV_POP = 57875
const STDDEV_SAMP = 57876
const SUBDATE = 57877
const SUBSTR = 57878
const SUBSTRING = 57879
const SUM = 57880
const SYSDATE = 57881
const SYSTEM_USER = 57882
const TRANSLATE = 57883
const TRIM = 57884
const VARIANCE = 57885
const VAR_POP = 57886
const VAR_SAMP = 57887
const AVG = 57888
const RANK = 57889
const ROW_NUMBER = 57890
const DENSE_RANK = 57891
const BIT_CAST = 57892
const NEXTVAL = 57893
const SETVAL = 57894
const CURRVAL = 57895
const LASTVAL = 57896
const ARROW = 57897
const ROW = 57898
const OUTFILE = 57899
const HEADER = 57900
const MAX_FILE_SIZE = 57901
const FORCE_QUOTE = 57902
const PARALLEL = 57903
const UNUSED = 57904
const BINDINGS = 57905
const DO = 57906
const DECLARE = 57907
const LOOP = 57908
const WHILE = 57909
const LEAVE = 57910
const ITERATE = 57911
const UNTIL = 57912
const CALL = 57913
const SPBEGIN = 57914
const BACKEND = 57915
const SERVERS = 57916
const KILL = 57917
const BACKUP = 57918
const FILESYSTEM = 57919
const PARALLELLISM = 57920
const QUERY_RESULT = 57921

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"PARALLELLISM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10397

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 116,
	21, 701,
	-2, 682,
	-1, 132,
	233, 1038,
	235, 956,
	-2, 996,
	-1, 155,
	42, 521,
	235, 521,
	262, 528,
	263, 528,
	452, 521,
	-2, 554,
	-1, 191,
	600, 1747,
	-2, 437,
	-1, 528,
	314, 135,
	425, 135,
	426, 135,
	-2, 1658,
	-1, 592,
	81, 1455,
	-2, 1801,
	-1, 593,
	81, 1473,
	-2, 1772,
	-1, 597,
	81, 1474,
	-2, 1800,
	-1, 623,
	81, 1385,
	-2, 1870,
	-1, 624,
	81, 1386,
	-2, 1869,
	-1, 625,
	81, 1387,
	-2, 1859,
	-1, 626,
	81, 1833,
	-2, 1854,
	-1, 627,
	81, 1834,
	-2, 1855,
	-1, 628,
	81, 1835,
	-2, 1861,
	-1, 629,
	81, 1836,
	-2, 1843,
	-1, 630,
	81, 1837,
	-2, 1852,
	-1, 631,
	81, 1838,
	-2, 1862,
	-1, 632,
	81, 1839,
	-2, 1863,
	-1, 633,
	81, 1840,
	-2, 1868,
	-1, 634,
	81, 1841,
	-2, 1873,
	-1, 635,
	81, 1842,
	-2, 1874,
	-1, 637,
	81, 1452,
	-2, 1646,
	-1, 639,
	81, 1454,
	-2, 1653,
	-1, 641,
	81, 1457,
	-2, 1659,
	-1, 644,
	81, 1461,
	-2, 1678,
	-1, 648,
	81, 1465,
	-2, 1718,
	-1, 649,
	81, 1466,
	-2, 1796,
	-1, 657,
	81, 1476,
	-2, 1781,
	-1, 658,
	81, 1477,
	-2, 1825,
	-1, 659,
	81, 1478,
	-2, 1791,
	-1, 660,
	81, 1479,
	-2, 1815,
	-1, 671,
	81, 1363,
	-2, 1864,
	-1, 672,
	81, 1364,
	-2, 1865,
	-1, 673,
	81, 1365,
	-2, 1866,
	-1, 677,
	21, 702,
	-2, 665,
	-1, 756,
	447, 554,
	448, 554,
	-2, 522,
	-1, 801,
	122, 1646,
	133, 1646,
	153, 1646,
	-2, 1621,
	-1, 905,
	21, 702,
	-2, 665,
	-1, 1005,
	21, 701,
	-2, 1260,
	-1, 1378,
	81, 1523,
	-2, 1798,
	-1, 1379,
	81, 1524,
	-2, 1799,
	-1, 1518,
	82, 847,
	-2, 853,
	-1, 1904,
	82, 1607,
	154, 1607,
	-2, 1783,
	-1, 1905,
	82, 1607,
	154, 1607,
	-2, 1782,
	-1, 1906,
	82, 1585,
	154, 1585,
	-2, 1769,
	-1, 1907,
	82, 1586,
	154, 1586,
	-2, 1774,
	-1, 1908,
	82, 1587,
	154, 1587,
	-2, 1706,
	-1, 1909,
	82, 1588,
	154, 1588,
	-2, 1700,
	-1, 1910,
	82, 1589,
	154, 1589,
	-2, 1637,
	-1, 1911,
	82, 1590,
	154, 1590,
	-2, 1771,
	-1, 1912,
	82, 1591,
	154, 1591,
	-2, 1704,
	-1, 1913,
	82, 1592,
	154, 1592,
	-2, 1699,
	-1, 1914,
	82, 1593,
	154, 1593,
	-2, 1692,
	-1, 1916,
	82, 1596,
	154, 1596,
	-2, 1815,
	-1, 1917,
	82, 1576,
	154, 1576,
	-2, 1801,
	-1, 1918,
	82, 1605,
	154, 1605,
	-2, 1772,
	-1, 1919,
	82, 1605,
	154, 1605,
	-2, 1800,
	-1, 1920,
	82, 1605,
	154, 1605,
	-2, 1660,
	-1, 1921,
	82, 1603,
	154, 1603,
	-2, 1791,
	-1, 1922,
	82, 1600,
	154, 1600,
	-2, 1683,
	-1, 1923,
	81, 1557,
	82, 1557,
	154, 1557,
	383, 1557,
	384, 1557,
	385, 1557,
	-2, 1636,
	-1, 1924,
	81, 1558,
	82, 1558,
	154, 1558,
	383, 1558,
	384, 1558,
	385, 1558,
	-2, 1638,
	-1, 1925,
	81, 1561,
	82, 1561,
	154, 1561,
	383, 1561,
	384, 1561,
	385, 1561,
	-2, 1773,
	-1, 1926,
	81, 1563,
	82, 1563,
	154, 1563,
	383, 1563,
	384, 1563,
	385, 1563,
	-2, 1756,
	-1, 1927,
	81, 1565,
	82, 1565,
	154, 1565,
	383, 1565,
	384, 1565,
	385, 1565,
	-2, 1705,
	-1, 1928,
	81, 1567,
	82, 1567,
	154, 1567,
	383, 1567,
	384, 1567,
	385, 1567,
	-2, 1688,
	-1, 1929,
	81, 1568,
	82, 1568,
	154, 1568,
	383, 1568,
	384, 1568,
	385, 1568,
	-2, 1689,
	-1, 1930,
	81, 1570,
	82, 1570,
	154, 1570,
	383, 1570,
	384, 1570,
	385, 1570,
	-2, 1635,
	-1, 1931,
	82, 1610,
	154, 1610,
	383, 1610,
	384, 1610,
	385, 1610,
	-2, 1665,
	-1, 1932,
	82, 1610,
	154, 1610,
	383, 1610,
	384, 1610,
	385, 1610,
	-2, 1679,
	-1, 1933,
	82, 1613,
	154, 1613,
	383, 1613,
	384, 1613,
	385, 1613,
	-2, 1661,
	-1, 1934,
	82, 1613,
	154, 1613,
	383, 1613,
	384, 1613,
	385, 1613,
	-2, 1721,
	-1, 1935,
	82, 1610,
	154, 1610,
	383, 1610,
	384, 1610,
	385, 1610,
	-2, 1741,
	-1, 1953,
	105, 991,
	149, 991,
	188, 991,
	191, 991,
	275, 991,
	-2, 984,
	-1, 2091,
	21, 701,
	-2, 795,
	-1, 2294,
	105, 991,
	149, 991,
	188, 991,
	191, 991,
	275, 991,
	-2, 985,
	-1, 2306,
	79, 611,
	154, 611,
	-2, 1147,
	-1, 2643,
	191, 991,
	299, 1228,
	-2, 1200,
	-1, 2781,
	105, 991,
	149, 991,
	188, 991,
	191, 991,
	-2, 1090,
	-1, 2783,
	105, 991,
	149, 991,
	188, 991,
	191, 991,
	-2, 1090,
	-1, 2793,
	79, 611,
	154, 611,
	-2, 1148,
	-1, 2802,
	191, 991,
	299, 1228,
	-2, 1201,
	-1, 2929,
	105, 991,
	149, 991,
	188, 991,
	191, 991,
	-2, 1091,
	-1, 3301,
	82, 1056,
	154, 1056,
	-2, 991,
	-1, 3305,
	82, 1056,
	154, 1056,
	-2, 991,
	-1, 3319,
	82, 1060,
	154, 1060,
	-2, 991,
	-1, 3324,
	82, 1061,
	154, 1061,
	-2, 991,
}

const yyPrivate = 57344

const yyLast = 38053

var yyAct = [...]int{
	559, 1598, 3305, 3304, 3313, 3284, 182, 1358, 537, 3176,
	539, 3237, 561, 532, 3202, 3255, 3184, 2661, 3185, 2882,
	547, 2877, 3094, 1877, 2970, 3108, 2816, 1038, 3085, 1354,
	2724, 1157, 1217, 3112, 2919, 2920, 2917, 3005, 589, 2725,
	444, 3043, 1296, 678, 2880, 800, 1286, 541, 2266, 2995,
	451, 3095, 456, 456, 2756, 3097, 1551, 2772, 456, 472,
	481, 2803, 2924, 481, 1361, 1993, 2928, 2935, 2309, 2579,
	2896, 2872, 2424, 1687, 2607, 2425, 1684, 2761, 2347, 2658,
	2640, 167, 2647, 2327, 2407, 2784, 2417, 2577, 1652, 2722,
	1781, 2446, 2085, 2710, 2693, 2420, 1902, 2285, 2588, 2931,
	2423, 2591, 1996, 486, 2586, 2580, 2646, 1750, 2620, 492,
	1210, 1962, 899, 530, 1699, 2069, 1883, 1277, 2295, 2483,
	1777, 1882, 536, 1759, 1758, 1751, 2521, 2133, 2466, 1900,
	1498, 1680, 1776, 806, 2086, 732, 1892, 2074, 1724, 1655,
	1653, 1282, 2226, 2274, 1580, 2269, 1994, 1295, 2301, 1110,
	1590, 2329, 1961, 1130, 178, 8, 531, 177, 7, 444,
	6, 1529, 1290, 538, 36, 853, 1778, 2196, 1352, 1810,
	1287, 2113, 1165, 1506, 1226, 1251, 540, 1944, 2150, 1196,
	1563, 1989, 182, 1898, 182, 1408, 844, 845, 2582, 1166,
	1562, 529, 450, 838, 839, 1788, 2581, 1392, 843, 1343,
	548, 763, 2227, 1754, 115, 804, 35, 916, 1740, 26,
	1553, 1132, 1258, 15, 1757, 13, 1351, 1714, 1146, 793,
	2093, 14, 794, 478, 465, 1528, 32, 1142, 731, 1415,
	675, 468, 1193, 1414, 494, 495, 531, 23, 16, 10,
	1158, 480, 1195, 1077, 168, 164, 729, 1103, 1250, 1357,
	677, 713, 1785, 841, 751, 161, 1795, 2775, 3037, 2253,
	709, 1039, 443, 840, 2717, 842, 2253, 2253, 477, 2185,
	2139, 2136, 473, 2137, 475, 2134, 1511, 1265, 1261, 836,
	476, 837, 837, 166, 452, 474, 1881, 837, 1178, 1094,
	974, 975, 976, 973, 1263, 2870, 974, 975, 976, 973,
	2479, 2477, 1729, 3001, 484, 2996, 2873, 2723, 1502, 3099,
	1033, 461, 1753, 676, 55, 2031, 3167, 2806, 3054, 686,
	2906, 8, 165, 165, 7, 165, 165, 835, 165, 51,
	157, 133, 2265, 165, 51, 157, 133, 165, 937, 165,
	1310, 165, 51, 157, 133, 1095, 2171, 1782, 2179, 2267,
	165, 825, 2897, 2895, 3131, 2818, 1524, 1303, 1107, 490,
	2545, 491, 3055, 1793, 1122, 1948, 2111, 807, 2809, 809,
	1307, 2498, 1174, 114, 2491, 1175, 952, 3026, 2804, 953,
	971, 2453, 2454, 2826, 2827, 114, 2112, 1300, 2452, 2805,
	2099, 1309, 162, 2098, 162, 162, 2100, 162, 1344, 1096,
	1154, 1348, 162, 1328, 1665, 1666, 162, 955, 1302, 1697,
	162, 666, 1664, 665, 667, 668, 2023, 669, 670, 162,
	687, 1512, 1513, 2271, 679, 1347, 2810, 1197, 3220, 1199,
	1161, 2151, 3218, 2272, 1160, 1163, 1164, 1163, 1164, 772,
	1576, 1360, 2891, 969, 803, 945, 3188, 3189, 947, 802,
	3102, 964, 3102, 3162, 3101, 456, 3101, 3161, 3100, 3160,
	3100, 1177, 1868, 3206, 3207, 456, 909, 3006, 3007, 3008,
	3009, 3166, 1364, 3003, 2726, 2484, 948, 810, 3087, 3087,
	3090, 2270, 950, 481, 481, 2485, 456, 2486, 2999, 2726,
	820, 816, 811, 815, 818, 2166, 910, 919, 1797, 3105,
	1681, 2735, 2762, 1789, 1349, 904, 906, 2911, 782, 1671,
	1339, 2769, 2602, 2063, 2363, 2592, 3032, 2825, 823, 1997,
	1264, 1262, 814, 2511, 1942, 1737, 720, 1346, 2256, 1271,
	1270, 2828, 967, 968, 3164, 2029, 2509, 940, 966, 847,
	2176, 132, 919, 163, 2814, 951, 2871, 977, 2478, 908,
	1675, 941, 3169, 3170, 2411, 2066, 1006, 2600, 2065, 3035,
	2908, 1435, 2070, 155, 1015, 1449, 2811, 2815, 2813, 2812,
	903, 2659, 2660, 821, 2890, 3213, 943, 1799, 1801, 1802,
	824, 2892, 3222, 1363, 1362, 1007, 805, 1022, 946, 949,
	2621, 909, 2616, 1152, 3187, 3123, 905, 812, 3118, 932,
	2302, 3059, 483, 525, 2820, 2821, 527, 2596, 3051, 482,
	1794, 526, 2597, 2598, 942, 2416, 489, 1176, 2840, 1950,
	822, 954, 2843, 3113, 2277, 3314, 2833, 3298, 2599, 1370,
	1373, 1374, 1187, 3253, 478, 478, 1109, 1108, 1042, 3246,
	1371, 3174, 3175, 1345, 3178, 3178, 2828, 3217, 778, 776,
	1141, 777, 3104, 2961, 1695, 1696, 962, 963, 2807, 3278,
	813, 2040, 2039, 2883, 2819, 1093, 2971, 2972, 2973, 2975,
	2974, 2115, 2950, 923, 1043, 2012, 807, 3315, 809, 477,
	477, 1992, 2014, 473, 473, 475, 475, 921, 920, 2956,
	944, 476, 476, 2060, 2061, 2283, 474, 474, 1101, 451,
	1104, 912, 913, 3036, 2738, 1783, 2663, 1009, 1010, 1011,
	1012, 2515, 2252, 1783, 1783, 1206, 1431, 1205, 1074, 2594,
	1156, 1155, 1428, 929, 925, 926, 1430, 1427, 1429, 1433,
	1434, 732, 921, 920, 1432, 930, 819, 783, 3321, 2013,
	3285, 914, 837, 3053, 1139, 479, 3168, 807, 837, 809,
	1013, 837, 837, 479, 779, 3060, 837, 837, 957, 1138,
	1137, 958, 3052, 2135, 3258, 3044, 3309, 1796, 1784, 1266,
	900, 1162, 2267, 817, 2289, 2290, 2291, 2292, 722, 456,
	723, 1189, 1159, 2562, 2785, 1811, 810, 444, 444, 960,
	1992, 2868, 3027, 2824, 1163, 1164, 444, 444, 1163, 1164,
	1221, 1221, 676, 456, 1111, 3223, 52, 490, 3084, 1194,
	1153, 2463, 2464, 1800, 52, 2603, 2593, 781, 2009, 3033,
	2002, 2907, 481, 1104, 451, 1682, 2512, 1254, 1254, 1219,
	1219, 134, 134, 1223, 134, 134, 1228, 134, 182, 2655,
	1253, 1253, 134, 937, 1999, 2172, 134, 444, 134, 2180,
	134, 931, 2823, 1112, 1113, 1114, 1115, 810, 1117, 134,
	1051, 1052, 1121, 2912, 956, 1372, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1438, 1439, 1440,
	1441, 1442, 1443, 1436, 1437, 2364, 805, 2365, 2366, 1672,
	1340, 1102, 3308, 780, 2662, 2103, 1294, 2027, 1297, 1272,
	3259, 1786, 961, 1305, 3018, 2659, 2660, 3019, 1215, 1216,
	2595, 1116, 3320, 2514, 1120, 1119, 2952, 2957, 2958, 1079,
	2951, 1118, 3013, 1326, 2276, 1081, 936, 959, 2448, 2450,
	1674, 485, 1143, 1147, 1147, 1147, 1311, 1221, 2572, 1221,
	909, 2963, 677, 1798, 2361, 2656, 1135, 1127, 2003, 2523,
	2522, 1140, 1106, 1888, 1887, 1143, 1143, 2255, 1150, 1105,
	3021, 1188, 1886, 1148, 1149, 1099, 1168, 1169, 1515, 1171,
	1172, 1173, 1275, 1885, 1278, 1279, 1516, 1129, 1998, 1514,
	2280, 2281, 689, 2000, 1097, 1098, 1365, 1366, 1367, 1368,
	1369, 3020, 2052, 1179, 1180, 2279, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1167, 1201,
	1203, 1170, 1403, 1404, 1284, 1285, 1246, 690, 1213, 1214,
	1413, 2008, 1660, 1359, 1204, 2006, 721, 2936, 3256, 3257,
	1410, 1411, 1412, 3327, 1462, 1321, 1322, 2001, 1446, 726,
	727, 728, 3261, 828, 833, 834, 1456, 2382, 2383, 3326,
	1341, 1229, 693, 972, 724, 934, 1292, 1471, 2307, 1356,
	2690, 937, 1289, 1244, 1301, 1293, 461, 1554, 1308, 1267,
	1245, 1452, 1453, 1454, 455, 455, 1255, 1239, 1554, 478,
	463, 2153, 1256, 2626, 1468, 2686, 1895, 1469, 1717, 1335,
	1500, 2449, 2753, 1843, 1504, 680, 1842, 1507, 2737, 1946,
	1478, 1479, 1375, 692, 1337, 972, 1496, 695, 694, 1896,
	1897, 1526, 1871, 1221, 1531, 1532, 773, 1534, 1535, 680,
	2171, 972, 456, 1822, 477, 1221, 935, 1325, 473, 732,
	475, 935, 1552, 773, 1334, 1324, 476, 1221, 1331, 677,
	1330, 474, 2657, 1189, 2391, 3317, 1317, 1313, 472, 1312,
	1499, 2665, 974, 975, 976, 973, 3299, 1461, 2308, 1144,
	2614, 2084, 1333, 1332, 1329, 1401, 1402, 1575, 972, 2381,
	1350, 1444, 1445, 1355, 1448, 1581, 1581, 2026, 1189, 3294,
	1189, 1189, 1463, 2083, 456, 456, 1353, 1526, 1526, 2261,
	1579, 1221, 1649, 1650, 1662, 1470, 2308, 1472, 1821, 775,
	1394, 2258, 774, 3014, 2084, 3288, 3287, 3015, 444, 3265,
	1221, 1525, 784, 1945, 810, 2690, 775, 3318, 810, 774,
	974, 975, 976, 973, 1500, 1533, 1715, 3239, 1791, 1500,
	1500, 830, 831, 832, 2158, 456, 1526, 1221, 972, 1704,
	1342, 456, 456, 1708, 1709, 3018, 3196, 2115, 3019, 1712,
	1713, 3295, 1782, 1663, 1719, 1521, 3190, 1522, 1523, 1447,
	1987, 182, 1075, 3141, 182, 182, 2543, 182, 1536, 1537,
	1538, 1876, 1847, 1727, 1773, 1145, 1730, 1791, 1791, 1733,
	1693, 1791, 1735, 1473, 1128, 1600, 2615, 1644, 1645, 1435,
	1406, 3078, 1690, 1691, 3077, 1207, 902, 1555, 1556, 3240,
	3282, 3021, 2768, 1462, 1462, 1761, 1497, 2084, 3241, 2796,
	1462, 1462, 1668, 3073, 1670, 1768, 1676, 1875, 3197, 1564,
	1582, 1566, 1567, 1503, 1688, 1689, 1583, 1143, 3040, 3072,
	1683, 2627, 3020, 2468, 1572, 3040, 1701, 2310, 3071, 1552,
	3070, 1569, 1728, 1221, 1780, 1731, 1732, 1703, 1734, 3039,
	1560, 1561, 1147, 2901, 2174, 1706, 1707, 1549, 1584, 1548,
	2173, 1568, 1530, 3079, 2165, 1559, 1966, 1570, 1571, 1982,
	1585, 1586, 1565, 1838, 1544, 1823, 1574, 2984, 937, 1577,
	1578, 1573, 1772, 1722, 2845, 3040, 1557, 2847, 2392, 2394,
	2395, 2396, 2393, 1183, 1184, 1774, 1186, 2674, 1190, 1191,
	1192, 3040, 2443, 974, 975, 976, 973, 2233, 1808, 1809,
	3040, 1692, 3040, 2225, 1651, 1762, 1648, 1520, 1314, 2186,
	1814, 3040, 1019, 1818, 989, 2902, 1756, 1677, 1234, 1235,
	1236, 1237, 1238, 1756, 1240, 1241, 1242, 1243, 1804, 2169,
	1530, 1248, 1249, 1667, 1431, 1669, 922, 1999, 2002, 1874,
	1428, 902, 897, 1702, 1430, 1427, 1429, 1433, 1434, 2115,
	895, 2162, 1432, 1829, 2160, 1451, 1450, 2631, 3119, 2675,
	1725, 1836, 1698, 1723, 2084, 2155, 2506, 901, 3274, 972,
	2148, 2146, 2144, 478, 2142, 972, 1353, 907, 3262, 1849,
	1742, 972, 1965, 1872, 1854, 1855, 1856, 1853, 2024, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 807, 928, 809,
	3038, 1966, 3120, 1763, 807, 1852, 809, 1848, 530, 1850,
	909, 1936, 456, 456, 456, 1765, 1857, 1771, 477, 1841,
	691, 1133, 473, 2156, 475, 1134, 2161, 456, 456, 456,
	476, 1775, 1832, 1831, 3014, 474, 1830, 2156, 3096, 1963,
	1770, 1790, 2149, 2147, 2143, 1766, 2143, 1767, 3010, 1970,
	1189, 1806, 1807, 1209, 1966, 1871, 1318, 2095, 1967, 972,
	1975, 2954, 1812, 1451, 1450, 1484, 2003, 1803, 1211, 2622,
	2953, 1998, 1992, 1997, 1189, 1995, 2000, 972, 1144, 1212,
	2774, 2134, 2691, 1816, 1805, 2684, 2679, 1394, 2019, 2676,
	807, 972, 809, 1903, 2937, 1438, 1439, 1440, 1441, 1442,
	1443, 1436, 1437, 2203, 972, 972, 2609, 810, 972, 2788,
	1474, 1475, 1476, 1791, 810, 1480, 1481, 1482, 1483, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 2786, 1319, 902,
	2001, 894, 890, 891, 892, 893, 2025, 2208, 2938, 2207,
	2206, 2204, 2413, 696, 2287, 2623, 562, 572, 2088, 2088,
	1662, 2088, 1208, 2789, 2715, 563, 2254, 571, 564, 568,
	567, 565, 566, 2184, 1940, 974, 975, 976, 973, 444,
	444, 2787, 1500, 1477, 1500, 2159, 2718, 909, 2105, 974,
	975, 976, 973, 1221, 456, 1124, 1867, 1869, 1870, 2624,
	2138, 1123, 1500, 1500, 1145, 911, 456, 2193, 2128, 1889,
	810, 909, 451, 2205, 1726, 1409, 1254, 1817, 1662, 1409,
	569, 2123, 2109, 2125, 2470, 1527, 1947, 182, 2966, 1253,
	574, 116, 976, 973, 1042, 1259, 116, 1726, 974, 975,
	976, 973, 1986, 1878, 1879, 2101, 1979, 2102, 2092, 1980,
	1971, 2090, 570, 2094, 997, 998, 990, 991, 992, 993,
	994, 995, 996, 989, 1983, 2106, 2107, 3159, 973, 1147,
	1043, 1972, 1973, 2167, 2004, 2005, 1780, 2010, 2965, 1400,
	1991, 1976, 1977, 1221, 1978, 1221, 462, 1221, 1990, 116,
	2487, 2353, 909, 2352, 1903, 1397, 1399, 1396, 1981, 1398,
	2335, 1185, 974, 975, 976, 973, 2122, 2333, 2129, 3277,
	2945, 2716, 2914, 2915, 2177, 974, 975, 976, 973, 3303,
	2117, 3291, 3247, 1221, 2212, 1227, 2067, 3242, 2218, 1021,
	2909, 2194, 992, 993, 994, 995, 996, 989, 2286, 2219,
	2213, 2214, 1020, 2096, 1221, 3212, 2209, 2210, 2216, 2217,
	3180, 3150, 1219, 1466, 2221, 2211, 1705, 974, 975, 976,
	973, 2222, 3121, 3063, 807, 1259, 809, 1467, 2110, 3056,
	3276, 2997, 2940, 1219, 2939, 2181, 2220, 990, 991, 992,
	993, 994, 995, 996, 989, 1500, 2910, 2766, 2246, 2247,
	1507, 2121, 2223, 808, 2118, 909, 2403, 116, 2401, 1826,
	2878, 1201, 1203, 2790, 2119, 2765, 974, 975, 976, 973,
	2399, 2601, 116, 2388, 116, 2195, 2197, 2197, 2183, 2178,
	974, 975, 976, 973, 2502, 2120, 980, 981, 982, 983,
	984, 985, 986, 978, 2127, 2482, 2191, 2481, 2164, 2386,
	2385, 456, 2170, 2767, 2773, 2244, 1221, 2384, 2376, 2284,
	2168, 2175, 2402, 2370, 2400, 1526, 974, 975, 976, 973,
	2369, 2306, 2368, 2367, 1745, 2130, 2398, 2312, 1744, 2387,
	974, 975, 976, 973, 810, 2190, 2187, 2188, 2259, 1260,
	1743, 1739, 1738, 2321, 1315, 1092, 2418, 2202, 2200, 2587,
	909, 974, 975, 976, 973, 2228, 2229, 3208, 2332, 3163,
	2262, 2234, 3107, 2918, 3093, 909, 909, 909, 1581, 525,
	3082, 909, 527, 2343, 2344, 2345, 909, 526, 2349, 2350,
	3067, 2351, 2030, 1279, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 3062, 1353, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2088, 2053, 2054, 2055, 2056, 2057,
	2248, 2058, 2245, 2296, 3061, 2297, 2303, 3034, 2404, 2998,
	2947, 1284, 1285, 2927, 2913, 2876, 444, 2874, 2854, 2851,
	2849, 1526, 909, 1662, 1662, 1662, 1662, 2408, 2764, 2313,
	2763, 2760, 2323, 2743, 909, 1662, 2685, 1600, 2088, 2338,
	2339, 2263, 2264, 2681, 2342, 2326, 2672, 1292, 2330, 2348,
	3181, 2671, 2330, 1289, 1221, 1820, 1293, 2282, 2610, 2569,
	2337, 2536, 2568, 2305, 2567, 1884, 456, 456, 2516, 8,
	2513, 2480, 7, 2457, 2397, 2311, 974, 975, 976, 973,
	2389, 182, 2379, 2322, 2377, 2373, 182, 2372, 2325, 2371,
	2328, 2251, 622, 621, 1539, 1873, 2331, 1747, 2474, 1741,
	2476, 2334, 2341, 1834, 2320, 2426, 2439, 1462, 3140, 1462,
	1510, 1509, 2497, 1316, 1050, 2316, 2501, 2426, 1500, 1046,
	2535, 1045, 1221, 1500, 898, 2508, 688, 3128, 2378, 974,
	975, 976, 973, 2314, 3124, 2315, 3011, 2905, 2783, 2317,
	2782, 2318, 2319, 2781, 2752, 1530, 974, 975, 976, 973,
	116, 116, 808, 2742, 2730, 2721, 1587, 1588, 2409, 2519,
	2720, 2414, 2471, 2427, 2428, 2429, 2430, 2475, 2709, 1833,
	2438, 2708, 2442, 3111, 2440, 677, 2632, 2541, 1499, 2534,
	2526, 2525, 2540, 2496, 2520, 2465, 2455, 2458, 2260, 2441,
	2257, 2145, 2141, 2451, 2140, 974, 975, 976, 973, 974,
	975, 976, 973, 2529, 1858, 2531, 2469, 1700, 1851, 1846,
	2473, 1844, 909, 1700, 1700, 2494, 909, 2885, 1840, 2510,
	2472, 2500, 1839, 1005, 2590, 165, 2884, 157, 133, 2488,
	2493, 1837, 2505, 2495, 2605, 2490, 1828, 2837, 2412, 456,
	1825, 1824, 2504, 974, 975, 976, 973, 1746, 1495, 909,
	909, 909, 974, 975, 976, 973, 1494, 2517, 1662, 1963,
	1493, 2630, 2518, 974, 975, 976, 973, 2634, 1465, 1464,
	2492, 2527, 2528, 1455, 1233, 1231, 2524, 2499, 1819, 3316,
	2645, 3273, 2648, 3267, 2648, 2648, 2532, 2533, 3254, 909,
	165, 3251, 2613, 3249, 162, 1903, 3149, 1040, 3080, 2530,
	2652, 3069, 3064, 2667, 1274, 2979, 2571, 2964, 2960, 2273,
	1221, 1221, 2862, 2664, 2860, 2563, 2835, 2546, 2547, 2834,
	2566, 2831, 2666, 2548, 2549, 2550, 2551, 2830, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2617, 2618, 2619, 1219,
	1219, 2573, 2668, 2669, 2296, 2570, 2628, 2776, 3138, 2740,
	2606, 2585, 974, 975, 976, 973, 456, 2539, 2584, 162,
	1082, 2590, 2644, 2612, 1283, 1276, 1131, 2625, 2653, 2405,
	2629, 2336, 1526, 1526, 2643, 974, 975, 976, 973, 2300,
	2299, 2638, 2538, 974, 975, 976, 973, 2537, 2298, 1288,
	2649, 2650, 2359, 2360, 2654, 987, 997, 998, 990, 991,
	992, 993, 994, 995, 996, 989, 2374, 2375, 974, 975,
	976, 973, 1291, 974, 975, 976, 973, 1280, 2243, 2212,
	810, 2154, 2104, 2059, 1964, 1395, 162, 810, 2719, 2242,
	2410, 1710, 1519, 1518, 1338, 2651, 1304, 1281, 1076, 2639,
	1073, 988, 987, 997, 998, 990, 991, 992, 993, 994,
	995, 996, 989, 1072, 1071, 974, 975, 976, 973, 2678,
	1845, 1070, 1069, 2683, 2677, 456, 2682, 2687, 2688, 1068,
	2673, 1067, 1066, 2680, 2698, 2633, 1065, 1064, 1063, 2635,
	2636, 1062, 2637, 1061, 1060, 1059, 1230, 2702, 1058, 1057,
	1056, 462, 1055, 1054, 1937, 1938, 1939, 1000, 1053, 1004,
	2739, 2705, 2706, 2707, 1049, 1048, 1047, 2741, 1044, 1955,
	1956, 1957, 2241, 2714, 1037, 1001, 1003, 999, 116, 1002,
	988, 987, 997, 998, 990, 991, 992, 993, 994, 995,
	996, 989, 2240, 1036, 1034, 2757, 909, 1033, 974, 975,
	976, 973, 1974, 1032, 1031, 1030, 2734, 1029, 1028, 2731,
	1027, 1026, 1025, 1024, 2744, 1023, 2732, 1018, 974, 975,
	976, 973, 1017, 2733, 1016, 939, 896, 2780, 2694, 2695,
	2239, 3292, 2749, 3136, 3134, 2832, 2088, 1662, 2793, 1969,
	116, 2238, 1952, 3228, 116, 2689, 2237, 927, 3226, 810,
	3186, 2697, 2288, 909, 2116, 116, 974, 975, 976, 973,
	2701, 1749, 2645, 2746, 938, 116, 909, 974, 975, 976,
	973, 2700, 974, 975, 976, 973, 909, 2435, 2699, 2748,
	2432, 1221, 2436, 2759, 988, 987, 997, 998, 990, 991,
	992, 993, 994, 995, 996, 989, 2437, 1526, 2080, 2081,
	2433, 909, 2431, 2771, 1500, 2434, 3302, 2864, 2163, 2795,
	1219, 2157, 1125, 2846, 2865, 1500, 1546, 1547, 2859, 2829,
	2608, 2861, 2641, 2250, 2642, 2792, 1227, 182, 2791, 1541,
	1542, 1543, 453, 2842, 2799, 2866, 2800, 2152, 1700, 1636,
	909, 2564, 2565, 2856, 2836, 2838, 2841, 2028, 2574, 2839,
	2750, 2751, 2236, 2822, 2844, 1268, 2182, 101, 2754, 2348,
	54, 1878, 1879, 2863, 909, 2867, 2850, 2852, 2853, 1078,
	2848, 53, 1298, 2235, 1943, 2858, 2857, 2232, 974, 975,
	976, 973, 1711, 2355, 2426, 457, 933, 909, 1221, 1221,
	2356, 2357, 2358, 2930, 3103, 2930, 2583, 2855, 2893, 974,
	975, 976, 973, 974, 975, 976, 973, 2576, 2869, 2231,
	2575, 2899, 2879, 458, 2324, 1985, 459, 1219, 2925, 1959,
	2923, 1221, 1550, 2426, 1517, 2946, 3199, 460, 2894, 1451,
	1450, 3066, 2898, 2900, 2670, 974, 975, 976, 973, 456,
	2068, 909, 909, 1090, 1091, 909, 909, 1088, 1089, 2794,
	2925, 1086, 1087, 2064, 1647, 2797, 1182, 2933, 2798, 2982,
	2934, 2230, 1084, 1085, 965, 2981, 1181, 2704, 2976, 2114,
	2921, 1552, 2795, 2989, 2944, 2968, 2969, 2943, 2829, 2977,
	2978, 2993, 2994, 2948, 1769, 1136, 1080, 974, 975, 976,
	973, 2503, 3268, 3172, 3156, 2886, 3154, 3114, 2986, 3092,
	810, 810, 3091, 3089, 2224, 3081, 3024, 2992, 810, 2215,
	2991, 2875, 2822, 2757, 2745, 2728, 2192, 2727, 2712, 2015,
	3017, 2985, 1083, 2711, 2921, 2921, 2467, 2987, 2921, 2921,
	974, 975, 976, 973, 1661, 974, 975, 976, 973, 1554,
	1954, 3046, 974, 975, 976, 973, 3042, 3230, 3229, 3230,
	1827, 3012, 924, 1405, 3022, 3016, 3229, 2962, 2729, 2071,
	2459, 3029, 3030, 680, 3031, 169, 3, 3028, 1151, 62,
	2, 1198, 2097, 2268, 3271, 1694, 1225, 1, 3041, 974,
	975, 976, 973, 1880, 1508, 685, 3049, 3047, 3048, 2444,
	909, 2445, 2703, 2304, 1221, 3057, 2076, 2079, 2080, 2081,
	2077, 116, 2078, 2082, 116, 116, 2447, 116, 1787, 2415,
	2062, 3065, 2941, 2942, 1941, 2604, 681, 682, 683, 684,
	1126, 680, 725, 1219, 3074, 1457, 3075, 988, 987, 997,
	998, 990, 991, 992, 993, 994, 995, 996, 989, 1323,
	2777, 2778, 2779, 808, 3098, 1022, 827, 918, 1320, 917,
	808, 909, 3088, 3086, 915, 1407, 576, 3115, 1752, 116,
	2406, 2380, 2988, 3198, 3236, 3148, 507, 506, 513, 503,
	3201, 1336, 560, 2921, 3083, 3110, 3002, 3152, 510, 511,
	909, 512, 516, 3004, 3106, 498, 3109, 1221, 3125, 2881,
	3143, 3146, 1232, 3117, 1792, 521, 970, 2489, 747, 3122,
	613, 587, 1035, 3126, 1306, 1299, 3133, 3135, 3137, 3139,
	2544, 829, 586, 3147, 3132, 2770, 1219, 2278, 2462, 3142,
	3050, 3155, 826, 3157, 3158, 3153, 3151, 1221, 681, 682,
	683, 684, 748, 680, 2921, 1736, 1005, 3000, 3182, 1269,
	2076, 2079, 2080, 2081, 2077, 3171, 2078, 2082, 2460, 2461,
	1273, 1984, 3058, 3312, 3301, 3283, 1219, 3266, 3177, 3179,
	3205, 3297, 3216, 2921, 3252, 2889, 2887, 2888, 3245, 3191,
	3173, 3192, 3204, 3193, 496, 3194, 1673, 442, 3195, 791,
	2980, 1748, 497, 909, 2903, 2904, 1968, 3165, 3209, 3068,
	3098, 707, 3210, 1951, 708, 701, 2294, 2293, 1376, 979,
	1393, 2560, 2561, 1014, 3219, 3221, 535, 1815, 3235, 3224,
	2275, 2817, 3227, 3225, 2456, 61, 60, 59, 58, 1718,
	3238, 190, 578, 189, 3243, 2916, 909, 3231, 3232, 3233,
	3234, 3145, 3203, 3244, 558, 557, 556, 3248, 555, 3250,
	554, 2075, 2073, 2072, 1657, 1656, 1716, 2346, 2340, 2011,
	2016, 3205, 3264, 1589, 3183, 3129, 3260, 3130, 2959, 2390,
	909, 1540, 909, 3204, 2007, 3263, 3214, 3270, 1606, 3272,
	2362, 1603, 2983, 3275, 1602, 2354, 2955, 2949, 1633, 499,
	501, 500, 3238, 3279, 909, 2755, 3281, 2929, 3286, 505,
	2801, 3290, 2802, 3293, 2808, 1958, 3296, 852, 848, 850,
	851, 509, 849, 2201, 735, 1988, 2578, 1894, 524, 1359,
	1893, 3300, 1891, 3307, 1890, 502, 1100, 3311, 3023, 3310,
	2747, 2611, 1901, 1899, 2696, 3319, 2692, 1760, 1505, 2249,
	1658, 3307, 3324, 3323, 1654, 1953, 3311, 3025, 1545, 165,
	51, 157, 133, 1359, 700, 1359, 722, 1949, 723, 98,
	147, 48, 89, 165, 51, 157, 133, 158, 88, 97,
	145, 47, 174, 173, 150, 176, 175, 1359, 159, 3322,
	172, 158, 2131, 734, 3325, 2132, 171, 1257, 150, 170,
	2932, 674, 159, 773, 705, 38, 3269, 114, 37, 33,
	12, 11, 34, 21, 22, 20, 1327, 717, 19, 714,
	2091, 114, 102, 25, 31, 30, 109, 108, 162, 29,
	107, 3076, 106, 105, 104, 103, 102, 28, 18, 504,
	508, 514, 162, 515, 517, 42, 41, 518, 519, 520,
	40, 9, 522, 523, 96, 94, 27, 95, 1700, 988,
	987, 997, 998, 990, 991, 992, 993, 994, 995, 996,
	989, 92, 93, 90, 73, 72, 71, 86, 1661, 85,
	84, 83, 82, 81, 79, 80, 775, 116, 746, 774,
	70, 69, 68, 67, 3116, 66, 91, 77, 87, 78,
	76, 75, 74, 65, 119, 120, 64, 121, 122, 63,
	131, 129, 130, 3127, 128, 127, 126, 125, 119, 120,
	124, 121, 122, 760, 123, 43, 44, 45, 46, 141,
	140, 736, 142, 144, 146, 143, 138, 136, 139, 137,
	135, 56, 99, 719, 17, 712, 24, 4, 0, 0,
	0, 0, 0, 0, 716, 715, 0, 0, 738, 0,
	0, 0, 0, 0, 0, 0, 0, 2736, 0, 0,
	0, 698, 132, 156, 163, 706, 100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 156, 163, 0,
	100, 0, 0, 0, 155, 149, 148, 0, 0, 0,
	0, 57, 0, 0, 0, 0, 0, 0, 155, 149,
	148, 0, 0, 3211, 721, 57, 0, 0, 0, 711,
	0, 759, 758, 710, 507, 506, 513, 503, 0, 697,
	0, 0, 0, 704, 0, 0, 510, 511, 757, 512,
	516, 0, 0, 498, 0, 0, 0, 0, 0, 733,
	702, 0, 0, 521, 0, 0, 0, 0, 0, 0,
	737, 768, 151, 152, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 699, 0, 0, 151, 152, 153, 0,
	0, 0, 0, 0, 764, 0, 0, 720, 160, 0,
	0, 0, 0, 0, 0, 0, 525, 0, 0, 527,
	0, 0, 160, 0, 526, 0, 0, 0, 110, 0,
	0, 0, 154, 703, 111, 0, 0, 0, 0, 0,
	765, 769, 110, 0, 0, 116, 154, 0, 111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 752, 756, 772, 0, 2542, 0, 753, 750, 749,
	0, 755, 740, 741, 739, 742, 743, 744, 745, 0,
	770, 0, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 766, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 112, 0, 2189, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 50, 988, 987,
	997, 998, 990, 991, 992, 993, 994, 995, 996, 989,
	762, 988, 987, 997, 998, 990, 991, 992, 993, 994,
	995, 996, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 1661, 1661, 1661, 1661, 499, 501, 500,
	0, 0, 0, 0, 0, 1661, 52, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	0, 0, 0, 0, 0, 0, 524, 0, 134, 0,
	0, 0, 0, 502, 1813, 0, 0, 493, 0, 0,
	0, 2967, 134, 0, 0, 0, 0, 0, 761, 0,
	0, 116, 0, 0, 0, 0, 116, 0, 988, 987,
	997, 998, 990, 991, 992, 993, 994, 995, 996, 989,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 113, 39,
	0, 0, 0, 0, 0, 49, 5, 0, 0, 117,
	118, 0, 113, 39, 0, 0, 0, 0, 0, 49,
	0, 0, 0, 117, 118, 988, 987, 997, 998, 990,
	991, 992, 993, 994, 995, 996, 989, 0, 0, 0,
	0, 0, 0, 0, 0, 594, 0, 504, 508, 514,
	0, 515, 517, 0, 335, 518, 519, 520, 0, 0,
	522, 523, 0, 0, 0, 0, 0, 549, 0, 0,
	0, 279, 0, 0, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 436, 0, 437,
	0, 0, 585, 0, 0, 364, 319, 0, 0, 0,
	0, 645, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 542, 0, 0, 575, 622, 621, 562,
	572, 0, 0, 256, 188, 438, 0, 439, 563, 0,
	571, 564, 568, 567, 565, 566, 0, 637, 1661, 0,
	0, 0, 0, 0, 533, 546, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 544, 0, 0, 0, 0, 595, 0, 545,
	0, 0, 590, 569, 573, 0, 0, 0, 0, 247,
	369, 385, 257, 360, 398, 262, 367, 252, 334, 357,
	0, 0, 249, 383, 366, 316, 299, 300, 248, 0,
	352, 277, 291, 274, 332, 570, 593, 597, 273, 659,
	591, 393, 251, 0, 392, 331, 379, 384, 317, 311,
	250, 381, 315, 310, 303, 281, 660, 295, 343, 309,
	344, 296, 321, 320, 322, 0, 0, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 395, 0,
	0, 643, 0, 0, 0, 368, 0, 0, 304, 0,
	0, 0, 592, 0, 355, 337, 656, 534, 0, 353,
	307, 380, 345, 386, 370, 394, 349, 346, 242, 371,
	276, 318, 253, 255, 271, 278, 280, 282, 283, 327,
	328, 340, 359, 372, 373, 374, 275, 263, 354, 264,
	293, 265, 243, 268, 267, 269, 361, 270, 245, 341,
	378, 0, 288, 350, 314, 246, 313, 342, 377, 376,
	254, 402, 408, 409, 0, 0, 414, 0, 0, 0,
	422, 427, 428, 429, 431, 432, 433, 434, 0, 0,
	0, 0, 416, 0, 0, 0, 1459, 1458, 1460, 407,
	286, 239, 240, 448, 641, 333, 0, 0, 0, 0,
	655, 636, 638, 639, 642, 646, 647, 648, 649, 650,
	652, 654, 658, 447, 0, 0, 0, 0, 0, 446,
	339, 0, 358, 0, 0, 0, 116, 116, 0, 0,
	0, 0, 0, 0, 116, 365, 388, 400, 417, 420,
	0, 0, 0, 0, 244, 419, 0, 0, 0, 0,
	0, 0, 0, 0, 657, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 596, 0, 0, 323, 324, 325,
	326, 644, 0, 261, 418, 348, 0, 1661, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 412, 413, 285, 292, 430, 294,
	260, 338, 287, 397, 301, 0, 423, 0, 424, 0,
	0, 0, 0, 330, 297, 298, 362, 302, 308, 351,
	396, 336, 356, 258, 387, 363, 312, 0, 0, 666,
	640, 665, 667, 668, 664, 669, 670, 651, 553, 0,
	600, 662, 661, 663, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 116, 237, 0,
	241, 0, 306, 0, 347, 284, 0, 0, 629, 606,
	607, 608, 551, 609, 603, 604, 605, 630, 598, 626,
	627, 577, 601, 610, 625, 611, 628, 631, 632, 671,
	672, 617, 673, 614, 633, 624, 623, 612, 599, 634,
	635, 584, 579, 615, 616, 602, 618, 619, 620, 552,
	580, 581, 582, 583, 0, 0, 594, 403, 404, 405,
	426, 389, 0, 445, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 440, 441, 549, 0,
	0, 0, 279, 1501, 0, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 436, 0,
	437, 0, 0, 585, 0, 0, 364, 319, 0, 0,
	0, 0, 645, 653, 0, 0, 0, 0, 0, 0,
	0, 1685, 0, 0, 542, 0, 0, 575, 622, 621,
	562, 572, 0, 0, 256, 188, 438, 0, 439, 563,
	0, 571, 564, 568, 567, 565, 566, 0, 637, 0,
	0, 0, 0, 0, 0, 533, 546, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 595, 0,
	545, 0, 0, 1686, 569, 573, 0, 0, 0, 0,
	247, 369, 385, 257, 360, 398, 262, 367, 252, 334,
	357, 0, 0, 249, 383, 366, 316, 299, 300, 248,
	0, 352, 277, 291, 274, 332, 570, 593, 597, 273,
	659, 591, 393, 251, 0, 392, 331, 379, 384, 317,
	311, 250, 381, 315, 310, 303, 281, 660, 295, 343,
	309, 344, 296, 321, 320, 322, 0, 0, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 588, 0, 0, 0, 395,
	0, 0, 643, 0, 0, 0, 368, 0, 0, 304,
	0, 0, 0, 592, 0, 355, 337, 656, 534, 0,
	353, 307, 380, 345, 386, 370, 394, 349, 346, 242,
	371, 276, 318, 253, 255, 271, 278, 280, 282, 283,
	327, 328, 340, 359, 372, 373, 374, 275, 263, 354,
	264, 293, 265, 243, 268, 267, 269, 361, 270, 245,
	341, 378, 0, 288, 350, 314, 246, 313, 342, 377,
	376, 254, 402, 408, 409, 0, 0, 414, 0, 0,
	0, 422, 427, 428, 429, 431, 432, 433, 434, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	407, 286, 239, 240, 448, 641, 333, 0, 0, 0,
	0, 655, 636, 638, 639, 642, 646, 647, 648, 649,
	650, 652, 654, 658, 447, 0, 0, 0, 0, 0,
	446, 339, 0, 358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 365, 388, 400, 417,
	420, 0, 0, 0, 0, 244, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 657, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 596, 0, 0, 323, 324,
	325, 326, 644, 0, 261, 418, 348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 412, 413, 285, 292, 430,
	294, 260, 338, 287, 397, 301, 0, 423, 0, 424,
	0, 0, 0, 0, 330, 297, 298, 362, 302, 308,
	351, 396, 336, 356, 258, 387, 363, 312, 0, 0,
	666, 640, 665, 667, 668, 664, 669, 670, 651, 553,
	0, 600, 662, 661, 663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 237,
	0, 241, 0, 306, 0, 347, 284, 0, 0, 629,
	606, 607, 608, 551, 609, 603, 604, 605, 630, 598,
	626, 627, 577, 601, 610, 625, 611, 628, 631, 632,
	671, 672, 617, 673, 614, 633, 624, 623, 612, 599,
	634, 635, 584, 579, 615, 616, 602, 618, 619, 620,
	552, 580, 581, 582, 583, 0, 165, 594, 403, 404,
	405, 426, 389, 0, 445, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 449, 440, 441, 549,
	0, 0, 0, 279, 0, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 436,
	0, 437, 0, 0, 1008, 0, 0, 364, 319, 0,
	0, 0, 0, 645, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 575, 622,
	621, 562, 572, 0, 0, 256, 188, 438, 0, 439,
	563, 0, 571, 564, 568, 567, 565, 566, 0, 637,
	0, 0, 0, 0, 0, 0, 533, 546, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 544, 0, 0, 0, 0, 595,
	0, 545, 0, 0, 590, 569, 573, 0, 0, 0,
	0, 247, 369, 385, 257, 360, 398, 262, 367, 252,
	334, 357, 0, 0, 249, 383, 366, 316, 299, 300,
	248, 0, 352, 277, 291, 274, 332, 570, 593, 597,
	273, 659, 591, 393, 251, 0, 392, 331, 379, 384,
	317, 311, 250, 381, 315, 310, 303, 281, 660, 295,
	343, 309, 344, 296, 321, 320, 322, 0, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	395, 0, 0, 643, 0, 0, 0, 368, 0, 0,
	304, 0, 0, 0, 592, 0, 355, 337, 656, 534,
	0, 353, 307, 380, 345, 386, 370, 394, 349, 346,
	242, 371, 276, 318, 253, 255, 271, 278, 280, 282,
	283, 327, 328, 340, 359, 372, 373, 374, 275, 263,
	354, 264, 293, 265, 243, 268, 267, 269, 361, 270,
	245, 341, 378, 0, 288, 350, 314, 246, 313, 342,
	377, 376, 254, 402, 408, 409, 0, 0, 414, 0,
	0, 0, 422, 427, 428, 429, 431, 432, 433, 434,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 407, 286, 239, 240, 448, 641, 333, 0, 0,
	0, 0, 655, 636, 638, 639, 642, 646, 647, 648,
	649, 650, 652, 654, 658, 447, 0, 0, 0, 0,
	0, 446, 339, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 388, 400,
	417, 420, 0, 0, 0, 0, 244, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 596, 0, 0, 323,
	324, 325, 326, 644, 0, 261, 418, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 413, 285, 292,
	430, 294, 260, 338, 287, 397, 301, 0, 423, 0,
	424, 0, 0, 0, 0, 330, 297, 298, 362, 302,
	308, 351, 396, 336, 356, 258, 387, 363, 312, 0,
	0, 666, 640, 665, 667, 668, 664, 669, 670, 651,
	553, 0, 600, 662, 661, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	237, 0, 241, 0, 306, 134, 347, 284, 0, 0,
	629, 606, 607, 608, 551, 609, 603, 604, 605, 630,
	598, 626, 627, 577, 601, 610, 625, 611, 628, 631,
	632, 671, 672, 617, 673, 614, 633, 624, 623, 612,
	599, 634, 635, 584, 579, 615, 616, 602, 618, 619,
	620, 552, 580, 581, 582, 583, 0, 0, 594, 403,
	404, 405, 426, 389, 0, 445, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 440, 441,
	549, 0, 0, 0, 279, 3280, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 585, 0, 0, 364, 319,
	0, 0, 0, 0, 645, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 575,
	622, 621, 562, 572, 0, 0, 256, 188, 438, 0,
	439, 563, 0, 571, 564, 568, 567, 565, 566, 0,
	637, 0, 0, 0, 0, 0, 0, 533, 546, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	595, 0, 545, 0, 0, 590, 569, 573, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 570, 593,
	597, 273, 659, 591, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 660,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 395, 0, 0, 643, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 592, 0, 355, 337, 656,
	534, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 641, 333, 0,
	0, 0, 0, 655, 636, 638, 639, 642, 646, 647,
	648, 649, 650, 652, 654, 658, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 596, 0, 0,
	323, 324, 325, 326, 644, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 666, 640, 665, 667, 668, 664, 669, 670,
	651, 553, 0, 600, 662, 661, 663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 629, 606, 607, 608, 551, 609, 603, 604, 605,
	630, 598, 626, 627, 577, 601, 610, 625, 611, 628,
	631, 632, 671, 672, 617, 673, 614, 633, 624, 623,
	612, 599, 634, 635, 584, 579, 615, 616, 602, 618,
	619, 620, 552, 580, 581, 582, 583, 0, 0, 594,
	403, 404, 405, 426, 389, 0, 445, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 449, 440,
	441, 549, 0, 0, 0, 279, 1501, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 436, 0, 437, 0, 0, 585, 0, 0, 364,
	319, 0, 0, 0, 0, 645, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	575, 622, 621, 562, 572, 0, 0, 256, 188, 438,
	0, 439, 563, 0, 571, 564, 568, 567, 565, 566,
	0, 637, 0, 0, 0, 0, 0, 0, 533, 546,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 595, 0, 545, 0, 0, 590, 569, 573, 0,
	0, 0, 0, 247, 369, 385, 257, 360, 398, 262,
	367, 252, 334, 357, 0, 0, 249, 383, 366, 316,
	299, 300, 248, 0, 352, 277, 291, 274, 332, 570,
	593, 597, 273, 659, 591, 393, 251, 0, 392, 331,
	379, 384, 317, 311, 250, 381, 315, 310, 303, 281,
	660, 295, 343, 309, 344, 296, 321, 320, 322, 0,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 395, 0, 0, 643, 0, 0, 0, 368,
	0, 0, 304, 0, 0, 0, 592, 0, 355, 337,
	656, 534, 0, 353, 307, 380, 345, 386, 370, 394,
	349, 346, 242, 371, 276, 318, 253, 255, 271, 278,
	280, 282, 283, 327, 328, 340, 359, 372, 373, 374,
	275, 263, 354, 264, 293, 265, 243, 268, 267, 269,
	361, 270, 245, 341, 378, 0, 288, 350, 314, 246,
	313, 342, 377, 376, 254, 402, 408, 409, 0, 0,
	414, 0, 0, 0, 422, 427, 428, 429, 431, 432,
	433, 434, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 407, 286, 239, 240, 448, 641, 333,
	0, 0, 0, 0, 655, 636, 638, 639, 642, 646,
	647, 648, 649, 650, 652, 654, 658, 447, 0, 0,
	0, 0, 0, 446, 339, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	388, 400, 417, 420, 0, 0, 0, 0, 244, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 596, 0,
	0, 323, 324, 325, 326, 644, 0, 261, 418, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 413,
	285, 292, 430, 294, 260, 338, 287, 397, 301, 0,
	423, 0, 424, 0, 0, 0, 0, 330, 297, 298,
	362, 302, 308, 351, 396, 336, 356, 258, 387, 363,
	312, 0, 0, 666, 640, 665, 667, 668, 664, 669,
	670, 651, 553, 0, 600, 662, 661, 663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 237, 0, 241, 0, 306, 0, 347, 284,
	0, 0, 629, 606, 607, 608, 551, 609, 603, 604,
	605, 630, 598, 626, 627, 577, 601, 610, 625, 611,
	628, 631, 632, 671, 672, 617, 673, 614, 633, 624,
	623, 612, 599, 634, 635, 584, 579, 615, 616, 602,
	618, 619, 620, 552, 580, 581, 582, 583, 0, 0,
	594, 403, 404, 405, 426, 389, 0, 445, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	440, 441, 549, 0, 0, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 585, 0, 0,
	364, 319, 0, 0, 0, 0, 645, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 0,
	0, 575, 622, 621, 562, 572, 0, 0, 256, 188,
	438, 0, 439, 563, 0, 571, 564, 568, 567, 565,
	566, 0, 637, 0, 0, 0, 0, 0, 0, 533,
	546, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 544, 1252, 0,
	0, 0, 595, 0, 545, 0, 0, 590, 569, 573,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	570, 593, 597, 273, 659, 591, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 660, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 395, 0, 0, 643, 0, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 592, 0, 355,
	337, 656, 534, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 641,
	333, 0, 0, 0, 0, 655, 636, 638, 639, 642,
	646, 647, 648, 649, 650, 652, 654, 658, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 596,
	0, 0, 323, 324, 325, 326, 644, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 666, 640, 665, 667, 668, 664,
	669, 670, 651, 553, 0, 600, 662, 661, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 629, 606, 607, 608, 551, 609, 603,
	604, 605, 630, 598, 626, 627, 577, 601, 610, 625,
	611, 628, 631, 632, 671, 672, 617, 673, 614, 633,
	624, 623, 612, 599, 634, 635, 584, 579, 615, 616,
	602, 618, 619, 620, 552, 580, 581, 582, 583, 0,
	0, 0, 403, 404, 405, 426, 389, 594, 445, 0,
	1835, 0, 0, 0, 0, 0, 335, 0, 0, 0,
	449, 440, 441, 0, 0, 0, 0, 0, 0, 549,
	0, 0, 0, 279, 0, 0, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 0, 436,
	0, 437, 0, 0, 585, 0, 0, 364, 319, 0,
	0, 0, 0, 645, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 542, 0, 0, 575, 622,
	621, 562, 572, 0, 0, 256, 188, 438, 0, 439,
	563, 0, 571, 564, 568, 567, 565, 566, 0, 637,
	0, 0, 0, 0, 0, 0, 533, 546, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 543, 544, 0, 0, 0, 0, 595,
	0, 545, 0, 0, 590, 569, 573, 0, 0, 0,
	0, 247, 369, 385, 257, 360, 398, 262, 367, 252,
	334, 357, 0, 0, 249, 383, 366, 316, 299, 300,
	248, 0, 352, 277, 291, 274, 332, 570, 593, 597,
	273, 659, 591, 393, 251, 0, 392, 331, 379, 384,
	317, 311, 250, 381, 315, 310, 303, 281, 660, 295,
	343, 309, 344, 296, 321, 320, 322, 0, 0, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 588, 0, 0, 0,
	395, 0, 0, 643, 0, 0, 0, 368, 0, 0,
	304, 0, 0, 0, 592, 0, 355, 337, 656, 534,
	0, 353, 307, 380, 345, 386, 370, 394, 349, 346,
	242, 371, 276, 318, 253, 255, 271, 278, 280, 282,
	283, 327, 328, 340, 359, 372, 373, 374, 275, 263,
	354, 264, 293, 265, 243, 268, 267, 269, 361, 270,
	245, 341, 378, 0, 288, 350, 314, 246, 313, 342,
	377, 376, 254, 402, 408, 409, 0, 0, 414, 0,
	0, 0, 422, 427, 428, 429, 431, 432, 433, 434,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 407, 286, 239, 240, 448, 641, 333, 0, 0,
	0, 0, 655, 636, 638, 639, 642, 646, 647, 648,
	649, 650, 652, 654, 658, 447, 0, 0, 0, 0,
	0, 446, 339, 0, 358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 365, 388, 400,
	417, 420, 0, 0, 0, 0, 244, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 657, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 596, 0, 0, 323,
	324, 325, 326, 644, 0, 261, 418, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 412, 413, 285, 292,
	430, 294, 260, 338, 287, 397, 301, 0, 423, 0,
	424, 0, 0, 0, 0, 330, 297, 298, 362, 302,
	308, 351, 396, 336, 356, 258, 387, 363, 312, 0,
	0, 666, 640, 665, 667, 668, 664, 669, 670, 651,
	553, 0, 600, 662, 661, 663, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	237, 0, 241, 0, 306, 0, 347, 284, 0, 0,
	629, 606, 607, 608, 551, 609, 603, 604, 605, 630,
	598, 626, 627, 577, 601, 610, 625, 611, 628, 631,
	632, 671, 672, 617, 673, 614, 633, 624, 623, 612,
	599, 634, 635, 584, 579, 615, 616, 602, 618, 619,
	620, 552, 580, 581, 582, 583, 0, 0, 594, 403,
	404, 405, 426, 389, 0, 445, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 449, 440, 441,
	549, 0, 0, 0, 279, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	436, 0, 437, 0, 0, 585, 0, 0, 364, 319,
	0, 0, 0, 0, 645, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 542, 0, 0, 575,
	622, 621, 562, 572, 0, 0, 256, 188, 438, 0,
	439, 563, 0, 571, 564, 568, 567, 565, 566, 0,
	637, 0, 0, 0, 0, 0, 0, 533, 546, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	595, 0, 545, 0, 0, 590, 569, 573, 0, 0,
	0, 0, 247, 369, 385, 257, 360, 398, 262, 367,
	252, 334, 357, 0, 0, 249, 383, 366, 316, 299,
	300, 248, 0, 352, 277, 291, 274, 332, 570, 593,
	597, 273, 659, 591, 393, 251, 0, 392, 331, 379,
	384, 317, 311, 250, 381, 315, 310, 303, 281, 660,
	295, 343, 309, 344, 296, 321, 320, 322, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 588, 0, 0,
	0, 395, 0, 0, 643, 0, 0, 0, 368, 0,
	0, 304, 0, 0, 0, 592, 0, 355, 337, 656,
	534, 0, 353, 307, 380, 345, 386, 370, 394, 349,
	346, 242, 371, 276, 318, 253, 255, 271, 278, 280,
	282, 283, 327, 328, 340, 359, 372, 373, 374, 275,
	263, 354, 264, 293, 265, 243, 268, 267, 269, 361,
	270, 245, 341, 378, 0, 288, 350, 314, 246, 313,
	342, 377, 376, 254, 402, 408, 409, 0, 0, 414,
	0, 0, 0, 422, 427, 428, 429, 431, 432, 433,
	434, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 407, 286, 239, 240, 448, 641, 333, 0,
	0, 0, 0, 655, 636, 638, 639, 642, 646, 647,
	648, 649, 650, 652, 654, 658, 447, 0, 0, 0,
	0, 0, 446, 339, 0, 358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 365, 388,
	400, 417, 420, 0, 0, 0, 0, 244, 419, 0,
	0, 0, 0, 0, 0, 0, 0, 657, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 596, 0, 0,
	323, 324, 325, 326, 644, 0, 261, 418, 348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 285,
	292, 430, 294, 260, 338, 287, 397, 301, 0, 423,
	0, 424, 0, 0, 0, 0, 330, 297, 298, 362,
	302, 308, 351, 396, 336, 356, 258, 387, 363, 312,
	0, 0, 666, 640, 665, 667, 668, 664, 669, 670,
	651, 553, 0, 600, 662, 661, 663, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 237, 0, 241, 0, 306, 0, 347, 284, 0,
	0, 629, 606, 607, 608, 551, 609, 603, 604, 605,
	630, 598, 626, 627, 577, 601, 610, 625, 611, 628,
	631, 632, 671, 672, 617, 673, 614, 633, 624, 623,
	612, 599, 634, 635, 584, 579, 615, 616, 602, 618,
	619, 620, 552, 580, 581, 582, 583, 0, 0, 594,
	403, 404, 405, 426, 389, 0, 445, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 1377, 449, 440,
	441, 549, 0, 0, 0, 279, 0, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 436, 0, 437, 0, 0, 585, 0, 0, 364,
	319, 0, 0, 0, 0, 645, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 542, 0, 0,
	575, 622, 621, 562, 572, 0, 0, 256, 188, 438,
	0, 439, 563, 0, 571, 564, 568, 567, 565, 566,
	0, 637, 0, 0, 0, 0, 0, 0, 0, 546,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 595, 0, 545, 0, 0, 590, 569, 573, 0,
	0, 0, 0, 247, 369, 385, 257, 360, 398, 262,
	367, 252, 334, 357, 0, 0, 249, 383, 366, 316,
	299, 300, 248, 0, 352, 277, 291, 274, 332, 570,
	593, 597, 273, 659, 591, 393, 251, 0, 392, 331,
	379, 384, 317, 311, 250, 381, 315, 310, 303, 281,
	660, 295, 343, 309, 344, 296, 321, 320, 322, 0,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 588, 0,
	0, 0, 395, 0, 0, 643, 0, 0, 0, 368,
	0, 0, 304, 0, 0, 0, 592, 0, 355, 337,
	656, 0, 0, 353, 307, 380, 345, 386, 370, 394,
	349, 346, 242, 371, 276, 318, 253, 255, 271, 278,
	280, 282, 283, 327, 328, 340, 359, 372, 373, 374,
	275, 263, 354, 264, 293, 265, 243, 268, 267, 269,
	361, 270, 245, 341, 378, 0, 288, 350, 314, 246,
	313, 342, 377, 376, 254, 402, 1378, 1379, 0, 0,
	414, 0, 0, 0, 422, 427, 428, 429, 431, 432,
	433, 434, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 407, 286, 239, 240, 448, 641, 333,
	0, 0, 0, 0, 655, 636, 638, 639, 642, 646,
	647, 648, 649, 650, 652, 654, 658, 447, 0, 0,
	0, 0, 0, 446, 339, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	388, 400, 417, 420, 0, 0, 0, 0, 244, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 596, 0,
	0, 323, 324, 325, 326, 644, 0, 261, 418, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 413,
	285, 292, 430, 294, 260, 338, 287, 397, 301, 0,
	423, 0, 424, 0, 0, 0, 0, 330, 297, 298,
	362, 302, 308, 351, 396, 336, 356, 258, 387, 363,
	312, 0, 0, 666, 640, 665, 667, 668, 664, 669,
	670, 651, 553, 0, 600, 662, 661, 663, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 237, 0, 241, 0, 306, 0, 347, 284,
	0, 0, 629, 606, 607, 608, 551, 609, 603, 604,
	605, 630, 598, 626, 627, 577, 601, 610, 625, 611,
	628, 631, 632, 671, 672, 617, 673, 614, 633, 624,
	623, 612, 599, 634, 635, 584, 579, 615, 616, 602,
	618, 619, 620, 552, 580, 581, 582, 583, 0, 0,
	594, 403, 404, 405, 426, 389, 0, 445, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	440, 441, 549, 0, 0, 0, 279, 0, 0, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 436, 0, 437, 0, 0, 585, 0, 0,
	364, 319, 0, 0, 0, 0, 645, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 575, 622, 621, 562, 572, 0, 0, 256, 188,
	438, 0, 439, 563, 0, 571, 564, 568, 567, 565,
	566, 0, 637, 0, 0, 0, 0, 0, 0, 533,
	546, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 595, 0, 545, 0, 0, 590, 569, 573,
	0, 0, 0, 0, 247, 369, 385, 257, 360, 398,
	262, 367, 252, 334, 357, 0, 0, 249, 383, 366,
	316, 299, 300, 248, 0, 352, 277, 291, 274, 332,
	570, 593, 597, 273, 659, 591, 393, 251, 0, 392,
	331, 379, 384, 317, 311, 250, 381, 315, 310, 303,
	281, 660, 295, 343, 309, 344, 296, 321, 320, 322,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 588,
	0, 0, 0, 395, 0, 0, 643, 0, 0, 0,
	368, 0, 0, 304, 0, 0, 0, 592, 0, 355,
	337, 656, 534, 0, 353, 307, 380, 345, 386, 370,
	394, 349, 346, 242, 371, 276, 318, 253, 255, 271,
	278, 280, 282, 283, 327, 328, 340, 359, 372, 373,
	374, 275, 263, 354, 264, 293, 265, 243, 268, 267,
	269, 361, 270, 245, 341, 378, 0, 288, 350, 314,
	246, 313, 342, 377, 376, 254, 402, 408, 409, 0,
	0, 414, 0, 0, 0, 422, 427, 428, 429, 431,
	432, 433, 434, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 407, 286, 239, 240, 448, 641,
	333, 0, 0, 0, 0, 655, 636, 638, 639, 642,
	646, 647, 648, 649, 650, 652, 654, 658, 447, 0,
	0, 0, 0, 0, 446, 339, 0, 358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 388, 400, 417, 420, 0, 0, 0, 0, 244,
	419, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 596,
	0, 0, 323, 324, 325, 326, 644, 0, 261, 418,
	348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 412,
	413, 285, 292, 430, 294, 260, 338, 287, 397, 301,
	0, 423, 0, 424, 0, 0, 0, 0, 330, 297,
	298, 362, 302, 308, 351, 396, 336, 356, 258, 387,
	363, 312, 0, 0, 666, 640, 665, 667, 668, 664,
	669, 670, 651, 553, 0, 600, 662, 661, 663, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 237, 0, 241, 0, 306, 0, 347,
	284, 0, 0, 629, 606, 607, 608, 551, 609, 603,
	604, 605, 630, 598, 626, 627, 577, 601, 610, 625,
	611, 628, 631, 632, 671, 672, 617, 673, 614, 633,
	624, 623, 612, 599, 634, 635, 584, 579, 615, 616,
	602, 618, 619, 620, 552, 580, 581, 582, 583, 0,
	0, 594, 403, 404, 405, 426, 389, 0, 445, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	449, 440, 441, 549, 0, 0, 0, 279, 0, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 585, 0,
	0, 364, 319, 0, 0, 0, 0, 645, 653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 542,
	0, 0, 575, 622, 621, 562, 572, 0, 0, 256,
	188, 438, 0, 439, 563, 0, 571, 564, 568, 567,
	565, 566, 0, 637, 0, 0, 0, 0, 0, 0,
	0, 546, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 595, 0, 545, 0, 0, 590, 569,
	573, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 570, 593, 597, 273, 659, 591, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 660, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 0, 0, 395, 0, 0, 643, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 592, 0,
	355, 337, 656, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	641, 333, 0, 0, 0, 0, 655, 636, 638, 639,
	642, 646, 647, 648, 649, 650, 652, 654, 658, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	657, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	596, 0, 0, 323, 324, 325, 326, 644, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 666, 640, 665, 667, 668,
	664, 669, 670, 651, 553, 0, 600, 662, 661, 663,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 629, 606, 607, 608, 551, 609,
	603, 604, 605, 630, 598, 626, 627, 577, 601, 610,
	625, 611, 628, 631, 632, 671, 672, 617, 673, 614,
	633, 624, 623, 612, 599, 634, 635, 584, 579, 615,
	616, 602, 618, 619, 620, 552, 580, 581, 582, 583,
	0, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	165, 51, 157, 133, 0, 0, 0, 0, 0, 0,
	335, 449, 440, 441, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 150, 0, 279, 0, 159,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 114, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 0, 162,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 132, 156, 163, 0, 100, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 180, 0, 0,
	0, 368, 0, 0, 304, 155, 149, 148, 411, 0,
	355, 337, 57, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 151, 152, 153, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 390,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 183, 0, 0, 435, 191,
	0, 0, 0, 154, 0, 192, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 134,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 403, 404, 405, 426, 389, 335, 193,
	39, 181, 184, 186, 185, 0, 49, 5, 0, 0,
	117, 194, 440, 441, 0, 279, 0, 0, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 436, 0, 437, 0, 0, 0, 0, 0, 364,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1041, 0, 0,
	187, 0, 0, 562, 572, 0, 0, 256, 188, 438,
	0, 439, 563, 0, 571, 564, 568, 567, 565, 566,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 0, 247, 369, 385, 257, 360, 398, 262,
	367, 252, 334, 357, 0, 0, 249, 383, 366, 316,
	299, 300, 248, 0, 352, 277, 291, 274, 332, 570,
	382, 410, 273, 401, 0, 393, 251, 0, 392, 331,
	379, 384, 317, 311, 250, 381, 315, 310, 303, 281,
	425, 295, 343, 309, 344, 296, 321, 320, 322, 0,
	0, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 395, 0, 0, 0, 0, 0, 0, 368,
	0, 0, 304, 0, 0, 0, 411, 0, 355, 337,
	0, 0, 0, 353, 307, 380, 345, 386, 370, 394,
	349, 346, 242, 371, 276, 318, 253, 255, 271, 278,
	280, 282, 283, 327, 328, 340, 359, 372, 373, 374,
	275, 263, 354, 264, 293, 265, 243, 268, 267, 269,
	361, 270, 245, 341, 378, 0, 288, 350, 314, 246,
	313, 342, 377, 376, 254, 402, 408, 409, 0, 0,
	414, 0, 0, 0, 422, 427, 428, 429, 431, 432,
	433, 434, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 407, 286, 239, 240, 448, 272, 333,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 329, 406, 0, 0, 0, 435, 447, 0, 0,
	0, 0, 0, 446, 339, 0, 358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 365,
	388, 400, 417, 420, 0, 0, 0, 0, 244, 419,
	0, 0, 0, 0, 0, 0, 0, 0, 391, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 415, 0,
	0, 323, 324, 325, 326, 290, 0, 261, 418, 348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 412, 413,
	285, 292, 430, 294, 260, 338, 287, 397, 301, 0,
	423, 0, 424, 0, 0, 0, 0, 330, 297, 298,
	362, 302, 308, 351, 396, 336, 356, 258, 387, 363,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 237, 0, 241, 0, 306, 0, 347, 284,
	0, 0, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 0, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	0, 0, 0, 238, 233, 234, 235, 236, 0, 0,
	0, 403, 404, 405, 426, 389, 0, 445, 0, 0,
	0, 0, 165, 51, 157, 133, 0, 0, 0, 449,
	440, 441, 335, 466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	0, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 0, 382, 410, 273, 401, 0, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 425, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	0, 0, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	411, 0, 355, 337, 0, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 0, 0, 0,
	435, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 415, 0, 0, 323, 324, 325, 326, 467,
	469, 261, 418, 348, 479, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 134, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 335, 0, 0, 403, 404, 405, 426, 389,
	868, 445, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 305, 449, 440, 441, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	0, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	856, 0, 0, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	1923, 1925, 1926, 1927, 1928, 1929, 1930, 0, 1935, 1931,
	1932, 1933, 1934, 0, 1918, 1919, 1920, 1921, 854, 1904,
	1924, 0, 1905, 331, 1906, 1907, 1908, 1909, 1910, 1911,
	1912, 1913, 1914, 1915, 1916, 1922, 343, 309, 344, 296,
	321, 320, 322, 879, 881, 883, 885, 888, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	1917, 0, 355, 337, 0, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 0, 0, 0,
	435, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 415, 0, 0, 323, 324, 325, 326, 290,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 878,
	306, 0, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 335, 0, 0, 403, 404, 405, 426, 389,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 305, 449, 440, 441, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	0, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 1999, 2002, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 0, 382, 410, 273, 401, 0, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 425, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 395, 0, 0, 0,
	1998, 0, 1997, 368, 1995, 2000, 304, 0, 0, 0,
	411, 0, 355, 337, 0, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 2001,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 0, 0, 0,
	435, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 415, 0, 0, 323, 324, 325, 326, 290,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 335, 0, 0, 403, 404, 405, 426, 389,
	0, 445, 0, 0, 1720, 0, 0, 0, 0, 279,
	0, 0, 305, 449, 440, 441, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	0, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 1721, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 974, 975,
	976, 973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 0, 382, 410, 273, 401, 0, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 425, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	411, 0, 355, 337, 0, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 0, 0, 0,
	435, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 415, 0, 0, 323, 324, 325, 326, 290,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 335, 0, 0, 403, 404, 405, 426, 389,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 279,
	790, 0, 305, 449, 440, 441, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	0, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 797, 798, 0, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 369, 785,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 0, 382, 410, 273, 401, 775, 393,
	251, 774, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 425, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	411, 0, 355, 337, 0, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 788, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 0, 0, 0,
	435, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	789, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 792, 0, 0, 323, 324, 325, 326, 290,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 799, 786, 795, 787, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 335, 0, 0, 403, 404, 405, 426, 389,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 305, 449, 440, 441, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	0, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 2018, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 0, 382, 410, 273, 401, 0, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 425, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2017, 395, 0, 0, 0,
	2022, 2020, 0, 368, 0, 2021, 304, 0, 0, 0,
	411, 0, 355, 337, 0, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 0, 0, 0,
	435, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 415, 0, 0, 323, 324, 325, 326, 290,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 165, 0, 0, 403, 404, 405, 426, 389,
	0, 445, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 440, 441, 0, 0, 0, 279,
	0, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	114, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 1764, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 0, 382, 410, 273, 401, 0, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 425, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	411, 0, 355, 337, 0, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 0, 0, 0,
	435, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 415, 0, 0, 323, 324, 325, 326, 290,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 134, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 165, 0, 0, 403, 404, 405, 426, 389,
	0, 445, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 440, 441, 0, 0, 0, 279,
	0, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	114, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 1755, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 0, 382, 410, 273, 401, 0, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 425, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	411, 0, 355, 337, 0, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 0, 0, 0,
	435, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 415, 0, 0, 323, 324, 325, 326, 290,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 134, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 165, 0, 0, 403, 404, 405, 426, 389,
	0, 445, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 449, 440, 441, 0, 0, 0, 279,
	0, 0, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	114, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 0, 382, 410, 273, 401, 0, 393,
	251, 0, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 425, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	411, 0, 355, 337, 0, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 0, 0, 0,
	435, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 415, 0, 0, 323, 324, 325, 326, 290,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 330, 297, 298, 362, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 134, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 335, 0, 0, 403, 404, 405, 426, 389,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 0, 305, 449, 440, 441, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 436, 0, 437, 0, 0,
	0, 0, 0, 364, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 797, 798, 0, 0, 0,
	0, 256, 188, 438, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 369, 385,
	257, 360, 398, 262, 367, 252, 334, 357, 0, 0,
	249, 383, 366, 316, 299, 300, 248, 0, 352, 277,
	291, 274, 332, 0, 382, 410, 273, 401, 775, 393,
	251, 774, 392, 331, 379, 384, 317, 311, 250, 381,
	315, 310, 303, 281, 425, 295, 343, 309, 344, 296,
	321, 320, 322, 0, 0, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 0, 0,
	0, 0, 0, 368, 0, 0, 304, 0, 0, 0,
	411, 0, 355, 337, 0, 0, 0, 353, 307, 380,
	345, 386, 370, 394, 349, 346, 242, 371, 276, 318,
	253, 255, 271, 278, 280, 282, 283, 327, 328, 340,
	359, 372, 373, 374, 275, 263, 354, 264, 293, 265,
	243, 268, 267, 269, 361, 270, 245, 341, 378, 0,
	288, 350, 314, 246, 313, 342, 377, 376, 254, 402,
	408, 409, 0, 0, 414, 0, 0, 0, 422, 427,
	428, 429, 431, 432, 433, 434, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 407, 286, 239,
	240, 448, 272, 333, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 329, 406, 0, 0, 0,
	435, 447, 0, 0, 0, 0, 0, 446, 339, 0,
	358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 388, 400, 417, 420, 0, 0,
	0, 0, 244, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 415, 0, 0, 323, 324, 325, 326, 290,
	0, 261, 418, 348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 412, 413, 285, 292, 430, 294, 260, 338,
	287, 397, 301, 0, 423, 0, 424, 0, 0, 0,
	0, 799, 1678, 795, 1679, 302, 308, 351, 396, 336,
	356, 258, 387, 363, 796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 237, 0, 241, 0,
	306, 0, 347, 284, 0, 0, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 0,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 0, 0, 0, 238, 233, 234,
	235, 236, 0, 0, 0, 403, 404, 405, 426, 389,
	335, 445, 0, 0, 0, 0, 0, 0, 0, 2419,
	0, 0, 0, 449, 440, 441, 0, 279, 0, 0,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 2422, 0, 0, 2421, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 1224, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1222, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1220, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 1218, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1222, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1220, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3200, 0, 187, 622, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1222, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1220, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1222, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2926, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 2087, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2089, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 2108, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1222, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3289, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 622, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3215,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 3144, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2922,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2758, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 2990, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2631,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1659,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2589, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1222, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2089, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 2124, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 1960, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 1646, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 1222, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 1558, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 1247, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 487, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 488, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 464, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 454, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 1202, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 1200, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	271, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	335, 0, 0, 403, 404, 405, 426, 389, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 0,
	305, 449, 440, 441, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 436, 0, 437, 0, 0, 0, 0,
	0, 364, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 256,
	188, 438, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 369, 385, 257, 360,
	398, 262, 367, 252, 334, 357, 0, 0, 249, 383,
	366, 316, 299, 300, 248, 0, 352, 277, 291, 274,
	332, 0, 382, 410, 273, 401, 0, 393, 251, 0,
	392, 331, 379, 384, 317, 311, 250, 381, 315, 310,
	303, 281, 425, 295, 343, 309, 344, 296, 321, 320,
	322, 0, 0, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 0, 0, 0,
	0, 368, 0, 0, 304, 0, 0, 0, 411, 0,
	355, 337, 0, 0, 0, 353, 307, 380, 345, 386,
	370, 394, 349, 346, 242, 371, 276, 318, 253, 255,
	528, 278, 280, 282, 283, 327, 328, 340, 359, 372,
	373, 374, 275, 263, 354, 264, 293, 265, 243, 268,
	267, 269, 361, 270, 245, 341, 378, 0, 288, 350,
	314, 246, 313, 342, 377, 376, 254, 402, 408, 409,
	0, 0, 414, 0, 0, 0, 422, 427, 428, 429,
	431, 432, 433, 434, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 407, 286, 239, 240, 448,
	272, 333, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 329, 406, 0, 0, 0, 435, 447,
	0, 0, 0, 0, 0, 446, 339, 0, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 365, 388, 400, 417, 420, 0, 0, 0, 0,
	244, 419, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	415, 0, 0, 323, 324, 325, 326, 290, 0, 261,
	418, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 413, 285, 292, 430, 294, 260, 338, 287, 397,
	301, 0, 423, 0, 424, 0, 0, 0, 0, 330,
	297, 298, 362, 302, 308, 351, 396, 336, 356, 258,
	387, 363, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 232, 868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 237, 0, 241, 0, 306, 0,
	347, 284, 0, 0, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 0, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 0, 0, 0, 238, 233, 234, 235, 236,
	0, 0, 0, 403, 404, 405, 426, 389, 1634, 445,
	0, 0, 0, 1596, 0, 0, 0, 0, 0, 0,
	0, 449, 440, 441, 868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 856, 0, 0,
	0, 0, 1636, 1605, 0, 0, 0, 0, 0, 0,
	0, 0, 1637, 1638, 0, 0, 0, 876, 880, 882,
	884, 886, 887, 889, 0, 894, 890, 891, 892, 893,
	0, 871, 872, 873, 874, 854, 855, 877, 1604, 857,
	0, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 869, 875, 1611, 0, 0, 0, 0, 0, 0,
	879, 881, 883, 885, 888, 0, 974, 975, 976, 973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 0,
	0, 0, 0, 0, 856, 0, 0, 0, 846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 0, 876, 880, 882, 884, 886, 887,
	889, 0, 894, 890, 891, 892, 893, 0, 871, 872,
	873, 874, 854, 855, 877, 1435, 857, 0, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 869, 875,
	0, 0, 0, 0, 0, 0, 0, 879, 881, 883,
	885, 888, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1595, 1597,
	1594, 0, 1591, 0, 0, 0, 0, 1615, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 1621, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1609, 1643,
	2198, 2199, 1610, 1612, 1614, 0, 1616, 1617, 1618, 1622,
	1623, 1624, 1626, 1629, 1630, 1631, 0, 0, 0, 0,
	0, 0, 0, 1619, 1628, 1620, 0, 0, 868, 1634,
	0, 0, 0, 0, 0, 1599, 507, 506, 513, 503,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 511,
	0, 512, 516, 0, 0, 498, 0, 1635, 0, 0,
	0, 0, 0, 1636, 0, 521, 0, 0, 0, 0,
	1431, 0, 0, 0, 0, 0, 1428, 0, 1592, 1593,
	1430, 1427, 1429, 1433, 1434, 0, 0, 0, 1432, 0,
	0, 0, 0, 0, 0, 0, 1632, 0, 0, 0,
	0, 0, 0, 0, 3306, 0, 0, 0, 525, 0,
	0, 527, 0, 1608, 1611, 0, 526, 0, 0, 0,
	1607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 0,
	0, 0, 0, 0, 1625, 0, 0, 0, 856, 0,
	0, 0, 0, 1613, 0, 1634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1640, 1639, 876, 880,
	882, 884, 886, 887, 889, 0, 894, 890, 891, 892,
	893, 1627, 871, 872, 873, 874, 854, 855, 877, 1636,
	857, 0, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 869, 875, 0, 0, 0, 1634, 0, 0,
	0, 879, 881, 883, 885, 888, 0, 0, 1601, 0,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1438, 1439, 1440, 1441, 1442, 1443, 1436, 1437, 0,
	1611, 1636, 0, 878, 0, 0, 0, 0, 870, 499,
	501, 500, 0, 1642, 0, 0, 1641, 0, 1615, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	0, 509, 0, 0, 0, 0, 0, 0, 524, 0,
	0, 0, 0, 0, 0, 502, 0, 0, 0, 1609,
	1643, 0, 1611, 1610, 1612, 1614, 0, 1616, 1617, 1618,
	1622, 1623, 1624, 1626, 1629, 1630, 1631, 1627, 0, 0,
	0, 0, 0, 0, 1619, 1628, 1620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 3045, 0, 0, 0, 1627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1615, 0, 0, 1632, 0, 504,
	508, 514, 0, 515, 517, 1621, 0, 518, 519, 520,
	0, 0, 522, 523, 1608, 0, 0, 0, 0, 0,
	0, 1607, 0, 0, 0, 1609, 1643, 0, 0, 1610,
	1612, 1614, 0, 1616, 1617, 1618, 1622, 1623, 1624, 1626,
	1629, 1630, 1631, 0, 0, 1625, 1615, 0, 0, 0,
	1619, 1628, 1620, 0, 1613, 0, 0, 1621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1609, 1643, 0,
	0, 1610, 1612, 1614, 1635, 1616, 1617, 1618, 1622, 1623,
	1624, 1626, 1629, 1630, 1631, 0, 0, 0, 0, 0,
	0, 0, 1619, 1628, 1620, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1632, 0, 0, 0, 878, 0, 0,
	0, 0, 0, 0, 0, 0, 1635, 0, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 1607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1625, 0, 0, 0, 1632, 0, 0, 0, 0,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1608, 0, 0, 0, 0, 0, 0, 1607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 1613,
}

var yyPact = [...]int{
	3317, -1000, -1000, -1000, -314, 10118, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34938,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34938,
	-312, 34388, 34388, -1000, -1000, 2263, -1000, 33838, 11250, 34938,
	294, 287, 34938, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	698, -1000, 33288, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	568, 3582, 36588, 7865, -260, -1000, 3112, -102, 2089, 820,
	858, 941, 941, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3281, 817, 32738, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3268, 415, 817, 13450, 7,
	2, 3112, 325, 258, -1000, 1012, 3331, 160, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7865,
	7865, 10118, -347, 10118, 7865, 34938, 34938, -1000, -1000, -1000,
	-1000, 568, 3582, 7865, 2089, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37154, -1000, 1307, -1000, -1000, -1000, -1000, -1000,
	2535, 1299, 2087, 514, 34938, -1000, 1298, 514, -1000, -1000,
	-1000, 3112, 3112, -1000, 34938, 34938, 75, 1583, -1000, 329,
	321, 313, 1293, -1000, -1000, -1000, -1000, -1000, -1000, 401,
	2926, -1000, 34938, 34938, 2558, 34938, -1000, 1925, 471, 37454,
	2741, 977, 689, 2576, -1000, -1000, 2534, -1000, 174, 212,
	143, 525, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 215,
	-1000, 2828, -1000, -1000, 170, -1000, -1000, 161, -1000, -1000,
	-1000, 1, -1000, -1000, -1000, -1000, -1000, -1000, -94, -1000,
	-1000, 899, 1630, 7865, -1000, 1804, -1000, 2435, -1000, -1000,
	-1000, -1000, 5054, 9548, 9548, 9548, 9548, -1000, -1000, 2395,
	7865, 2533, 2531, 2526, -1000, -1000, -1000, -1000, -1000, 1269,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1742,
	-1000, -1000, -1000, 8987, -1000, 2524, 2522, 2521, 2520, 2519,
	2517, 2516, 2514, 2513, 2512, 2506, 2503, 2502, 2483, 2266,
	10676, 2477, 2084, 2082, 2475, 2474, 2473, 2077, 2266, 2266,
	2467, 2462, 2461, 2459, 2458, 2457, 2454, 2453, 2452, 2450,
	2447, 2446, 2445, 2441, 2440, 2438, 2431, 2430, 2423, 2422,
	2409, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1108, -1000, 2407, 2721, 2855, 2328,
	2892, 2821, 2810, 2806, 2802, 1889, -1000, -1000, 71, -1000,
	-122, -1000, -1000, 819, -1000, 798, -1000, 34938, 34938, 34938,
	723, 122, 565, 565, 565, 565, 565, 676, 565, 688,
	682, 681, 565, -1000, -121, -1000, -1000, -1000, -1000, -1000,
	-1000, 1579, 1573, 2644, 778, -1000, -1000, -1000, -1000, 1130,
	34938, -1000, 2335, 1401, 1401, 2852, 498, 497, 482, 1401,
	348, -1000, 1572, 1572, 1572, 1572, 1401, 358, 458, 2855,
	2855, -12, 1572, -6, 1401, 1401, -6, 1401, 1401, 1401,
	139, -303, -1000, -1000, -1000, 1572, 1572, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2826, 2816, 568, 568, 34938, 120,
	34938, 568, 568, 568, 571, -38, 36038, 35488, 1925, 453,
	451, 1141, 1540, -1000, 1456, 34938, 34938, 1456, 1456, 17888,
	17338, -1000, 34938, -1000, 2855, 2328, -1000, 2243, 3000, 2242,
	2328, 568, 568, 568, 568, 568, 150, 568, 568, 568,
	568, 34938, 34938, 32188, 568, 568, 6737, 6737, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10118, 1749, 1862,
	159, -63, -310, 188, -1000, -1000, 34938, 2705, 146, -1000,
	-1000, -1000, 2273, -1000, 2334, 2334, 2334, 2334, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2386, 2406, -1000,
	-1000, 2333, 2333, 2333, 2273, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2358, 2358, 2381, 2381, 2358, 34938, 7865, 34938, 2724, 327,
	2405, -1000, 34938, 310, 2855, 2721, 2855, -1000, -1000, 1265,
	1888, 2076, -1000, -1000, 329, 1484, -1000, 933, -1000, -1000,
	-1000, -1000, 34938, -94, 316, -1000, -1000, 2057, 2403, -1000,
	479, 972, 1224, -1000, 165, 3044, 27788, 1925, 27788, 34938,
	-1000, -1000, -1000, -1000, -1000, -1000, -1, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	158, -1000, 7865, 7865, 7865, 7865, 7865, -1000, 528, 8426,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 9548, 9548, 9548,
	9548, 9548, 9548, 9548, 9548, 9548, 9548, 9548, 9548, 2394,
	1665, 9548, 9548, 9548, 9548, 3000, 2861, 1136, 229, -1000,
	-1000, -1000, -1000, -1000, 1603, 1630, 7865, 7865, 7865, 34938,
	-1000, -1000, 37158, 7865, 7865, 374, 7865, 2788, 7865, 7865,
	7865, 2241, 3932, 34938, 7865, -1000, 2237, 2236, -1000, -1000,
	1771, 7865, -1000, -1000, 7865, -1000, -1000, 7865, 9548, 7865,
	-1000, -1000, -1000, 1102, 2788, 2788, 1542, 7865, 7865, 2788,
	2788, 2788, 1434, 2788, 2788, 2788, 2788, 2788, 2788, 2788,
	2788, 2228, 2224, 2216, 2855, -260, 6176, -1000, -266, 2721,
	7865, -1000, -1000, 7865, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2074, 2073, -322, -47, 816, 802, 811, -1000,
	2780, -1000, 2402, 2401, 1264, 565, -1000, 565, 565, -159,
	34938, 1613, 27788, 34938, 34938, 1925, 34938, 34938, 565, 565,
	565, 34938, -1000, 2667, 27788, 2651, 571, -1000, 34938, 1130,
	2778, 34938, 2912, 9548, 9548, -1000, 31638, 1572, 1401, 1401,
	-1000, -1000, 34938, -1000, -1000, -1000, 1572, 34938, 1572, 1572,
	2912, 1572, -1000, -1000, -1000, 1401, 1401, -1000, -1000, -1000,
	-1000, 1572, 1572, -1000, -1000, 2912, 34938, -2, 2912, 2912,
	-10, -1000, -1000, -1000, 34938, 34938, 565, 34938, -1000, 34938,
	34938, -1000, -1000, 34938, 34938, 37162, 34938, 31088, 2814, -1000,
	27788, 34938, 34938, 25588, -1000, 1099, -1000, -54, -1000, -64,
	-38, 1456, -38, 1456, -1000, 478, 519, 16230, 413, 27788,
	4493, -1000, -1000, 1456, 1456, 4493, 4493, 1262, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1126, -1000, 187, 2721, -1000,
	-1000, -1000, -1000, -1000, 34938, 34938, 27788, 1925, 34938, 568,
	34938, 34938, 34938, 34938, -1000, 2400, -1000, 2737, 34938, 34938,
	1072, -1000, -1000, 12900, 1230, 1072, -1000, 1619, -1000, 7865,
	10118, -281, 7865, 10118, 10118, 7865, 10118, -1000, 7865, 140,
	-1000, -1000, -1000, -1000, 1886, -1000, 1885, -1000, -1000, -1000,
	2062, 2062, -1000, 1884, -1000, -1000, -1000, -1000, 1872, -1000,
	-1000, 1868, -1000, -1000, -1000, 2215, 899, -1000, 2060, 2573,
	-261, -1000, 15120, 34938, 34938, -1000, -1000, -261, -1000, 14560,
	34938, 2721, -1000, 2721, 34938, -1000, 2851, -1000, 329, 268,
	-1000, -1000, -1000, -1000, -1000, -1000, 1229, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1120, -1000, 34938, -1000,
	-1000, 165, 27788, 28888, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 193, -1000, -1000, 167, -1000, 664, 100, 1469, -1000,
	-1000, 125, 169, 79, 725, 1630, -1000, 1622, 1622, 1657,
	-1000, 476, -1000, -1000, -1000, -1000, 2395, -1000, -1000, -1000,
	1617, 2309, -1000, 1691, 1691, 1278, 1278, 1278, 1278, 1278,
	1738, 1738, -1000, -1000, -1000, 5054, 2394, 9548, 9548, 9548,
	9548, 534, 534, 3790, 3733, -1000, 7865, 1599, -1000, 7865,
	2294, 2071, 1044, 1222, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2209, 2208, 1883, 2924, 2204, 7865,
	-1000, -1000, 1464, 1461, 1460, -1000, 2137, 7304, -1000, -1000,
	-1000, 2199, 1220, 2190, -1000, -1000, -1000, 2186, 1447, 1014,
	2179, 2356, 2177, 1118, 7865, 7865, 7865, 2176, 1433, 1415,
	7865, 7865, 7865, 7865, 2172, 7865, 7865, 7865, 7865, 7865,
	7865, 7865, 7865, 25, 25, 25, -1000, -1000, 1411, -1000,
	1630, -1000, 2058, -1000, 1295, 1117, -1000, 1707, -1000, -1000,
	-309, 2028, -1000, -1000, 809, 795, 787, 34938, 954, 11800,
	34938, 34938, 34938, 34938, 565, 135, -1000, 2729, 1059, -1000,
	100, -113, 305, 907, 2553, 2914, 34938, 34938, 34938, 2775,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 30538, -1000,
	2393, 1410, -1000, -1000, 7865, -1000, -1000, 2550, 34938, 34938,
	2912, 2912, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34938,
	2912, 2912, 1401, 1572, -1000, -1000, 1572, -1000, -1000, 1572,
	-1000, 1216, -1000, 34938, -1000, -1000, -1000, 2771, 2335, 1106,
	-1000, 1341, 549, 549, 784, 440, 2889, 14000, -1000, 1376,
	1028, 660, 2695, 171, -1000, 1376, -210, 1376, 1376, 1376,
	1376, 1376, 1376, 1376, 389, 388, 1376, 1376, 1376, 1376,
	1376, 1376, 1376, 1376, 1376, 1376, 1376, 833, 1376, 1376,
	1376, 1376, 1376, -1000, 1376, 2392, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 425, 124, 2813, 213, 210, 1059, 2800,
	223, 2919, 1153, -1000, -1000, -1000, -1000, 20088, 20088, 15680,
	20088, -1000, 1486, -38, -77, -1000, -1000, 1099, 4493, 1099,
	4493, -1000, -1000, 658, -1000, -1000, 907, -1000, 34938, 34938,
	-1000, -1000, 2391, 1566, -1000, -1000, 10676, -1000, 4493, 4493,
	-1000, -1000, 20638, 34938, -1000, -108, -1000, -82, 2836, 1093,
	-1000, -1000, 1098, 907, 2566, 34938, 1093, 1093, -1000, -1000,
	11800, 34938, -1000, -1000, 2912, 6737, -1000, 25588, -1000, -1000,
	29988, -1000, 29438, 2912, 1589, -1000, 10118, 1848, 155, -1000,
	182, -316, 154, 1581, 151, 1630, -1000, -1000, 2162, 2160,
	1402, -1000, 1400, 2159, 1399, 1398, -1000, -16, -1000, 2688,
	927, -1000, 2390, -1000, 1393, 2641, -1000, 1080, -1000, 1563,
	1382, -1000, 927, 1379, 2638, 1080, 2836, -1000, 1211, 74,
	-1000, -1000, 34938, 2057, 1357, 28888, 966, -1000, 608, 1207,
	1201, -1000, 27788, 173, 27788, -1000, 27788, -1000, -1000, 328,
	-1000, 34938, 2708, -1000, -1000, -1000, 2028, 1551, -329, -1000,
	-1000, -1000, -1000, -1000, 1337, -1000, 534, 534, 3790, 3646,
	-1000, 9548, -1000, 9548, 2824, 1588, -1000, 7865, 1798, 37047,
	37047, 1463, 18988, 34938, -1000, -1000, 7865, 7865, -1000, 2817,
	-1000, -1000, -1000, -1000, 7865, 7865, 1812, -1000, 34938, -1000,
	-1000, -1000, -1000, 18988, -1000, 9548, -1000, 7865, 1084, 2812,
	1331, 25, 25, 25, 2769, 2717, 2685, 1325, 25, 2681,
	2660, 2554, 2549, 2538, 2500, 2480, 2397, -1000, 2387, -1000,
	-1000, 6176, -1000, -16, 7865, 7865, 7865, 2670, -1000, -1000,
	-1000, 2054, 113, -1000, 1544, -1000, -1000, -1000, 790, 153,
	2158, 1047, -1000, -1000, 34938, -1000, -1000, -1000, 2156, 1035,
	-1000, -1000, -1000, 37428, 2334, 2334, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2386, -1000, -1000, 2333, 2333,
	2333, 2273, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2358, 2358, 2381, 2381, 2358, -1000, 2335, 2335, 251,
	34938, 32, 1376, -1000, 583, 27788, 431, -1000, 34938, 1744,
	1532, 2564, 445, 2689, 34938, 2357, 2349, 2348, 281, 37428,
	34938, 1042, -1000, 1184, 3331, -1000, 34938, 1630, -1000, 1925,
	-1000, 1401, -1000, -1000, 2912, 1143, -1000, -1000, 2912, 1401,
	1401, 1572, 34938, -1000, 281, 37428, 2770, 37162, -1000, 34938,
	-1000, -1000, -1000, 738, -1000, 713, 565, 34938, 1700, 713,
	1693, 2340, -1000, -1000, 34938, 34938, 34938, 34938, -1000, -1000,
	34938, -1000, 34938, 34938, 34938, 34938, -1000, 34938, 34938, -1000,
	34938, 1686, 1684, 2733, -1000, 1376, 1376, 753, -1000, -1000,
	474, -1000, 1867, 1866, 1864, 1857, 2052, 2050, 2048, 1376,
	1376, 1852, 2047, 28338, 2045, 1003, 1851, 1844, 1843, 1873,
	2043, 1104, -1000, 2037, 1870, 1858, 1856, 34938, 2338, 1990,
	-1000, -1000, 32, 1376, 209, 34938, 1530, 583, 301, 1895,
	16788, 34938, 25588, 25588, 25588, 25588, -1000, 2625, 2603, -1000,
	2623, 2600, 2619, 34938, 25588, 2335, -1000, 28338, -1000, -1000,
	-1000, 3000, 1320, 3063, 853, 7865, -1000, -1000, -79, -90,
	-1000, -1000, -1000, 27788, 2036, 413, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2936, 34938, 34938, 517, 2153, -1000,
	2898, -1000, 1007, -1000, -1000, 1180, -1000, 2898, 1609, -315,
	10118, 1596, 1471, -1000, 7865, 10118, 7865, -282, 191, -284,
	-1000, -1000, -1000, 2034, -1000, -1000, -1000, 1841, -1000, 1839,
	43, 58, 1683, -261, 6176, 314, 34938, -261, 34938, 6176,
	-1000, 34938, 311, -261, -1000, 34938, 1828, -1000, -1000, -1000,
	2865, 27788, 1925, 1335, 27238, -1000, 168, -1000, 192, 436,
	2033, -1000, 680, 112, 2031, 2028, -1000, -1000, -1000, 9548,
	-1000, -1000, -1000, -1000, 1630, 7865, 2152, -1000, 775, 775,
	2149, 2148, -1000, 2334, 2334, -1000, 2273, 2333, 2273, 775,
	775, 2147, -1000, 2088, 2355, -1000, 2350, 2325, 7865, -1000,
	2145, 3633, 1112, -127, 25, 25, -1000, -1000, -1000, -1000,
	25, 25, 25, 25, -1000, 25, 25, 25, 25, 25,
	25, 25, 25, 527, -1000, 43, 1630, 1630, -1000, -1000,
	2687, -1000, -1000, 2028, 2027, -1000, 2025, 2022, 954, 37428,
	707, 11800, 2698, 2766, 2763, 12350, 2752, 2327, 2320, 1898,
	-1000, -1000, -1000, 26688, 424, -1000, -1000, -1000, 567, 219,
	1815, 416, -1000, 34938, 223, 2659, 1494, 2021, 34938, -1000,
	-1000, -1000, -1000, -1000, 2689, -1000, 1011, 270, 12350, 12350,
	12350, 269, 1559, -1000, 514, 1004, 1178, 25588, 34938, -1000,
	25038, 2144, -1000, 907, 2912, -1000, 34938, -1000, 2912, 2912,
	1401, -1000, 269, -1000, 338, -1000, 2668, 37428, -1000, 34938,
	-1000, 34938, -1000, 34938, 34938, 565, 7865, 2668, 34938, 602,
	-1000, -1000, 915, 244, 594, 594, 997, -1000, 2715, -1000,
	-1000, -1000, 34938, -1000, -1000, -1000, -1000, -1000, -1000, 18988,
	18988, 2794, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2014, 2009, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 34938, 1315, -1000, 1477, 1898,
	26688, 1474, 1456, 2006, 424, 1744, 1473, -1000, 1999, -1000,
	931, 34938, 34938, -1000, 1061, -1000, 1470, 2540, 2563, 2540,
	-1000, -1000, -1000, -1000, 2601, -1000, 2594, -1000, -1000, 1061,
	-1000, -1000, -1000, -1000, -1000, 853, -1000, 2834, 713, 713,
	713, 2139, -1000, -1000, -1000, 966, 2136, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2894, 2888, 26138, 2894,
	-1000, -315, 1545, -1000, 1694, 145, 1567, 34938, -1000, -1000,
	-1000, 2128, 2123, -268, 62, 2887, 2885, 2934, -1000, 2122,
	958, -261, -1000, -1000, 927, -1000, -1000, -1000, -261, -1000,
	927, -1000, -1000, 1925, -1000, 184, -1000, -1000, -1000, -1000,
	-1000, -1000, 89, -1000, 34938, -1000, 944, 105, -1000, 1630,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 7865, -1000, -1000, -1000,
	2317, -1000, -1000, 7865, 2121, 1996, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2942, -1000, 2884, -268, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 37428, -1000, 1569, 338, 338, 2112, 938, -1000,
	-1000, -1000, -1000, 338, 23938, 12350, -1000, 1994, 99, -1000,
	-1000, -1000, 1993, 1991, 1809, -1000, -1000, 1847, 1150, 116,
	-1000, -1000, -1000, -1000, -1000, -1000, 1895, 1853, 1468, -341,
	-1000, 2316, -1000, 1376, 1376, 1376, 34938, 2111, 2108, 2106,
	529, 1541, 1523, -1000, 1807, 20088, 25588, 25038, 1050, -1000,
	1156, -1000, -1000, -1000, 2912, -1000, -1000, 2912, 529, -1000,
	-1000, -1000, 34938, 277, 2296, -1000, 2290, 2546, 317, 2288,
	2285, 34938, 2205, -1000, 2668, 34938, 578, 2683, -1000, -1000,
	-1000, -1000, -1000, 322, -1000, 34938, -1000, -1000, 1235, -1000,
	18988, -1000, -1000, 1305, -1000, 1990, 1983, -1000, 99, 1982,
	4493, -1000, -1000, 2659, 1981, -1000, 34938, 931, 931, 2942,
	34938, 6176, -1000, -1000, 7865, 2283, -1000, 7865, -1000, -1000,
	-1000, -1000, -1000, 2281, 2686, -1000, -1000, -1000, -1000, -1000,
	-1000, 7865, 7865, -1000, -1000, 552, 10118, -289, 189, -1000,
	-1000, -1000, -270, 1980, -1000, -1000, 2881, 1978, 1813, 34938,
	-1000, 927, 927, 907, -1000, -1000, -10, 391, -1000, 2194,
	-1000, 2185, 25, -1000, 141, 7865, -270, -167, -1000, -1000,
	-169, -169, -172, 12350, -1000, 1271, -1000, 1376, 1376, 2105,
	-1000, -1000, 300, -1000, -1000, 218, -1000, -1000, 1790, 467,
	-1000, -1000, -1000, 1977, 1710, 1916, 23388, 18988, 19538, 1976,
	-1000, 37579, 158, 37579, 869, 1508, -1000, 1778, -1000, 1776,
	-1000, 2912, 1050, 1156, -1000, -1000, 1326, -1000, -1000, 869,
	-1000, -1000, 277, -1000, -1000, 1709, 9548, -1000, -1000, 1973,
	19538, 632, 1458, 1449, 649, 2277, -1000, 354, 2933, -1000,
	-1000, -1000, 750, 2276, -1000, 1671, 1621, -1000, 34938, -1000,
	23388, 23388, 337, 337, 23388, 23388, 2274, 594, -1000, -1000,
	9548, -1000, -1000, -1000, -1000, 1376, 1228, -1000, -1000, -1000,
	-1000, -1000, -1000, 1853, -1000, -1000, 2855, -1000, -1000, 1630,
	34938, 1630, 24488, -1000, 2880, 2877, 1630, 899, -1000, -315,
	34938, 34938, -272, 1775, -1000, 1972, 59, -1000, -1000, 906,
	-275, 41, 40, 1436, -1000, -1000, -1000, 2104, -1000, 808,
	-1000, -1000, -1000, 899, -272, 34938, -1000, 318, -1000, -1000,
	-1000, -1000, 23938, 1569, 1569, -172, 429, 1970, -1000, -1000,
	217, -1000, -1000, -1000, -1000, -1000, 104, -1000, 1388, 1267,
	-1000, 2273, 7865, -1000, -1000, -1000, -1000, -1000, 509, 37631,
	-1000, 1028, -1000, -10, 509, 442, 222, -1000, 1773, -1000,
	-1000, 2942, -1000, 435, -1000, -1000, 3790, -1000, -1000, -1000,
	-1000, -1000, -1000, 1967, 1944, -1000, -1000, -1000, -1000, -1000,
	1767, 2271, -66, 2791, 1933, -1000, -1000, 2270, 1258, 1256,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1247, 1231, 23388,
	-1000, -1000, 3790, 18988, 1376, -1000, -1000, 1212, 1209, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2267, -1000, -1000, 2875,
	-1000, 1923, 570, 47, 40, -1000, 2873, 51, 2872, 2869,
	1917, -1000, -1000, 1149, -264, 22, 16, 12, -1000, -1000,
	-1000, 7865, -1000, 2750, -1000, 353, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 87, -1000, -1000, -1000, 1916, 1915, -1000,
	23388, 2715, 2141, 315, 2867, 37579, -1000, 1376, -1000, 315,
	-1000, 278, -1000, 1372, -1000, 1766, -1000, 2855, -1000, 275,
	-1000, -1000, -1000, 2102, 7865, 2266, 1376, 2095, -163, 23388,
	2545, 2544, 2319, 2079, 1181, -1000, 18988, -1000, -1000, 22838,
	34938, 1813, -1000, 2265, 1755, 62, 48, 2866, -1000, 1813,
	2864, 1813, 1813, -1000, 1656, -1000, 20, 18, 14, -1000,
	-1000, -1000, -1000, 1912, 166, -1000, -1000, -1000, 225, -1000,
	-1000, 2715, -1000, 2863, 340, -1000, 18988, -1000, -1000, -1000,
	1754, -1000, -1000, -1000, -1000, 2018, -1000, 34938, -1000, 2562,
	-1000, 149, 1174, 225, 337, 225, 337, 225, 337, 225,
	337, 162, -1000, -1000, -1000, 1164, -1000, -1000, 2786, 18438,
	31, -1000, -1000, -1000, 1910, -1000, 1813, -1000, -1000, 1149,
	-1000, -1000, -1000, -1000, -1000, -1000, 1376, 1758, 249, -1000,
	-1000, -1000, 22288, 342, 351, 347, -1000, 475, -1000, -1000,
	-1000, 594, -1000, -1000, 2560, 2555, 2923, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 34938, -1000, 34938,
	-1000, 1145, -1000, -1000, -1000, 1155, -1000, -1000, -1000, -1000,
	-1000, 1731, -1000, 34938, -1000, 34938, 333, 1726, 9548, 2262,
	9548, 2260, 330, 2257, -1000, -1000, 2925, -1000, 2931, 734,
	734, 225, 225, 225, 225, -1000, 888, -1000, 1366, -1000,
	21738, 34938, -1000, -1000, 1127, 2252, 2862, -1000, 3294, 34938,
	2882, 34938, 2250, 1356, 9548, -1000, -1000, -1000, 1769, 363,
	-1000, 34938, 5615, -1000, 1147, -1000, -1000, 484, 341, -1000,
	1124, -1000, 1123, 21188, 1725, 2539, -1000, -1000, -1000, -1000,
	-1000, 1630, 34938, 1097, -1000, 34938, 320, -1000, -1000, -1000,
	1074, -1000, -1000, -1000, -1000, 484, 2636, -1000, 1723, -1000,
	-1000, 37453, 634, -1000, -1000, 37453, 319, -1000, 418, 2248,
	-1000, -1000, 1063, -1000, 34938, 657, 7865, -1000, 319, 37579,
	-1000, 7865, 967, -1000, 37579, 951, -1000, -1000,
}

var yyPgo = [...]int{
	0, 160, 2955, 244, 157, 3517, 81, 239, 215, 213,
	238, 3516, 3514, 3512, 2761, 2750, 3511, 3510, 3509, 3508,
	3507, 3506, 3505, 3504, 3503, 3502, 3500, 3499, 3498, 3497,
	3496, 3495, 3494, 3490, 3487, 3486, 3485, 3484, 3482, 3481,
	3480, 237, 3479, 3476, 3473, 3472, 3471, 3470, 3469, 3468,
	3467, 3466, 3465, 3463, 3462, 3461, 3460, 3458, 3455, 3454,
	3453, 3452, 3451, 3450, 3449, 3447, 3446, 3445, 3444, 3443,
	3442, 3441, 3427, 209, 3426, 2747, 3425, 3424, 3421, 3420,
	3416, 3415, 3408, 231, 3407, 3405, 3404, 3403, 3402, 3400,
	3399, 3397, 3396, 3395, 3394, 226, 3393, 3388, 3386, 3385,
	3384, 3383, 221, 3382, 154, 206, 3381, 3380, 3379, 3378,
	3375, 3371, 230, 243, 64, 3370, 44, 3369, 212, 3367,
	138, 3366, 127, 3365, 3362, 3360, 3356, 3355, 3353, 3352,
	3351, 3350, 3349, 3348, 3342, 3341, 3340, 3339, 3337, 86,
	3334, 251, 3328, 70, 3327, 3325, 115, 164, 204, 255,
	1730, 245, 248, 175, 152, 88, 3324, 2722, 3320, 140,
	220, 139, 23, 3319, 173, 3318, 133, 43, 31, 240,
	123, 56, 153, 112, 3317, 203, 95, 94, 3316, 3314,
	171, 247, 183, 3313, 129, 3312, 3310, 3308, 3306, 191,
	192, 3304, 3302, 136, 3300, 3297, 87, 3296, 69, 196,
	146, 188, 3295, 1022, 111, 114, 105, 167, 3293, 96,
	3292, 3290, 3289, 3288, 165, 3287, 3285, 126, 61, 3284,
	3282, 3280, 66, 3277, 48, 3275, 32, 3268, 62, 3267,
	3266, 3265, 3264, 3261, 3260, 3258, 3254, 3251, 3249, 3248,
	71, 3247, 3245, 15, 16, 18, 3244, 26, 3243, 150,
	3240, 3239, 3238, 80, 78, 3237, 79, 1, 54, 3236,
	217, 210, 93, 128, 3235, 424, 3234, 3233, 3232, 137,
	3231, 565, 3230, 3228, 3226, 3225, 3224, 83, 3222, 208,
	49, 3221, 116, 121, 3215, 36, 45, 180, 190, 3213,
	3212, 3211, 416, 181, 92, 29, 0, 3209, 134, 3208,
	3207, 3206, 241, 3205, 224, 218, 144, 211, 254, 172,
	3204, 3201, 65, 3200, 143, 47, 55, 122, 8, 20,
	163, 3197, 13, 169, 3196, 197, 3193, 147, 42, 125,
	3192, 3191, 27, 261, 3190, 3189, 3188, 118, 3187, 3186,
	149, 99, 3185, 3184, 3183, 3181, 34, 3179, 35, 25,
	3177, 109, 3176, 235, 3172, 249, 120, 168, 161, 132,
	216, 225, 75, 72, 3171, 1530, 131, 90, 17, 3170,
	219, 3169, 222, 110, 3167, 76, 3166, 234, 361, 199,
	3164, 166, 7, 41, 33, 3160, 9, 3158, 142, 202,
	3157, 3156, 22, 51, 3155, 19, 3154, 3152, 3151, 3148,
	5, 3147, 3145, 3144, 2, 4, 3143, 3, 200, 148,
	108, 85, 67, 3142, 3141, 46, 117, 3140, 141, 170,
	162, 3129, 89, 3127, 3125, 3122, 616, 3112, 260, 3110,
	3108, 3107, 3105, 3102, 3101, 3100, 3095, 3094, 107, 38,
	3092, 3091, 3090, 3088, 73, 130, 3087, 3086, 3084, 3079,
	37, 178, 3073, 21, 3067, 30, 28, 39, 3066, 119,
	3064, 12, 176, 3062, 3061, 14, 3060, 3055, 10, 11,
	3054, 3053, 106, 3052, 82, 24, 151, 102, 3051, 3050,
	84, 214, 124, 3048, 3046, 233, 229, 185, 3045, 314,
	228, 246, 3044, 207, 3039, 3038, 3037, 3036, 3029, 3015,
	1054, 3012, 3010, 232, 68, 100, 98, 3005, 3004, 3000,
	77, 145, 104, 101, 57, 74, 2999, 97, 195, 2998,
	177, 2996, 2982, 91, 2981, 2979, 2975, 2974, 2973, 2967,
	174, 2966, 2965, 179, 242, 2962, 2961, 2960, 2959, 227,
	189, 2958,
}

//line mysql_sql.y:10397
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parallellismOptonUnion() tree.ParallelOption {
	v, _ := st.union.(tree.ParallelOption)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 529, 537, 537, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 110, 110, 528, 528, 109, 526, 526,
	526, 527, 527, 106, 127, 126, 129, 129, 128, 128,
	125, 125, 121, 124, 124, 123, 123, 122, 117, 119,
	119, 118, 120, 120, 107, 95, 108, 471, 471, 470,
	470, 469, 469, 423, 423, 468, 468, 468, 467, 467,
	467, 466, 466, 465, 465, 464, 464, 462, 462, 463,
	461, 460, 460, 460, 458, 458, 458, 454, 454, 456,
	455, 455, 457, 449, 449, 452, 452, 450, 450, 450,
	450, 453, 448, 448, 448, 447, 447, 94, 94, 94,
	367, 367, 93, 93, 381, 381, 381, 381, 381, 379,
	379, 379, 379, 379, 379, 378, 378, 377, 377, 382,
	382, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 84, 84, 84, 84, 84, 89, 89, 89, 534,
	534, 533, 533, 535, 535, 535, 535, 536, 536, 87,
	87, 87, 88, 376, 376, 376, 85, 86, 86, 366,
	366, 371, 371, 370, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 370, 370, 370, 375, 375, 375, 373,
	373, 372, 372, 374, 374, 78, 78, 78, 81, 80,
	365, 365, 365, 365, 365, 365, 365, 365, 365, 79,
	79, 79, 79, 79, 79, 74, 74, 74, 74, 74,
	73, 73, 75, 75, 363, 363, 362, 90, 90, 91,
	531, 531, 530, 532, 532, 532, 532, 92, 98, 98,
	98, 98, 98, 98, 98, 97, 97, 100, 100, 99,
	101, 83, 83, 83, 83, 83, 83, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 496, 496, 496, 498,
	498, 300, 301, 538, 303, 299, 299, 299, 492, 492,
	493, 494, 495, 495, 495, 96, 11, 11, 11, 11,
	11, 11, 11, 11, 13, 72, 77, 248, 248, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 236, 236, 236, 231, 231, 231, 231, 232, 232,
	233, 233, 234, 234, 234, 234, 235, 235, 293, 293,
	253, 253, 253, 255, 255, 254, 252, 250, 250, 250,
	250, 250, 250, 251, 251, 251, 256, 256, 70, 76,
	76, 76, 509, 509, 71, 520, 520, 426, 426, 314,
	314, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 431, 432, 310,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 48,
	51, 47, 47, 47, 352, 352, 46, 539, 539, 288,
	288, 59, 58, 50, 60, 61, 62, 63, 64, 65,
	45, 57, 57, 57, 57, 57, 57, 57, 57, 68,
	68, 443, 443, 541, 541, 541, 66, 67, 425, 425,
	425, 56, 55, 54, 53, 52, 52, 44, 44, 43,
	43, 49, 133, 134, 307, 307, 307, 309, 309, 305,
	540, 540, 395, 395, 308, 308, 42, 42, 42, 42,
	69, 306, 306, 287, 304, 304, 304, 12, 12, 10,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 24, 25, 27, 360, 360, 357, 26,
	19, 18, 18, 21, 17, 17, 20, 22, 23, 23,
	9, 9, 9, 9, 14, 14, 15, 154, 154, 204,
	204, 504, 504, 500, 500, 501, 501, 501, 502, 502,
	503, 503, 102, 437, 437, 437, 437, 437, 437, 8,
	176, 176, 436, 436, 436, 436, 436, 436, 364, 364,
	481, 481, 481, 482, 175, 175, 170, 170, 438, 438,
	329, 483, 483, 446, 446, 445, 445, 444, 444, 173,
	173, 174, 174, 157, 157, 113, 113, 451, 451, 451,
	451, 459, 459, 422, 422, 240, 240, 280, 280, 281,
	281, 147, 147, 148, 148, 148, 148, 148, 148, 489,
	489, 491, 491, 490, 172, 172, 168, 168, 169, 169,
	169, 167, 167, 166, 165, 165, 164, 162, 162, 162,
	163, 163, 163, 180, 180, 150, 150, 150, 149, 149,
	149, 149, 149, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 151, 151, 497, 497, 497,
	427, 427, 427, 434, 434, 262, 262, 263, 263, 261,
	261, 152, 152, 153, 153, 153, 153, 260, 260, 259,
	155, 155, 161, 160, 160, 156, 156, 156, 156, 270,
	270, 269, 269, 269, 269, 105, 111, 111, 112, 179,
	179, 268, 267, 267, 267, 178, 178, 177, 177, 171,
	171, 159, 159, 159, 159, 266, 158, 264, 525, 525,
	524, 524, 523, 521, 521, 521, 522, 522, 522, 522,
	473, 473, 473, 473, 473, 294, 294, 294, 298, 298,
	297, 297, 297, 297, 297, 302, 7, 7, 7, 7,
	7, 7, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 37, 188, 189, 38, 190, 190, 191, 191, 192,
	192, 193, 194, 195, 195, 195, 195, 36, 181, 181,
	182, 182, 183, 183, 184, 185, 185, 185, 187, 186,
	35, 35, 28, 140, 140, 141, 141, 141, 143, 143,
	237, 237, 237, 142, 142, 144, 144, 144, 505, 508,
	506, 506, 510, 510, 510, 511, 511, 511, 511, 512,
	512, 29, 130, 135, 515, 515, 515, 514, 514, 516,
	516, 517, 517, 284, 284, 285, 285, 138, 139, 139,
	137, 132, 146, 146, 146, 146, 146, 131, 136, 507,
	513, 513, 513, 361, 361, 358, 359, 359, 356, 355,
	355, 355, 519, 519, 518, 518, 518, 295, 295, 30,
	351, 351, 353, 354, 354, 354, 345, 345, 345, 345,
	34, 349, 349, 350, 350, 350, 350, 350, 346, 346,
	348, 348, 344, 344, 344, 344, 344, 33, 145, 145,
	343, 343, 340, 340, 338, 338, 339, 339, 337, 337,
	337, 341, 341, 40, 40, 40, 342, 342, 32, 32,
	32, 115, 114, 114, 114, 114, 283, 283, 282, 282,
	116, 39, 216, 216, 414, 414, 409, 409, 409, 409,
	409, 429, 429, 429, 410, 410, 410, 411, 411, 411,
	413, 413, 413, 412, 412, 412, 412, 412, 428, 428,
	430, 430, 430, 383, 383, 384, 384, 384, 387, 387,
	401, 401, 402, 402, 400, 400, 407, 407, 406, 406,
	405, 405, 404, 404, 403, 403, 403, 403, 398, 398,
	397, 397, 385, 385, 385, 385, 385, 386, 386, 386,
	396, 396, 399, 399, 224, 224, 225, 225, 258, 258,
	222, 222, 223, 223, 223, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	479, 479, 480, 227, 227, 238, 238, 238, 238, 238,
	238, 226, 226, 228, 228, 205, 205, 203, 203, 196,
	196, 197, 197, 198, 198, 198, 202, 202, 201, 201,
	201, 201, 199, 199, 200, 200, 200, 200, 200, 200,
	369, 369, 476, 476, 477, 477, 472, 472, 472, 475,
	475, 475, 475, 475, 478, 478, 478, 474, 474, 206,
	278, 278, 278, 296, 296, 296, 296, 277, 277, 277,
	221, 221, 220, 220, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 368, 368, 311, 311,
	312, 312, 247, 246, 246, 246, 246, 246, 244, 245,
	243, 243, 243, 243, 243, 242, 242, 241, 241, 241,
	347, 347, 239, 239, 230, 230, 230, 229, 229, 229,
	408, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 320, 276, 276, 276, 321,
	321, 326, 326, 488, 488, 487, 207, 207, 207, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 217, 217,
	217, 392, 392, 392, 392, 393, 393, 393, 393, 394,
	394, 394, 390, 390, 391, 391, 330, 331, 331, 435,
	435, 388, 388, 389, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 442, 442, 442, 272, 272, 272, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 272, 499, 499, 499, 484, 484, 484, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	486, 486, 486, 486, 486, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 274, 274, 274,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 332, 332, 333, 333, 439,
	439, 439, 439, 439, 439, 440, 440, 441, 441, 441,
	441, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	319, 271, 271, 271, 334, 327, 327, 328, 328, 322,
	322, 322, 322, 322, 322, 322, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 323, 323,
	325, 325, 336, 336, 336, 335, 335, 335, 335, 335,
	335, 335, 219, 219, 219, 219, 316, 316, 316, 315,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 315,
	315, 209, 209, 209, 209, 213, 213, 215, 215, 215,
	215, 215, 215, 215, 215, 215, 215, 215, 215, 215,
	215, 214, 214, 214, 214, 214, 212, 212, 212, 212,
	212, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 103, 104, 104,
	211, 279, 279, 415, 415, 418, 418, 416, 416, 417,
	419, 419, 419, 420, 420, 420, 421, 421, 421, 424,
	424, 286, 286, 286, 292, 292, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 5, 6, 0, 2, 4, 0, 1,
	1, 0, 1, 5, 2, 2, 6, 9, 6, 9,
	4, 7, 8, 0, 1, 1, 2, 4, 6, 1,
	2, 4, 0, 2, 10, 10, 2, 0, 2, 1,
	3, 3, 3, 0, 2, 1, 3, 5, 0, 2,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 0, 3, 3, 0, 3, 3, 0, 1, 3,
	0, 1, 3, 0, 2, 1, 2, 3, 4, 3,
	3, 1, 0, 1, 1, 0, 1, 8, 5, 7,
	0, 3, 8, 5, 1, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 4, 1,
	3, 1, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 4, 1,
	3, 3, 1, 2, 2, 2, 1, 2, 2, 3,
	4, 4, 6, 1, 1, 1, 2, 4, 6, 1,
	4, 1, 3, 3, 4, 4, 4, 4, 3, 3,
	2, 4, 4, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 2, 4, 3,
	3, 1, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 10, 7, 4, 1, 3, 2,
	4, 5, 5, 6, 5, 5, 3, 2, 2, 1,
	3, 4, 3, 7, 5, 8, 2, 2, 1, 3,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 2, 1, 3, 2, 1, 2, 2, 1,
	2, 3, 2, 3, 3, 3, 1, 1, 7, 7,
	8, 8, 0, 4, 7, 0, 3, 0, 2, 0,
	1, 1, 1, 1, 4, 2, 2, 3, 3, 4,
	5, 3, 4, 4, 2, 2, 2, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 2, 5, 5, 0, 2, 7, 0, 1, 0,
	1, 5, 5, 3, 3, 2, 4, 4, 4, 4,
	4, 1, 1, 1, 3, 3, 1, 1, 1, 6,
	8, 0, 1, 1, 1, 1, 5, 5, 0, 1,
	1, 3, 3, 3, 4, 6, 7, 4, 4, 7,
	8, 3, 3, 3, 0, 2, 2, 0, 2, 2,
	1, 1, 1, 1, 0, 1, 4, 4, 5, 4,
	3, 1, 3, 1, 1, 3, 5, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 4, 1, 3, 1, 4,
	6, 6, 4, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	0, 1, 3, 3, 1, 3, 1, 3, 1, 3,
	4, 0, 1, 0, 1, 1, 3, 1, 1, 0,
	4, 1, 3, 2, 1, 0, 8, 0, 4, 7,
	4, 0, 2, 0, 2, 0, 2, 0, 4, 1,
	3, 1, 1, 5, 3, 4, 6, 4, 5, 2,
	3, 1, 3, 6, 0, 3, 0, 1, 2, 4,
	4, 0, 1, 3, 1, 3, 3, 0, 1, 1,
	0, 2, 2, 0, 2, 3, 3, 3, 1, 3,
	3, 3, 3, 1, 2, 2, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 7, 7, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	2, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 4, 4, 3, 2,
	2, 2, 3, 2, 3, 4, 1, 3, 4, 0,
	2, 1, 1, 2, 2, 0, 1, 2, 4, 1,
	3, 1, 3, 2, 3, 1, 4, 3, 0, 1,
	1, 2, 5, 2, 2, 2, 0, 2, 3, 3,
	0, 1, 3, 1, 3, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 12, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	9, 9, 7, 1, 2, 3, 3, 3, 0, 4,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 4,
	1, 1, 3, 4, 3, 0, 1, 1, 1, 0,
	2, 7, 8, 8, 0, 3, 3, 0, 2, 0,
	3, 0, 5, 1, 3, 0, 3, 3, 0, 2,
	9, 6, 0, 2, 2, 3, 3, 4, 4, 1,
	0, 2, 2, 1, 3, 2, 1, 3, 2, 1,
	3, 2, 0, 1, 3, 4, 3, 1, 1, 4,
	1, 3, 1, 1, 1, 1, 0, 1, 1, 1,
	11, 0, 2, 3, 2, 3, 1, 1, 1, 3,
	3, 4, 0, 2, 2, 2, 2, 6, 0, 4,
	1, 1, 0, 3, 0, 1, 1, 2, 4, 4,
	4, 0, 1, 9, 10, 8, 0, 2, 11, 9,
	11, 2, 2, 8, 4, 5, 1, 3, 0, 3,
	5, 10, 0, 2, 0, 2, 0, 3, 2, 4,
	3, 0, 2, 1, 0, 2, 3, 0, 2, 3,
	0, 2, 1, 0, 3, 2, 4, 3, 0, 1,
	0, 1, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 0, 4, 1, 3, 3, 3,
	0, 1, 1, 3, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 5, 4,
	1, 3, 3, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 1, 1, 1, 1, 7, 9,
	7, 9, 2, 1, 7, 9, 7, 9, 8, 5,
	0, 1, 0, 1, 1, 1, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 3, 3, 2, 2, 1, 5, 6, 4,
	1, 1, 1, 5, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	6, 1, 1, 1, 1, 1, 4, 4, 4, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	2, 0, 1, 6, 8, 6, 6, 5, 5, 5,
	6, 6, 6, 6, 5, 6, 6, 6, 6, 6,
	6, 6, 6, 1, 1, 1, 4, 4, 6, 8,
	6, 4, 5, 4, 4, 4, 3, 4, 6, 6,
	7, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 8,
	4, 2, 3, 2, 4, 2, 2, 4, 6, 2,
	2, 4, 6, 4, 2, 0, 1, 2, 3, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 0, 1, 1, 3, 3,
	3, 3, 3, 2, 1, 1, 3, 4, 3, 4,
	3, 4, 3, 4, 3, 4, 1, 3, 4, 4,
	5, 4, 5, 3, 4, 5, 6, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 1,
	2, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 4, 1, 2, 3, 5,
	1, 1, 3, 0, 1, 0, 3, 0, 3, 3,
	0, 3, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 1, 2, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -529, -537, -2, -5, 589, -1, -4, -104, -78,
	-7, -106, -107, -8, -102, -9, -10, -12, -82, -97,
	-99, -101, -100, -41, -11, -96, -73, -74, -84, -90,
	-93, -94, -95, -108, -103, -105, -147, -109, -110, 582,
	-79, -80, -81, -31, -30, -29, -28, -130, -135, 588,
	436, 13, 485, -14, -15, -489, -16, 254, -299, -300,
	-301, -303, -538, -42, -43, -44, -52, -53, -54, -55,
	-56, -66, -67, -68, -45, -46, -47, -50, -48, -59,
	-58, -60, -61, -62, -63, -64, -65, -49, -133, -134,
	-69, -51, -71, -70, -76, -72, -77, -132, -137, -13,
	229, -75, 75, -85, -86, -87, -88, -89, -91, -92,
	361, 367, 424, 581, 60, -148, -150, 592, 593, 157,
	158, 160, 161, -32, -33, -34, -35, -36, -37, -39,
	-38, -40, 225, 15, 521, -17, -20, -18, -21, -19,
	-26, -27, -25, -22, -24, -131, -23, -136, 249, 248,
	37, 315, 316, 317, 365, 247, 226, 14, 30, 41,
	341, -149, 81, 227, -151, 12, 597, -6, -3, -2,
	-117, -121, -125, -128, -129, -126, -127, -4, -104, 115,
	239, 583, -296, 357, 584, 586, 585, 84, 92, -289,
	-291, 361, 367, 581, 593, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 488, 568, 569, 570, 571, 516, 567, 339,
	340, 518, 266, 290, 392, 296, 303, 157, 176, 170,
	198, 190, 165, 270, 308, 271, 91, 160, 471, 105,
	448, 421, 163, 285, 287, 289, 351, 292, 291, 293,
	295, 272, 342, 186, 181, 284, 268, 179, 273, 39,
	274, 203, 275, 276, 523, 444, 338, 450, 300, 51,
	419, 180, 445, 288, 447, 205, 209, 462, 463, 174,
	175, 452, 465, 202, 246, 42, 520, 258, 466, 207,
	201, 197, 474, 304, 302, 200, 173, 196, 269, 64,
	211, 210, 212, 415, 416, 417, 418, 277, 278, 355,
	461, 193, 182, 343, 166, 22, 469, 253, 449, 368,
	279, 297, 305, 206, 208, 260, 265, 522, 423, 264,
	301, 467, 178, 257, 286, 252, 470, 167, 370, 280,
	161, 294, 464, 473, 63, 383, 172, 164, 243, 158,
	262, 267, 281, 282, 283, 514, 307, 306, 298, 194,
	259, 199, 184, 171, 195, 159, 261, 472, 384, 579,
	341, 402, 192, 189, 263, 236, 468, 451, 162, 406,
	385, 187, 309, 575, 576, 577, 356, 337, 310, 311,
	185, 250, 442, 443, 314, 412, 330, 386, 422, 393,
	387, 218, 318, 454, 456, 204, 578, 319, 320, 321,
	446, 322, 323, 324, 325, 360, 55, 57, 93, 95,
	594, 595, -374, -372, -296, 581, 367, 361, 341, 593,
	-190, -296, 596, -157, 38, -203, -296, -157, -75, -15,
	-14, -149, -150, -203, 233, -304, 23, 419, -83, 420,
	229, 81, -296, -9, -95, -8, -102, -73, -147, 424,
	-302, -296, 315, 315, -302, 233, -296, 264, 400, -426,
	239, -378, -351, 265, -377, -353, -380, -354, 31, 225,
	227, 226, 261, 15, 365, 235, 13, 12, 366, 247,
	24, 25, 27, 14, 367, 369, 28, 370, 373, 374,
	375, 41, 378, 379, 254, 84, 92, 87, 272, -189,
	-296, -328, -322, 112, 255, -324, -317, -318, -320, -468,
	-462, -315, 81, 139, 140, 147, 113, -319, -408, 35,
	115, 530, 567, 486, -272, -273, -274, -275, -276, -296,
	-463, -461, 87, 96, 99, 102, 103, 101, 100, 151,
	183, 98, 88, 152, -150, 84, -484, 539, -290, 560,
	568, 569, 570, 571, 559, 60, -433, -441, 232, -439,
	150, 188, 250, 184, 13, 145, 412, 185, 536, 556,
	488, 540, 563, 532, 533, 534, 527, 528, 529, 531,
	541, 543, 555, -442, 551, 561, 562, 549, 564, 565,
	566, 86, 85, 554, 553, 542, 537, 538, 544, 526,
	535, 545, 546, 552, 557, 558, 349, 105, 350, 351,
	478, 342, 352, 239, 419, 69, 353, 354, 355, 356,
	357, 485, 358, 70, 359, 348, 254, 402, 360, 187,
	204, 490, 489, 491, 482, 479, 477, 480, 481, 483,
	484, 547, 548, 550, -111, -112, 573, -166, -167, -265,
	11, 6, 7, 8, 9, -526, 421, 522, 87, 162,
	159, -365, 162, 111, 167, 166, -365, 318, 260, 362,
	-140, -342, 339, 402, 322, 93, 264, -345, -343, -428,
	312, 308, 234, -141, 108, 244, 243, 106, 478, 232,
	376, 303, 55, 57, -500, -501, 222, 223, 224, -491,
	511, -490, -296, 351, 95, 26, 233, 362, 260, 456,
	454, 455, 457, 458, 459, 460, -57, -443, -425, 451,
	450, -308, 443, 449, 441, 453, 444, 340, 324, 323,
	225, 590, 512, -286, 386, 422, 475, 476, 363, 423,
	462, 464, 445, 105, 191, 188, 234, 236, 233, 339,
	478, 402, 93, 322, -500, 159, 462, 464, 264, 400,
	40, -371, 412, -370, -372, 463, 474, 85, 86, 461,
	-286, 105, 442, 442, -167, -265, -166, -148, -150, -105,
	-489, 234, 339, 402, 264, 235, 233, 515, 236, 478,
	232, 315, 362, 260, 322, 93, -427, -497, 31, -434,
	219, 220, 221, 32, 33, -1, 119, 597, -322, -322,
	-6, 600, -6, -322, -296, -296, 154, -209, -213, -210,
	-212, -211, -215, -214, 188, 189, 150, 192, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 30, 204,
	250, 184, 185, 186, 187, 205, 170, 190, 519, 213,
	171, 214, 172, 215, 173, 216, 174, 175, 217, 176,
	179, 180, 181, 182, 178, 153, 81, 153, 87, -173,
	256, -203, 153, -173, -167, -166, -167, -203, -277, -296,
	421, 122, -83, -83, 420, -492, -493, -494, -496, 229,
	420, 419, 153, 272, 16, -302, -302, 79, -203, -353,
	264, -378, -351, 35, 78, 154, 237, 154, 78, 81,
	363, 339, 402, 364, 478, 233, 376, 236, 264, 377,
	339, 402, 233, 236, 478, 264, 339, 233, 236, 402,
	264, 377, 441, 442, 236, 26, 368, 371, 372, 442,
	-447, 474, 154, 111, 108, 109, 110, -322, 129, -335,
	122, 123, 124, 125, 126, 127, 128, 136, 135, 146,
	139, 140, 141, 142, 143, 144, 145, 137, 138, 132,
	112, 130, 134, 131, 114, -150, -322, -328, 60, -320,
	-320, -320, -320, -408, -326, -322, 81, 81, 81, 153,
	100, 87, -322, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, -440, 81, 81, -332, -333,
	81, 81, -315, -277, 81, 87, 87, 81, 81, 81,
	87, -333, -333, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, -167, 154, 81, -113, 38, -169,
	21, -151, -150, 20, 31, 32, 31, 32, 31, 32,
	31, 32, 96, 594, 218, 467, 521, 165, 166, 167,
	-188, -296, -190, -181, -296, 236, -141, 236, 515, 514,
	-340, 239, -340, -340, -340, -340, 235, -340, 233, 233,
	233, -340, 485, 122, 122, 58, -502, 169, 154, -491,
	-172, 81, -307, 130, 134, -307, 23, 262, 262, 262,
	-307, 302, -539, -540, 16, 132, -305, -540, -305, -305,
	-307, -541, 235, 452, 42, 263, 262, -168, -169, -168,
	446, 442, -395, 447, 448, -309, -540, -308, -307, -307,
	-308, -307, -307, -307, 233, 236, 478, 322, 591, -539,
	-539, 30, 30, -426, -426, -203, -426, 512, -287, -296,
	-426, -426, -426, -503, 238, -534, -533, 465, -536, 467,
	159, -372, 159, -372, -353, 264, 264, 154, 122, 23,
	-373, 122, 133, -372, -372, -373, -373, -226, 40, -295,
	150, -296, 87, -226, 40, -531, -530, -203, -168, -151,
	-150, 82, 82, 82, -426, -426, -426, -426, -426, -428,
	-426, -426, -426, -426, -302, -181, -190, 239, -426, -426,
	-152, -153, 141, -322, -296, -152, -3, -119, -118, 116,
	117, 119, 584, 357, 583, 587, 581, -372, 40, -421,
	384, 383, -415, -417, 81, -416, 81, -416, -416, -416,
	81, 81, -418, 81, -418, -418, -415, -419, 81, -419,
	-420, 81, -420, -419, -296, -327, -328, -296, 38, -436,
	60, -147, 81, 30, 81, -296, -437, 60, -147, 81,
	30, -168, -113, -169, 153, 96, 87, -83, 82, 154,
	-495, 102, 103, -498, 202, 194, -296, -98, 87, -7,
	-8, -9, -10, -41, -73, -147, -464, -462, 81, 31,
	411, 78, 16, -379, 233, 478, 362, 260, 236, 339,
	-377, -360, -357, -355, -295, -353, -356, -355, -382, -277,
	442, -114, 426, 425, 314, -322, -322, -322, -322, -322,
	101, 112, 337, 102, 103, -317, -336, 31, 310, 311,
	-318, -318, -318, -318, -318, -318, -318, -318, -318, -318,
	-318, -318, -325, -334, -408, 81, 132, 130, 134, 131,
	114, -320, -320, -318, -318, 82, 154, -488, -487, 116,
	-322, -322, -322, -296, -485, -486, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 353, 348, 354,
	352, 342, 360, 355, 356, 187, 509, 510, 503, 504,
	505, 506, 507, 508, -327, -327, -322, -485, -327, -271,
	32, 31, -328, -328, -328, 82, -322, -499, 335, 334,
	336, -170, -296, -327, 82, 82, 82, 96, -328, -328,
	-327, -318, -327, -486, -271, -271, -271, 141, -328, -328,
	-271, -271, -271, -271, 141, -271, -271, -271, -271, -271,
	-271, -271, -271, 82, 82, 82, -168, -112, -445, -444,
	-322, 40, 574, -113, -322, -165, -164, -322, -527, 87,
	87, 598, 468, 469, 163, 166, 165, 34, 81, 81,
	153, -340, -340, -340, 515, -505, -296, 112, -361, -358,
	-355, -296, -296, -351, -296, -296, -340, -340, -340, -203,
	-237, 52, 53, 54, -355, -142, 55, 56, -503, -490,
	34, -171, -296, -261, 17, -320, -320, -355, 264, -539,
	-307, -307, -288, -287, -309, -304, -309, -309, -261, -540,
	-307, -307, -309, -305, -261, -296, 442, -261, -261, -395,
	-306, -296, -306, -340, -287, -288, -288, -203, -203, -248,
	-249, 230, 346, 347, 228, 226, 11, 227, -257, 303,
	-341, 486, -232, -233, 76, 41, -235, 388, 381, 266,
	270, 91, 271, 421, 272, 235, 274, 275, 276, 291,
	293, 246, 277, 278, 279, 412, 280, 158, 292, 281,
	282, 283, 364, -227, 6, 325, 40, 50, 51, 435,
	434, 524, 521, 267, -505, -505, 30, 30, -361, -296,
	-296, -160, -155, -159, -156, -161, -264, -266, -158, 81,
	-203, -150, -296, 154, 466, 468, 469, -534, -373, -534,
	-373, 31, 411, -376, 411, 31, -351, -370, 462, 464,
	-366, 87, 412, -356, -375, 78, 150, -444, -373, -373,
	-375, -375, 149, 154, -532, 467, 468, 222, -113, -205,
	-203, -505, -360, -351, -296, -426, -205, -205, -296, -296,
	81, 35, -296, -296, -260, 154, -259, 16, -297, -296,
	34, 87, 153, -260, -120, -118, 118, -322, -6, 583,
	-322, -6, -6, -322, -6, -322, -424, 385, 96, 96,
	-279, 87, -279, 96, 96, 96, 82, 87, -364, 78,
	-438, -329, -483, 573, -175, 82, -170, -481, -482, -170,
	-174, -296, -438, -175, 82, -481, -113, -113, -296, 23,
	-83, -493, 153, 154, -171, -379, -359, -356, -381, 141,
	-296, -367, 154, 521, 601, 85, 237, -519, -518, 403,
	82, 154, -448, 238, 485, 87, 598, 419, 218, 101,
	337, 102, 103, -408, -328, -325, -320, -320, -318, -318,
	-323, 251, -323, 111, -322, -321, -487, 118, -322, 34,
	34, 154, 79, 153, 82, 82, 16, 16, 82, -322,
	82, 82, 82, 82, 16, 16, -322, 82, 153, 82,
	82, 82, 82, 79, 82, 154, 82, 154, -328, -322,
	-328, 82, 82, 82, -322, -322, -322, -328, 82, -322,
	-322, -322, -322, -322, -322, -322, -322, -389, 437, -389,
	-389, 154, 82, 87, 154, 22, 154, -162, 36, 37,
	-528, 595, -283, -282, 87, 164, 167, 167, 166, -189,
	-191, -192, -193, -194, -195, 132, 155, 156, -182, -183,
	-184, -185, -209, -277, 189, 192, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 250, 184, 185,
	186, 187, 205, 170, 190, 171, 172, 173, 174, 175,
	176, 179, 180, 181, 182, 178, -296, -203, -203, -203,
	-340, -508, 389, 35, -520, 154, 40, -518, 478, -138,
	314, -344, 79, -145, 16, -203, -203, -203, -216, 34,
	16, -154, -204, -296, 81, 82, 154, -322, -352, 79,
	-296, -288, -261, -261, -203, -296, -261, -261, -307, -309,
	-309, -305, 153, -287, -414, 34, -172, 154, -202, -293,
	-199, -201, 241, -312, -200, 244, -477, 242, 240, 106,
	245, 299, 107, 235, -293, -293, 241, -236, 237, 34,
	-293, -251, 235, 299, 242, 20, -250, 235, 107, -296,
	241, 245, 240, -292, 122, -286, 149, 237, 42, 364,
	-292, 525, -292, -292, -292, -292, -292, -292, -292, 273,
	273, -292, -292, -292, -292, -292, -292, -292, -292, -292,
	-292, -292, 159, -292, -292, -292, -292, -292, -292, 81,
	268, 269, -509, 389, 30, 345, 345, -520, 30, -146,
	339, 30, -267, -268, -269, -270, 67, 71, 73, 68,
	69, 70, 74, 30, 154, -294, -298, 34, -296, 87,
	-294, -150, -155, -160, -294, 81, -533, -535, 470, 467,
	473, -375, -375, 237, 81, 122, -375, -375, 40, -295,
	-530, 474, 468, -180, 23, 154, 78, -205, -182, -190,
	-261, -153, -155, -296, 87, -296, 141, -261, 119, -6,
	117, -124, -123, -122, 120, 581, 587, 119, 119, 119,
	82, 82, 82, 154, 82, 82, 82, 154, 82, 154,
	-451, 447, 39, 154, 81, 82, 154, 60, 154, 122,
	82, 154, 82, 60, -180, 153, 421, -296, -462, 82,
	-381, 154, 237, 153, 153, -357, 367, -295, -359, 20,
	521, -277, 38, -283, 122, 598, 82, -323, -323, 111,
	-320, -317, 82, 119, -322, 117, -207, -209, 383, 384,
	-207, -208, -214, 150, 188, 250, 187, 186, 184, 383,
	384, -226, -296, -322, -322, 82, -322, -322, 16, -296,
	-226, -318, -322, -167, 82, 82, -388, -389, -388, -388,
	82, 82, 82, 82, -388, 82, 82, 82, 82, 82,
	82, 82, 82, 81, -444, -451, -322, -322, -164, -163,
	43, 87, 599, 154, 122, 167, 375, 82, 154, -277,
	82, 154, -209, -172, -172, 81, -224, 521, -203, -511,
	449, 391, 401, -292, -314, -313, 341, 41, -431, 412,
	397, 398, -358, 264, -296, -517, 94, 122, 78, 329,
	330, 331, 332, -338, -339, -337, -341, -505, 81, 81,
	81, -409, 319, -209, -203, -154, -296, 16, 154, -504,
	153, -1, -296, -351, -307, -261, -540, -261, -307, -307,
	-309, -296, -409, -209, 34, -249, -206, -277, -200, -476,
	-477, -340, -296, 107, -476, 107, 81, -206, -277, -277,
	-252, -306, -277, -296, -296, -296, -255, -254, -277, -296,
	-296, -296, 107, 107, -231, 40, 47, 48, 49, -292,
	-292, 191, -234, 40, 411, 413, 414, 96, 96, 96,
	96, 87, 87, 87, -292, -292, 96, 87, -298, 87,
	-478, 166, 44, 45, 96, 96, 96, 96, 40, 87,
	-238, 40, 284, 288, 285, 286, 287, 87, 96, 40,
	96, 40, 96, 40, -296, 81, -479, -480, 87, -511,
	-292, 345, -372, 122, -314, -516, 314, -139, 91, 31,
	-176, 230, 227, -505, -363, -362, -277, -159, -159, -159,
	-159, 67, 67, 67, 72, 67, 72, 67, -269, -363,
	-161, -172, -298, 82, -525, -524, -523, -521, 75, 238,
	76, -327, 467, 471, 472, -359, -310, 87, -366, 14,
	-203, -203, -430, 294, 295, 82, -263, 18, 153, -263,
	115, -6, -120, -122, -322, -6, -322, 583, 357, 584,
	87, 96, 96, -459, 432, 427, 429, 107, -329, -446,
	-445, 60, -147, -170, -438, -482, -444, -296, 60, -147,
	-438, -296, 96, 16, -356, -351, 141, 141, -296, 368,
	-367, 87, 390, 87, 233, 599, 87, -283, -317, -322,
	82, -217, 175, 174, -217, 82, 82, -416, -416, -415,
	-418, -415, -217, -217, 82, 82, 23, 82, 82, 82,
	-322, 82, 82, 154, -435, 487, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-331, -330, 256, -459, 44, 45, -282, 87, 87, 87,
	-193, -209, 231, -184, 40, 34, 34, -196, -197, -198,
	-206, -199, -201, 34, 81, 81, -512, 91, -506, 87,
	-296, -513, 91, 392, 152, 343, 40, 393, 394, 409,
	338, 96, 96, 399, -507, -296, -146, -515, 51, 122,
	87, -203, -337, -286, 149, 275, 322, -196, -196, -196,
	-410, 321, 20, 96, 140, -173, 79, 153, -155, -204,
	-296, 141, 82, -261, -296, -261, -261, -307, -410, -147,
	-253, 44, 46, -209, -474, -296, -472, -474, -296, -472,
	-472, -340, -322, -253, -206, 237, 30, 227, -256, 327,
	328, -368, 300, 112, -368, 154, -162, -296, -226, -226,
	30, 87, 87, -205, 82, 154, 122, -512, -506, 122,
	-373, 87, -513, -517, 122, 87, 154, -176, -176, -261,
	154, 122, -178, -177, 78, 79, -179, 78, -177, 67,
	67, -261, -523, -522, 23, -477, -477, -477, 82, 82,
	-262, 19, 20, 141, -262, 119, 117, 119, 119, -296,
	82, 82, -422, 575, -455, -457, 427, 20, 20, 14,
	82, -438, -438, -351, -367, 412, -203, 154, 599, -322,
	82, -322, 82, 87, -167, 20, -422, -186, -209, -315,
	-147, -147, 82, 154, -147, -225, -258, -296, 87, -196,
	87, -510, 403, 87, 87, 96, 40, 96, 152, 395,
	-432, -139, -514, 91, 122, 598, 81, -292, -292, -292,
	-296, 82, 82, 82, -411, 255, 96, 140, 96, 140,
	96, -294, -155, -296, -261, -504, 153, -261, -261, -411,
	-277, -221, -220, -218, 101, 112, 40, 381, -219, 91,
	149, 289, 292, 291, 267, 290, -247, -311, 78, 387,
	327, 328, -341, 575, 516, 240, 106, 107, 369, -312,
	81, 81, 79, 309, 81, 81, -474, 82, -253, -277,
	40, -256, 40, 300, -254, 149, -226, 82, -480, 87,
	-510, 87, -375, -515, 87, -505, -167, -362, -444, -322,
	81, -322, 81, 67, 11, 18, -322, -328, 239, -6,
	584, 357, -240, 576, 87, 20, 87, -453, 87, -363,
	-116, -449, -395, 272, 82, 82, -388, -391, -390, -394,
	433, 301, 440, -328, -240, 520, -143, 521, -143, -224,
	-198, 82, 154, -292, -292, 82, 20, 521, 342, 40,
	96, 40, 396, 87, 102, 103, -284, -285, 87, -346,
	-348, -277, 81, -226, -228, -295, 150, 87, -222, -223,
	-257, -341, -115, -114, -222, -412, 158, 96, 140, 96,
	96, -261, -261, -412, -218, 101, -318, 87, -228, -229,
	40, 288, 284, 122, 122, -230, 40, 268, 269, -239,
	81, 299, 14, 191, 81, 107, 107, -203, -346, -346,
	-475, 329, 330, 331, 333, 332, -475, -346, -346, 81,
	-369, -368, -318, -292, 149, -514, -168, -171, -473, -296,
	240, 20, 20, -296, -296, -280, 577, 96, 87, 429,
	-423, 578, -458, 432, -452, -450, 427, 428, 429, 430,
	122, 82, -393, 114, 395, 399, -316, -319, 96, 99,
	183, 152, -280, -187, -296, -144, 59, 474, -258, -315,
	-315, -224, 87, 390, 87, 342, 599, 154, 122, 82,
	154, -415, -322, -383, 256, 154, -257, -286, -116, -383,
	-429, 166, 320, 521, 96, 140, 96, -167, -413, 166,
	320, 87, 87, 96, 81, -439, 30, 87, -347, 81,
	82, 82, 82, 82, -346, -226, -292, 82, 82, 154,
	81, 20, 87, -460, 238, -456, -457, 431, -450, 20,
	429, 20, 20, 87, -392, -393, 399, -316, -319, 573,
	438, 438, 438, 34, 299, 412, -285, 87, -349, -348,
	-162, 82, -384, 308, 20, -257, -292, -384, 320, 96,
	140, 96, -168, 320, 82, -322, -332, -292, 82, -242,
	-241, 517, -346, -349, 79, -349, 79, -349, 79, -349,
	79, 82, -226, -296, 240, -281, -296, -453, -467, 81,
	96, -455, -454, -456, 20, -453, 20, -453, -453, 111,
	439, 439, 439, 87, 368, -350, 246, 91, 521, 327,
	328, -162, 20, -385, 301, 302, -386, -399, 304, -226,
	96, 82, -296, -246, -244, -245, 78, 445, 297, 298,
	82, -475, -475, -475, -475, -247, 82, 154, -471, 30,
	82, -466, -465, -278, -461, -296, 432, 433, 87, -453,
	-392, -292, 87, 326, -277, 81, -397, 305, 81, -395,
	81, -395, 107, 330, -368, -245, 78, -244, 78, 15,
	14, -349, -349, -349, -349, -296, -470, -469, -468, 82,
	154, 153, 96, -296, -382, -387, 306, 96, -318, 81,
	-318, 81, -396, 303, 81, -243, 294, 295, 30, 166,
	-243, 154, 122, -465, -296, 82, -401, 81, 20, 82,
	-382, 82, -382, 81, 122, -318, 101, 40, 296, -469,
	40, -322, 153, -402, -400, 256, -386, 82, 82, 82,
	-382, 96, 82, -296, 82, 154, -296, -398, 307, 82,
	-400, -403, 60, 96, -407, -404, 81, -257, 258, 132,
	-407, -257, -406, -405, 306, 259, 81, 82, 154, -296,
	255, 81, -328, -405, -404, -328, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	265, 266, 267, 826, 827, 828, 829, 830, 831, 0,
	0, 0, 0, 600, 601, 0, 569, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 356, 357, 358, 359, 360, 361, 362, 363,
	0, 290, 286, 211, 212, 213, 214, 215, 297, 298,
	437, 0, 0, 0, 0, 681, -2, 58, 0, 279,
	0, 270, 270, 832, 833, 834, 835, 836, 837, 838,
	839, 840, -2, 613, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 345, 346,
	347, 341, 342, 344, 343, -2, 0, 613, 0, 0,
	0, 701, 0, 0, 718, 740, 23, 0, 7, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 0,
	0, 19, 0, 19, 0, 0, 0, 1193, 1194, 1195,
	1196, -2, 1687, 1664, 1830, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1831, 1832, 0, 263, 261, 1664, 1687, 1747, 1780, 1830,
	0, 845, 0, 659, 0, 664, 1147, 659, 291, 602,
	603, 701, 701, 567, 0, 327, 0, 1678, 331, 0,
	0, 0, 564, 321, 322, 323, 324, 325, 326, 0,
	0, 825, 0, 0, 317, 0, 285, 1738, 0, 0,
	0, 0, 0, 0, 155, 950, 157, 952, 161, 168,
	0, 0, 173, 174, 177, 178, 179, 180, 181, 0,
	185, 0, 187, 190, 0, 192, 193, 0, 196, 197,
	198, 0, 208, 209, 210, 953, 954, 955, -2, 86,
	843, 1597, 1487, 0, 1494, 1495, 1506, 1517, 1273, 1274,
	1275, 1276, 0, 0, 0, 0, 0, 1283, 1284, 0,
	1301, 1847, 1886, 0, 1291, 1292, 1293, 1294, 1295, 95,
	107, 108, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 0,
	1547, 1548, 1549, 1460, 1260, 1193, 0, 1856, 0, 1876,
	1881, 1882, 1883, 1884, 1875, 0, 0, 1445, 0, 1435,
	0, 0, -2, -2, 0, 0, 1805, -2, 1853, 1872,
	1880, 1857, 1879, 1849, 1850, 1851, 1844, 1845, 1846, 1848,
	1858, 1860, 1871, 0, 1867, 1877, 1878, 0, 0, 0,
	0, 109, 110, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1451, -2, 1453, -2,
	1456, -2, 1458, 1459, -2, 1462, 1463, 1464, -2, -2,
	1467, 1468, 1469, 1470, 1471, 1472, 1475, -2, -2, -2,
	-2, 1447, 1448, 1449, 1450, 1439, 1440, 1441, 1442, 1443,
	1444, -2, -2, -2, 701, 776, 0, -2, 0, 0,
	0, 723, 726, 729, 732, 0, 59, 60, 0, 280,
	281, 269, 271, 0, 275, 0, 268, 0, 0, 0,
	0, 0, 982, 982, 982, 982, 982, 0, 982, 0,
	0, 0, 982, 873, 0, 957, 958, 959, 980, 981,
	1039, 0, 0, 0, 618, 614, 615, 616, 617, 689,
	0, 691, 694, 544, 544, 491, 0, 0, 0, 544,
	0, 505, 497, 0, 0, 0, 544, 0, 0, 696,
	696, 0, 547, 554, 544, 544, -2, 544, 544, 544,
	0, 0, 511, 512, 513, 497, 497, 516, 517, 518,
	529, 530, 555, 1621, 0, 0, 437, 437, 0, 437,
	0, 437, 437, 437, 620, 1775, 1685, 1752, 1738, 0,
	0, 236, 1805, 241, 0, 1686, 1701, 0, 0, 1719,
	0, -2, 0, 307, 696, 0, 702, 0, 701, 0,
	0, 437, 437, 437, 437, 437, 1038, 437, 437, 437,
	437, 0, 0, 0, 437, 437, 0, 0, 741, 742,
	737, 738, 739, 743, 744, 5, 6, 19, 0, 0,
	0, 0, 0, 0, 65, 64, 0, 1598, 1616, 1552,
	1553, 1554, 1603, 1556, 1607, 1607, 1607, 1607, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 0, 0, 1596,
	1576, 1605, 1605, 1605, 1603, 1600, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1610, 1610, 1613, 1613, 1610, 0, 1485, 0, 0, 0,
	0, 663, 0, 0, 696, -2, 0, 568, 328, 1197,
	0, 0, 332, 333, 0, 0, 348, 0, 351, 336,
	337, 338, 0, 135, 0, 319, 320, 0, 0, 287,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	165, 162, 169, 172, 182, 189, 0, 201, 203, 206,
	163, 170, 175, 176, 183, 204, 164, 166, 167, 171,
	205, 207, 184, 188, 202, 186, 191, 194, 195, 200,
	0, 136, 0, 0, 0, 0, 0, 1493, 0, 0,
	1525, 1526, 1527, 1528, 1529, 1530, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1487, 0, 0, 1279,
	1280, 1281, 1282, 1285, 0, 1302, 0, 0, 0, 0,
	1546, 1550, 0, 1485, 1485, 0, 1485, 1481, 0, 0,
	0, 0, 0, 0, 1485, 1421, 0, 0, 1423, 1436,
	0, 0, 1425, 1426, 0, 1429, 1430, 1485, 0, 1485,
	1434, 1417, 1418, 0, 1481, 1481, 1481, 0, 0, 1481,
	1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481, 1481,
	1481, 0, 0, 0, 696, 0, 0, 684, 0, 665,
	0, 720, 722, 0, 724, 725, 727, 728, 730, 731,
	733, 734, 61, 0, 0, 0, 0, 273, 0, 278,
	0, 842, 0, 0, 858, 982, 874, 982, 982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 982, 982,
	982, 0, 997, 0, 0, 0, 620, 619, 0, 690,
	0, 0, 749, 0, 0, 490, 0, 497, 544, 544,
	503, 504, 499, 498, 550, 551, 547, 0, 547, 547,
	749, 0, 523, 524, 525, 544, 544, 531, 697, 532,
	533, 547, 0, 552, 553, 749, 0, 0, 749, 749,
	0, 541, 542, 543, 0, 0, 982, 0, 560, 499,
	499, 1622, 1623, 0, 0, 991, 0, 0, 0, 563,
	0, 0, 0, 0, 621, 216, 219, 0, 222, 0,
	1775, 0, 1775, 0, 229, 0, 0, 0, 0, 0,
	0, 259, 260, 0, 0, 0, 0, 250, 253, 1141,
	1142, 947, 948, 254, 255, 299, 300, 0, 665, 719,
	721, 715, 716, 717, 0, 0, 0, 0, 0, 437,
	0, 0, 0, 0, 596, 0, 598, 0, 0, 0,
	757, 751, 753, 820, 95, 757, 8, 82, 79, 0,
	19, 0, 0, 19, 19, 0, 19, 264, 0, 1619,
	1617, 1618, 1555, 1604, 0, 1581, 0, 1582, 1583, 1584,
	0, 0, 1577, 0, 1578, 1579, 1580, 1571, 0, 1572,
	1573, 0, 1574, 1575, 262, 0, 1486, 846, 0, 638,
	651, 633, 0, 640, 0, 1148, 622, 651, 624, 0,
	640, 665, 687, 665, 0, 329, 0, 334, 0, 0,
	350, 352, 353, 354, 339, 340, 565, 315, 316, 308,
	309, 310, 311, 312, 313, 314, 318, 105, 0, 288,
	289, 0, 0, 0, 149, 150, 151, 152, 153, 154,
	156, 140, 586, 588, 939, 951, 0, 942, 0, 159,
	199, 132, 0, 0, 0, 1488, 1489, 1490, 1491, 1492,
	1496, 0, 1498, 1500, 1502, 1504, 0, 1522, -2, -2,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1507, 1520, 1521, 0, 0, 0, 0, 0,
	0, 1518, 1518, 1513, 0, 1277, 0, 1299, 1303, 0,
	0, 0, 0, 96, 1480, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 0, 0, 1487, 0, 0, 0,
	1482, 1483, 0, 0, 0, 1376, 0, 0, 1382, 1383,
	1384, 0, 646, 0, 1446, 1422, 1437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 777, 0, 655,
	657, 658, 0, 685, 698, 703, 704, 707, 57, 62,
	55, 1008, 282, 283, 0, 0, 277, 0, -2, 860,
	0, 0, 0, 0, 982, 0, 888, 0, 435, 933,
	0, 0, 0, 949, 972, 978, 0, 0, 0, 1012,
	875, 880, 881, 882, 876, 877, 883, 884, 0, 692,
	0, 0, 789, 489, 0, 545, 546, 494, 1738, 499,
	749, 749, 506, 500, 507, 549, 508, 509, 510, 0,
	749, 749, 544, 547, 534, 548, 547, 537, 538, 0,
	556, 561, 557, 0, 559, 514, 515, 1014, 694, 366,
	367, 408, 408, 408, 391, 408, 0, 0, 379, 1624,
	0, 0, 0, 0, 388, 1624, 0, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 0, 0, 1624, 1624, 1624, 1624,
	1624, 1624, 1624, 1624, 1624, 1624, 1624, 0, 1624, 1624,
	1624, 1624, 1624, 1127, 1624, 0, 992, 398, 399, 400,
	401, 406, 407, 0, 432, 0, 0, 0, 435, 0,
	922, 762, 0, 763, 764, 760, 791, 815, 815, 0,
	815, 795, 1147, 0, 0, 227, 228, 217, 0, 218,
	0, 230, 231, 0, 233, 234, 235, 242, 1685, 1752,
	237, 239, 0, 0, 243, 256, 257, 258, 0, 0,
	248, 249, 0, 0, 302, 303, 305, 0, 713, 583,
	1145, 584, 585, 589, 0, 0, 592, 593, 594, 595,
	860, 0, 927, 928, 749, 0, 758, 0, 754, 821,
	0, 823, 0, 749, 0, 80, 19, 0, 73, 70,
	0, 0, 0, 0, 0, 1599, 1551, 1620, 0, 0,
	0, 1601, 0, 0, 0, 0, 63, 667, 629, 0,
	632, 648, 0, 652, 0, 0, 644, 637, 641, 0,
	0, 661, 623, 0, 0, 628, 713, 688, 1198, 0,
	335, 349, 0, 0, 0, 0, 143, 936, 0, 144,
	148, 138, 0, 0, 0, 941, 0, 938, 943, 0,
	158, 0, 0, 133, 134, 1002, 1008, 0, 0, 1497,
	1499, 1501, 1503, 1505, 0, 1508, 1518, 1518, 1514, 0,
	1509, 0, 1511, 0, 1488, 0, 1304, 0, 0, 0,
	0, 0, 0, 0, 1366, 1367, 0, 0, 1371, 0,
	1373, 1374, 1375, 1377, 0, 0, 0, 1381, 0, 1420,
	1438, 1424, 1427, 0, 1431, 0, 1433, 0, 701, 0,
	0, 1341, 1341, 1341, 0, 0, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 0, 1297,
	1298, 0, 778, 667, 0, 0, 0, 710, 708, 709,
	53, 0, 0, 1006, 0, 284, 272, 274, 0, 0,
	0, 848, 849, 851, 0, 854, 855, 856, 0, 861,
	862, 864, 865, 0, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1669, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 859, 694, 694, 1084,
	0, 895, 1624, 983, 439, 0, 0, 935, 0, 911,
	0, 0, 0, -2, 0, 0, 0, 0, 1016, 0,
	0, 0, 607, 611, 23, 695, 0, 750, 492, 0,
	493, 544, 501, 502, 749, 1147, 526, 527, 749, 544,
	544, 547, 0, 558, 1016, 0, 0, 991, 369, 0,
	1156, 1157, 409, 0, 1163, 1172, 982, 1230, 0, 1172,
	0, 0, 1174, 1175, 0, 0, 0, 0, 392, 393,
	0, 378, 0, 0, 0, 0, 377, 0, 0, 419,
	0, 0, 0, 0, 1625, 1624, 1624, 0, 386, 387,
	0, 390, 0, 0, 0, 0, 0, 0, 0, 1624,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1118, 0, 0, 0, 0, 0, 0, 0,
	1133, 1134, 895, 1624, 0, 0, 0, 439, 909, 918,
	0, 0, 0, 0, 0, 0, 782, 0, 0, 781,
	0, 0, 0, 0, 0, 694, 816, 0, 818, 819,
	793, -2, 0, 762, 798, 1485, 220, 221, 0, 0,
	226, 244, 246, 0, 0, 0, 245, 247, 251, 252,
	301, 304, 306, 683, 0, 0, 0, 1040, 0, 599,
	747, 752, 759, 822, 824, 96, 755, 747, 0, 83,
	19, 82, 74, 75, 0, 19, 0, 0, 0, 0,
	1609, 1608, 1594, 0, 1595, 1606, 1611, 0, 1614, 0,
	671, 0, 0, 651, 653, 0, 0, 651, 0, 0,
	660, 0, 0, 651, 686, 0, 0, 566, 106, 355,
	0, 0, 0, 0, 0, 587, 0, 940, 140, 0,
	0, 160, 0, 0, 0, 1008, 1484, 1510, 1512, 0,
	1519, 1515, 1278, 1286, 1300, 0, 0, 1306, 1318, 1318,
	0, 0, 1309, 1607, 1607, 1312, 1603, 1605, 1603, 1318,
	1318, 0, 97, 0, 0, 1372, 0, 0, 0, 647,
	0, 0, 0, 1339, 1341, 1341, 1347, 1342, 1348, 1349,
	1341, 1341, 1341, 1341, 1354, 1341, 1341, 1341, 1341, 1341,
	1341, 1341, 1341, 1337, 656, 671, 699, 700, 705, 706,
	0, 56, 54, 1008, 0, 276, 0, 0, 853, 0,
	0, 0, 866, 0, 0, 1149, 0, 0, 0, 899,
	896, 897, 898, 0, 930, 440, 441, 442, 443, 0,
	0, 0, 934, 0, 922, 904, 0, 0, 0, 973,
	974, 975, 976, 977, -2, 986, 0, 0, 1149, 1149,
	1149, 1024, 0, 1013, 659, 0, -2, 0, 0, 609,
	0, 0, 790, 495, 749, 519, 0, 535, 749, 749,
	544, 562, 1024, 1015, 0, 368, 410, 0, 1162, 1187,
	1173, 1187, 1231, 1187, 1187, 982, 0, 410, 0, 0,
	380, 416, 0, 0, 0, 0, 376, 413, 707, 417,
	418, 420, 0, 422, 382, 394, 395, 396, 397, 0,
	0, 0, 389, 402, 403, 404, 405, 1095, 1096, 1097,
	1100, 1101, 1102, 1103, 0, 0, 1106, 1107, 1108, 1109,
	1110, 1184, 1185, 1186, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1135, 1136, 1137, 1138, 1139, 1140, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 0, 0, 1130, 0, 899,
	0, 0, 0, 0, 930, 911, 0, 921, 0, 923,
	924, 0, 0, 630, 749, 294, 0, 785, 779, 0,
	768, 783, 784, 771, 0, 773, 0, 769, 770, 749,
	761, 792, 817, 794, 797, 799, 800, 806, 0, 0,
	0, 0, 223, 224, 225, 232, 0, 459, 238, 714,
	1146, 590, 591, 1041, 1042, 597, 745, 0, 0, 745,
	78, 81, 0, 76, 0, 0, 0, 0, 68, 66,
	1602, 0, 0, 673, 120, 0, 0, 0, 649, 0,
	654, 651, 636, 645, 635, 642, 643, 662, 651, 627,
	626, 1199, 330, 0, 937, 140, 145, 146, 147, 141,
	139, 944, 0, 946, 0, 1004, 0, 0, 1516, 1305,
	1287, 1307, 1319, 1320, 1308, 1288, 1289, 1310, 1311, 1313,
	1314, 1315, 1316, 1317, 1290, 1368, 0, 1370, 1378, 1379,
	0, 1428, 1432, 0, 0, 0, 1345, 1346, 1350, 1351,
	1352, 1353, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	701, 1338, 0, 673, 711, 712, 1007, 1009, 841, 844,
	850, 852, 0, 863, 0, 0, 0, 0, 1150, 1151,
	1153, 1154, 1155, 0, 0, 1149, 872, 0, 0, 890,
	891, 901, 0, 0, 0, 445, 446, 0, 0, 0,
	458, 454, 455, 456, 436, 929, 918, 907, 0, 0,
	917, 0, 987, 1624, 1624, 1624, 0, 0, 0, 0,
	1027, 0, 0, 1018, 0, 815, 0, 0, 749, 608,
	611, 612, 693, 496, 749, 539, 536, 749, 1027, 365,
	381, 411, 0, -2, 0, 1188, 0, 1176, 1188, 0,
	0, 1187, 0, 370, 410, 0, 0, 0, 423, 426,
	427, 424, 1226, 0, 425, 0, 415, 421, 1098, 1099,
	0, 1104, 1105, 0, 1129, 0, 0, 428, 0, 0,
	0, 429, 434, 904, 0, 919, 0, 925, 926, 701,
	0, 0, 765, 786, 0, 0, 766, 0, 767, 772,
	774, 293, 801, 0, 0, 803, 804, 805, 796, 240,
	735, 0, 0, 756, 736, 0, 19, 0, 0, 71,
	1612, 1615, 675, 0, 672, 121, 0, 0, 0, 0,
	650, 634, 625, 142, 137, 945, 123, 0, 1005, 0,
	1380, 0, 1341, 1340, 1334, 0, 675, 0, 869, 867,
	878, 878, 1084, 0, 995, 0, 1086, 1624, 1624, 0,
	900, 889, 0, 931, 932, 0, 447, 448, 0, 451,
	457, 902, 903, 0, 0, 915, 0, 0, 0, 0,
	979, -2, 0, -2, 1033, 0, 1025, 0, 1017, 0,
	1020, 749, 749, -2, 605, 610, 0, 520, 540, 1033,
	412, 1189, -2, 1202, 1204, 0, 992, 1207, 1208, 0,
	0, 0, 0, 0, 0, 1252, 1216, 0, 0, 1220,
	1221, 1222, 0, 0, 1225, 0, 1534, 1535, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 1170, 371, 372,
	0, 374, 375, 1227, 414, 1624, 384, 1128, 1131, 1132,
	433, 430, 431, 907, 910, 631, 696, 295, 296, 787,
	0, 780, 810, 807, 0, 0, 746, 748, 72, 77,
	0, 0, 677, 0, 674, 0, 668, 670, 131, 639,
	93, 114, 0, 0, 1369, 1419, 1344, 0, 1335, 0,
	1329, 1330, 1331, 1336, 677, 0, 870, 885, 871, 993,
	1152, 1085, 0, 0, 0, 1084, 0, 0, 444, 449,
	0, 452, 453, 908, 905, 906, 0, 913, 0, 0,
	968, 1603, 0, 988, 989, 1143, 1144, 990, 1043, -2,
	1092, 0, 999, 123, 1043, 1021, 0, 1028, 0, 1026,
	1019, 701, 606, 1030, 1203, 1205, 1206, 1209, 1210, 1211,
	1257, 1258, 1259, 0, 0, 1214, 1254, 1255, 1256, 1215,
	0, 0, 0, 0, 0, 1532, 1533, 1250, 0, 0,
	1177, 1179, 1180, 1181, 1182, 1183, 1178, 0, 0, 0,
	1169, 1171, 373, 0, 1624, 920, 292, 0, 0, 811,
	813, 808, 809, 67, 69, 84, 0, 676, 122, 0,
	85, 0, 111, 0, 124, 125, 0, 0, 0, 0,
	0, 1343, 1332, 0, 0, 0, 0, 0, 1536, 1537,
	1538, 0, 666, 0, 868, 0, 886, 887, 1087, 1088,
	1089, 994, 892, 0, 894, 450, 912, 915, 0, 961,
	0, 707, 0, 1045, 0, 991, 1094, 1624, 1001, 1045,
	1011, 0, 1023, 0, 1035, 0, 1029, 696, 364, 0,
	1032, 1212, 1213, 0, 0, 1435, 1624, 0, 1245, 0,
	961, 961, 961, 961, 0, 383, 0, 788, 802, 0,
	0, 0, 94, 98, 0, 120, 117, 0, 126, 0,
	0, 0, 0, 1003, 0, 1321, 0, 0, 0, 1325,
	1326, 1327, 1328, 0, 0, 893, 914, 916, 960, 969,
	970, 707, 998, 0, 1082, 1093, 0, 1000, 1022, 1034,
	0, 1037, 604, 1031, 1253, 0, 1219, 0, 1224, 1233,
	1246, 0, 0, 1158, 0, 1160, 0, 1164, 0, 1166,
	0, 0, 385, 812, 814, 0, 679, 669, 87, 0,
	0, 115, 116, 118, 0, 127, 0, 129, 130, 0,
	1322, 1323, 1324, 857, 879, 962, 1624, 0, 0, 966,
	967, 971, 0, 1070, 0, 0, 1076, 0, 1083, 1098,
	1036, 1217, 1223, 1232, 1234, 1235, 0, 1247, 1248, 1249,
	1251, 961, 961, 961, 961, 1168, 678, 0, 1010, 0,
	99, 0, 101, 103, 104, 1190, 112, 113, 119, 128,
	1333, 0, 964, 0, 1046, 0, 1048, 0, 0, 0,
	0, 0, 1080, 0, 1218, 1236, 0, 1237, 0, 0,
	0, 1159, 1161, 1165, 1167, 680, 88, 89, 0, 100,
	0, 0, 963, 965, 0, 1050, 0, 1071, 0, 0,
	0, 0, 0, 0, 0, 1238, 1240, 1241, 0, 0,
	1239, 0, 0, 102, 1191, 1047, 1044, 0, 1082, 1072,
	0, 1074, 0, 0, 0, 0, 1242, 1244, 1243, 90,
	91, 92, 0, 0, 1052, 0, 1068, 1073, 1075, 1077,
	0, 1081, 1079, 1192, 1051, 0, 1064, 1049, 0, 1078,
	1053, -2, 0, 1069, 1054, -2, 0, 1062, 0, 0,
	1055, 1063, 0, 1058, 0, 0, 0, 1057, 0, -2,
	1065, 0, 0, 1059, -2, 0, 1067, 1066,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 600, 597,
	123, 122, 124, 3, 601, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 598, 135, 599, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:756
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:763
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:769
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:777
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:783
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:787
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:802
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:806
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:812
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:817
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:821
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:853
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:861
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp:      yyDollar[2].str,
				IsS3:           false,
				Dir:            yyDollar[4].str,
				ParallelOption: yyDollar[5].parallellismOptonUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:870
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ParallelOption
//line mysql_sql.y:879
		{
			yyLOCAL = tree.ParallelOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ParallelOption
//line mysql_sql.y:885
		{
			yyLOCAL = tree.ParallelOption{
				Exist:        true,
				Parallellism: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:894
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:914
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:920
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:927
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:935
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:941
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:950
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:960
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:968
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:976
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:984
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:994
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1002
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1012
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1019
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1028
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1042
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1048
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1052
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1058
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1067
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1077
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1081
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1087
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1096
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1100
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1106
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1127
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1140
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1151
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1157
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1161
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1167
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1174
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1182
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1186
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1200
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1204
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1208
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1213
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1217
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1221
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1227
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1236
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1247
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1251
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1257
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1261
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1267
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1271
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1277
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1301
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1320
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1324
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1328
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1333
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1337
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1344
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1352
		{
			yyVAL.str = ""
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1359
		{
			yyVAL.str = yyDollar[3].str
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1364
		{
			yyVAL.str = "\n"
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1371
		{
			yyVAL.str = yyDollar[3].str
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1380
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1404
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1408
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1414
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1420
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1438
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1455
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1478
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1482
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1486
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1491
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1495
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1501
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1514
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1525
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1538
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1542
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1552
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1565
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1584
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1590
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1597
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1605
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1618
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1626
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1630
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1634
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1641
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1645
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1651
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1658
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1667
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1671
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1865
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1869
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1873
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1886
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1893
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1900
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1910
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1914
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1920
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1927
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1935
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1939
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1943
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1947
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1953
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1957
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1963
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1970
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1977
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1986
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2016
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2020
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2030
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2036
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2040
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2047
		{
			yyVAL.str = yyDollar[3].str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2053
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2057
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2063
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2071
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2080
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2089
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2097
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2105
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2128
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2151
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2158
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2165
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2173
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2180
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2187
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2196
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2200
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2204
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2210
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2214
		{
			yyVAL.str = yyDollar[1].str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2220
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2224
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2230
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2234
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2245
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2251
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2256
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2272
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2276
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2280
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2284
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2288
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2298
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2302
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2306
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2311
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2335
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2342
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2349
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2359
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2366
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2377
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2388
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2392
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2398
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2408
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2414
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2418
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2424
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2430
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2434
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2442
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2460
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2470
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2476
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2486
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2503
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2513
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2521
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2529
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2537
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2545
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2555
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2596
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2600
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2606
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2612
		{
			yyVAL.str = yyDollar[1].str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2617
		{
			yyVAL.str = "true"
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2618
		{
			yyVAL.str = "false"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2619
		{
			yyVAL.str = yyDollar[1].str
		}
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2624
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2641
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2657
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2668
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2677
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2681
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2687
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2694
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2703
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2713
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2722
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2732
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2742
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2751
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2759
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2763
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2767
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2771
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2775
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2784
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2790
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2794
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2798
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2802
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2806
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2810
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2814
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2818
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2823
		{
			yyVAL.str = ""
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2854
		{
			yyVAL.str = ""
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2858
		{
			yyVAL.str = string("COLUMN")
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2863
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2869
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2875
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2884
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2888
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2894
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2901
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2909
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2916
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2930
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2944
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2959
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2966
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2975
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2979
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2986
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2998
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3006
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3014
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3027
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3033
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3044
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3064
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3068
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3073
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3077
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3093
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3097
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3101
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3105
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3109
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3113
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3117
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3121
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3125
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3129
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3133
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3137
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3141
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3145
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3149
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3153
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3159
		{
			yyVAL.item = nil
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3164
		{
			yyVAL.item = nil
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3204
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3210
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3218
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3222
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3226
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3235
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3239
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3250
		{
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3254
		{
		}
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3259
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3269
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3279
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3287
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3293
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3299
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3305
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3317
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3332
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3340
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3344
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3348
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3352
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3356
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3360
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3366
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3373
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3383
		{
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3385
		{
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3394
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3404
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3413
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3417
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3421
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3427
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3433
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3439
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3445
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3454
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3464
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3476
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3480
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3486
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3498
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3512
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3518
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3525
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3534
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3538
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3543
		{
			yyVAL.str = ""
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3547
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3553
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3566
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3570
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3576
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3581
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3585
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3589
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3595
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3601
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3605
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3611
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3617
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3621
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3625
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3631
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3635
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3659
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3668
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3686
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3690
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3696
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3705
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3714
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3724
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3728
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3735
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3741
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3745
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3751
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3757
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3766
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3773
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3784
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3789
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3796
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3812
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3825
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3836
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3840
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3846
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3851
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3858
		{
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3860
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3863
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3872
		{
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3876
		{
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3881
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3890
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3897
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3903
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3911
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3918
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3925
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3945
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3955
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3959
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3965
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3972
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3978
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3986
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3993
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4000
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4019
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4023
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4032
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4036
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4042
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4051
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4055
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4061
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4065
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4071
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4075
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4081
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4086
		{
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4097
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4101
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4108
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4113
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4117
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4123
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4127
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4133
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4137
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4142
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4146
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4159
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4166
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4173
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4191
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4210
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4216
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4223
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4227
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4240
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4244
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4249
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4253
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4260
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4265
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4272
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4278
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4282
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4286
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4290
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4294
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4298
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4304
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4311
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4320
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4324
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4330
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4342
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4351
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4357
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4361
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4365
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4370
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4374
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4380
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4386
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4390
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4396
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4401
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4405
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4409
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4414
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4418
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4422
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4431
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4439
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4443
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4447
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4461
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4465
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4475
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4485
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4495
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4507
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4515
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4523
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4532
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4540
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4556
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4572
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4580
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4588
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4596
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4606
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4617
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4631
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4635
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4639
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4644
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4652
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4661
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4665
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4674
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4679
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4683
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4689
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4693
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4699
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4703
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4708
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4712
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4717
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4725
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4731
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4739
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4747
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4757
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4763
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4772
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4781
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4790
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4800
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4804
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4814
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4818
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4822
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4826
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4832
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4842
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4846
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4852
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4862
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4868
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4874
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4878
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4882
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4892
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4902
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4908
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4912
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4918
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4922
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4932
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4945
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4951
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4957
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4970
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4988
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4992
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4998
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5008
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5012
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5016
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5021
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5029
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5033
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5038
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5042
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5046
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5050
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5054
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5059
		{
			yyVAL.str = ""
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5063
		{
			yyVAL.str = yyDollar[1].str
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5067
		{
			yyVAL.str = yyDollar[2].str
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5073
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5079
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5083
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5087
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5091
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5095
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5101
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5136
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5146
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5152
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 844:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5158
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5168
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5173
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5179
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5186
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5190
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5196
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5202
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5207
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5211
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5215
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5219
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5226
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5238
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5243
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5256
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5260
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5266
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5272
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5276
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5280
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5286
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5292
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5298
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5307
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5319
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5331
		{
			yyVAL.str = yyDollar[1].str
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5335
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5341
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5345
		{
			yyVAL.str = "DEFINER = "
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5349
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5354
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5358
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5372
		{
			yyVAL.str = ""
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5380
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5386
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5396
		{
			yyVAL.str = yyDollar[1].str
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5400
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5413
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5419
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5433
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5440
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5447
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5455
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5461
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5470
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5482
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5494
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5506
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5519
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5533
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5541
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5547
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5555
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5561
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5570
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5574
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5579
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5583
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5590
		{
			yyVAL.str = yyDollar[3].str
		}
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5595
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5599
		{
			yyVAL.str = yyDollar[2].str
		}
	case 920:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5605
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5619
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5633
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5639
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5645
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5651
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5660
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5669
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5678
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5683
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5689
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5697
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5803
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5807
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5813
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5823
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5827
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5833
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5843
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5847
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5851
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5856
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5860
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5866
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5873
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5879
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5888
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5895
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5904
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5908
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5914
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5928
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5932
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5936
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5941
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5945
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5949
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5953
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5959
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5982
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6004
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6008
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6012
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6016
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6020
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6026
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6030
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6036
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6041
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6046
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6050
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6054
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6058
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6062
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6068
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6083
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6093
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6097
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6106
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6112
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6116
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6122
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6126
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6130
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6135
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6139
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6145
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6156
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6167
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6182
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6188
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6200
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6209
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6222
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6229
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6239
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6249
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6257
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6268
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6272
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6277
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6281
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6288
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6299
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6312
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6326
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6330
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6334
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6340
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6344
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6351
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6358
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6365
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6372
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6388
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6395
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6402
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6406
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6413
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6420
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6424
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6430
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6436
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6440
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6447
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6454
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6461
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6468
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6472
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6477
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6481
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6485
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6490
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6494
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6508
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6515
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6522
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6526
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6539
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6545
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6549
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6555
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6564
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6574
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6578
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6584
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6588
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6594
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6601
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6610
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6614
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6623
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6628
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6632
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6637
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6641
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6651
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6655
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6666
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6674
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6682
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6690
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6701
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6710
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6720
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6730
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6734
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6739
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6743
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6748
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6752
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6758
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6762
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6768
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6772
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6777
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6781
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6787
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6791
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6795
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6801
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6805
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6809
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6813
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6817
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6821
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6825
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6830
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6834
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6838
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6842
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6846
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6850
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6854
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6858
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6862
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6866
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6870
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6874
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6878
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6882
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6886
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6890
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6894
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6898
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6902
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6906
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6910
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6914
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6918
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6922
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6926
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6930
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6934
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6938
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6944
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6948
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6954
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6960
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6964
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6970
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6974
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6978
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6982
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6986
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6990
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7004
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7008
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7017
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7022
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7028
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7035
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7039
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7045
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7049
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7053
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7059
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7063
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7069
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7078
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7087
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7110
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7135
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7149
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7155
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7164
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7173
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7182
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7191
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7201
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7209
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7215
		{
			yyVAL.str = ""
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7219
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7229
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7235
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7241
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7260
		{
			yyVAL.str = ""
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7264
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7270
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7276
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7284
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7290
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7294
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7298
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7302
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7308
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7312
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7316
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7325
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7331
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7335
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7341
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7345
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7349
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7353
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7357
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7361
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7366
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7370
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7382
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7386
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7390
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7394
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7398
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7402
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7415
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7419
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7423
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7431
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7435
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7441
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7445
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7450
		{
			yyVAL.str = ""
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7454
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7460
		{
			yyVAL.str = ""
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7464
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1232:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7470
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7482
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7489
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7496
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7503
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7510
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7519
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7525
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7531
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7535
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7539
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7543
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7547
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7552
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7559
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7563
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7567
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7576
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7581
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7585
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7601
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7607
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7611
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7615
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7619
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7623
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7627
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7631
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7635
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7639
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7643
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7647
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7651
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7655
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7661
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7665
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7669
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7673
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7677
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7681
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7685
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7689
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7693
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7697
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7701
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7705
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7710
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7718
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7722
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7726
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7730
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7739
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7743
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7747
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7751
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7755
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7761
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7769
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7777
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7790
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7795
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7799
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7805
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7809
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7815
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7824
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7836
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7853
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7870
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7883
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7896
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7908
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7922
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7937
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7952
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7969
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7984
		{
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7991
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7995
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7999
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8005
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8009
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8013
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8017
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8023
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8027
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8031
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8037
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8045
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8059
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8066
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8071
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8075
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8080
		{
			yyVAL.str = ","
		}
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8084
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8096
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8122
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8133
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8143
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8153
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8163
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8172
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8181
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8191
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8201
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8211
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8221
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8231
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8241
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8251
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8261
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8271
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8281
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8291
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8301
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8320
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8328
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8336
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8344
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8352
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8362
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8370
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8379
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8387
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8395
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8403
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8411
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8422
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8432
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8444
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8455
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8513
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8525
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8537
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8548
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8556
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8563
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8570
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8582
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8590
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8600
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8610
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8618
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8629
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8638
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8647
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8655
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8665
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8673
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8687
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8697
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8716
		{
		}
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8718
		{
		}
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8759
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8770
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8774
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8778
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8784
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8793
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8799
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8803
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8810
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8814
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8818
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8826
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8830
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8834
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8838
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8844
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8848
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8852
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8856
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8860
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8864
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8868
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8872
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8876
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8880
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8888
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8892
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8896
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8900
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8904
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8908
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8912
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8916
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8920
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8924
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8930
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8934
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8940
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8944
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8951
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8955
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8959
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8965
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8969
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8973
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8977
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8981
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8985
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8989
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8995
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8999
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9003
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9007
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9013
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9026
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9031
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9037
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9041
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9054
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9059
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9063
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9067
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9071
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9075
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9082
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9086
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9100
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9104
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9111
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9122
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9127
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9133
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9145
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9157
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9169
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9182
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9195
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9208
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9221
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9234
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9247
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9260
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9273
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9286
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9299
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9314
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9341
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9383
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9419
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9455
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9472
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9484
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9504
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9524
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9544
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9560
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9573
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9586
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9599
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9612
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9624
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9636
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9648
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9660
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9672
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9684
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9696
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9708
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9720
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9733
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9746
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9761
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9769
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9778
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9788
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9811
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9816
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9822
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9829
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9833
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9838
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9842
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9848
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9854
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9861
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9868
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9877
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9884
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9891
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9900
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9904
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9908
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9914
		{
		}
	case 1620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9916
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9926
		{
			yyVAL.str = ""
		}
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9930
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
